<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CYQ.Data</name>
    </assembly>
    <members>
        <member name="T:CYQ.Data.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:CYQ.Data.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:CYQ.Data.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:CYQ.Data.Properties.Resources.AspxSpy2014Final">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; Debug=&quot;false&quot; trace=&quot;false&quot; validateRequest=&quot;false&quot; EnableViewStateMac=&quot;false&quot; EnableViewState=&quot;true&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.IO&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.IO.Compression&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.Diagnostics&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.Data&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.Data.OleDb&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.Data.Common&quot;%&gt;
            &lt;%@ Import Namespace=&quot;System.Data.SqlClient&quot;%&gt;
            &lt;%@ import Namespace=&quot;System.Management&quot;%&gt;
            &lt;%@ import Namespace=&quot;Microsoft.Win3 [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="T:CYQ.Data.Tool.CacheHelper">
            <summary>
            缓存帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelper.Insert(System.String,System.Object,System.String)">
            <summary>
            创建缓存项的文件依赖
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">object对象</param>
            <param name="fileName">文件绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelper.Insert(System.String,System.Object,System.Int32)">
            <summary>
            创建缓存项过期
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">object对象</param>
            <param name="expires">过期时间(分钟)</param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelper.Get(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <returns>object对象</returns>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelper.Get``1(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">T对象</typeparam>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConfigurationMaster">
            <summary>
            配置文件管理器
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConfigurationMaster.ContainsKey(System.String)">
            <summary>
            配置文件中是否包含指定的键
            </summary>
            <param name="key">键</param>
            <returns>是否包含指定的键</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConfigurationMaster.Get(System.String)">
            <summary>
            在配置文件中获取指定的键值
            </summary>
            <param name="key">键</param>
            <returns>键对应的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConfigurationMaster.Set(System.String,System.String)">
            <summary>
            在配置文件中设置指定的键值对
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="T:System.Json3">
            <summary>
            json帮助类
            </summary>
        </member>
        <member name="M:System.Json3.Encode(System.Object)">
            <summary>
            序列化对象
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:System.Json3.Decode(System.String)">
            <summary>
            反序列化对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:System.ObjectExtensions">
            <summary>
            Object Extensions.
            </summary>
        </member>
        <member name="M:System.ObjectExtensions.IfNotNull``1(``0,System.Action)">
            <summary>
            If object is not null, invoke method.
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">Object to check.</param>
            <param name="action">Delegate method.
            <example>E.g. <code>Object obj; obj.IfNotNull(new Action(() => DoSomething()));</code></example>
            </param>
            <returns>Source object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.IfNotNull``1(``0,System.Action{``0})">
            <summary>
            If object is not null, invoke method.
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">Object to check.</param>
            <param name="action">Delegate method.
            <example>E.g. <code>source => DoSomething(source);</code></example>
            </param>
            <returns>Source object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.IfNull``1(``0,System.Action)">
            <summary>
            If object is null, invoke method.
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">Object to check.</param>
            <param name="action">Delegate method.
            <example>E.g. <code>() => DoSomething();</code></example>
            </param>
            <returns>Source object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.IfNull``1(``0,System.Action{``0})">
            <summary>
            If object is null, invoke method.
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">Object to check.</param>
            <param name="action">Delegate method.
            <example>E.g. <code>source => DoSomething(source);</code></example>
            </param>
            <returns>Source object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.ConsoleOutput``1(``0,System.Object,System.Boolean)">
            <summary>
            Invoke System.Console.WriteLine() or System.Console.Write().
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">Source object.</param>
            <param name="appendObj">Append object to display.</param>
            <param name="withNewLine">Whether followed by the current line terminator.</param>
            <returns>The input object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.CloneDeep``1(``0)">
            <summary>
            Perform a deep Copy of the object.
            </summary>
            <typeparam name="T">The type of input object.</typeparam>
            <param name="source">The object instance to copy.</param>
            <returns>The copied object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.ConvertTo``1(System.Object,``0,System.Boolean)">
            <summary>
            Converts an object to the specified target type or returns the default value if those two types are not convertible.
            </summary>
            <typeparam name="T">The type of returns object.</typeparam>
            <param name="source">The value.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">true to throw any exception that occurs.-or- false to ignore any exception that occurs.</param>
            <returns>The target type object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.ConvertTo(System.Object,System.Type,System.Boolean)">
            <summary>
            Converts an object to the specified target type or returns null if those two types are not convertible.
            </summary>
            <param name="source">The value.</param>
            <param name="targetType">The type of returns object.</param>
            <param name="throwOnError">true to throw any exception that occurs.-or- false to ignore any exception that occurs.</param>
            <returns>The target type object.</returns>
        </member>
        <member name="M:System.ObjectExtensions.CopyPropertiesFrom(System.Object,System.Object)">
            <summary>
            Copies the readable and writable public property values from the target object to the source.
            </summary>
            <remarks>The source and target objects must be of the same type.</remarks>
            <param name="source">The source object.</param>
            <param name="target">The target object.</param>
        </member>
        <member name="M:System.ObjectExtensions.CopyPropertiesFrom(System.Object,System.Object,System.String[])">
            <summary>
            Copies the readable and writable public property values from the target object to the source and
            optionally allows for the ignoring of any number of properties.
            </summary>
            <remarks>The source and target objects must be of the same type.</remarks>
            <param name="source">The source object.</param>
            <param name="target">The target object.</param>
            <param name="ignoreProperties">An array of property names to ignore.</param>
        </member>
        <member name="M:System.ObjectExtensions.TryDispose(System.Object)">
            <summary>
            Tries to dispose the object if not null and if it implements IDisposable.
            </summary>
            <param name="source">The source to dispose.</param>
            <returns>true if call Dispose succeeded; otherwise, false.</returns>
        </member>
        <member name="T:CYQ.Data.Tool.MachineInfo">
             <summary>
             MachineInfo
             获取硬件信息的部分
             
             修改记录
            
            		2011.07.15 版本：1.0 JiRiGaLa	主键创建。
            		
             <author>
            		<name>JiRiGaLa</name>
            		<date>2011.07.15</date>
             </author>
             </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetIPAddress">
            <summary>
            获取当前使用的IPV4地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetIPAddressList">
            <summary>
            获取IPv4地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetWirelessIPAddressList">
            <summary>
            GetWirelessIPList 获得无线网络接口的IpV4 地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetMacAddress(System.Boolean)">
            <summary>
            获取地址
            </summary>
            <returns>地址</returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetMacAddressList">
            <summary>
            获取MAC地址列表，注意优先级高的放在了后面
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetWirelessMacAddressList">
            <summary>
            GetWirelessMacList 获得无线网络接口的MAC地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MachineInfo.GetCPUSerialNo">
            <summary>
            获取cpu序列号
            </summary>
            <returns>序列号</returns>
        </member>
        <member name="T:CYQ.Data.Tool.MailHelper">
             <summary>
            AXMail 发送电子邮件
             </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MailHelper.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送电子邮件
            </summary>
            <param name="smtpserver">SMTP服务器</param>
            <param name="userName">登录帐号</param>
            <param name="pwd">登录密码</param>
            <param name="nickName">发件人昵称</param>
            <param name="strfrom">发件人</param>
            <param name="strto">收件人</param>
            <param name="subj">主题</param>
            <param name="bodys">内容</param>
        </member>
        <member name="T:CYQ.Data.Tool.ByteUtil">
            <summary>
            Byte帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToHex(System.Byte)">
            <summary>
            转换为Hex
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToHex(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            转换为Hex
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToBase64String(System.Byte[])">
            <summary>
            转换为Base64
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToInt(System.Byte[],System.Int32)">
            <summary>
            转换为Int
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToInt64(System.Byte[],System.Int32)">
            <summary>
            转换为Int64
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.Decode(System.Byte[],System.Text.Encoding)">
            <summary>
            加密
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.Save(System.Byte[],System.String)">
            <summary>
            保存为文件
            </summary>
            <param name="data"></param>
            <param name="path"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ByteUtil.ToMemoryStream(System.Byte[])">
            <summary>
            转换为MemoryStream
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CaptureScreen">
            <summary>
            图片抓取
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CaptureScreen.BySizeGetScreen(System.Int32)">
            <summary>
            根据指定大小获取截图
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CaptureScreen.GetFullScreen">
            <summary>
            全屏截图
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CaptureScreen.GetAppointScreen">
            <summary>
            根据指针截图
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CaptureScreen.ToByteArray(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            将指定的 Image 内容写入到数组
            </summary>
            <param name="img">指定的 Image</param>
            <param name="imgFormat">指定的 ImageFormat</param>
        </member>
        <member name="M:CYQ.Data.Tool.CaptureScreen.ToImage(System.Byte[])">
            <summary>
            将指定的数组内容写入到 Image
            </summary>
            <param name="byteArray">指定的数组</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.UserState">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UserState.Nonactivated">
            <summary>
            未激活
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UserState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UserState.Locked">
            <summary>
            锁定
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.EnumHelper">
            <summary>
            枚举帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EnumHelper.Set``1(System.Enum,``0,System.Boolean)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="flag"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CYQ.Data.Tool.EnumHelper.Has(System.Enum,System.Enum)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="flag"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CYQ.Data.Tool.EnumHelper.GetDescription(System.Enum)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EnumHelper.GetDescriptions``1">
            <summary>
            取得描述信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EnumHelper.GetDescriptions``1(System.Type)">
            <summary>
            取得描述信息
            </summary>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Config">
            <summary>
            通用配置辅助类
            </summary>
            <remarks>
            一定要注意的是：ConfigurationManager.AppSettings会获取当前应用的设置，如果子目录里面的web.config有设置，则会获取最近的设置。
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.Config.GetConnSetting(System.String)">
            <summary>
            获取指定连接名称的连接字符串对像
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Config.GetAppSetting(System.String)">
            <summary>
            获取指定key的AppSettings值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Config.SetConfig``1(System.String,``0)">
            <summary>设置配置文件参数</summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:CYQ.Data.Tool.Config.SetConfig(System.String,System.String)">
            <summary>
            设置配置文件参数
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:CYQ.Data.Tool.Config.AppSettingsKeyExists(System.String,System.Configuration.Configuration)">
            <summary>
            判断appSettings中是否有此项
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Config.UpdateConfig(System.String,System.String)">
            <summary>
            设置配置文件参数
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:CYQ.Data.Tool.Config.AppSettings">
            <summary>
            应用设置
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Config.ConnectionStrings">
            <summary>
            连接字符串设置
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.FolderHelper">
            <summary>
            文件夹帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.CreateNewFolder(System.String,System.String)">
            <summary>
            在指定目录下创建指定名称文件夹
            </summary>
            <param name="ParentsPath"></param>
            <param name="NewFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.getAllFiles(System.String)">
            <summary>
            返回目录下的所有文件名
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.DirSize(System.IO.DirectoryInfo)">
            <summary>
            计算文件夹的大小
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.ViewSize(System.Int64)">
            <summary>
            把文件夹得大小转换成比较合适的表示单位
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.DelDir(System.String)">
            <summary>
            删除指定目录和内容
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.DelFile(System.String)">
            <summary>
            删除指定文件
            </summary>
            <param name="fil"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.Copy(System.String,System.String)">
            <summary>
            拷贝文件夹
            </summary>
            <param name="sourceDirectory"></param>
            <param name="targetDirectory"></param>
        </member>
        <member name="M:CYQ.Data.Tool.FolderHelper.CopyAll(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            复制目录及子文件到指定目录
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="F:WinAppTest.Form1.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:WinAppTest.Form1.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:WinAppTest.Form1.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.HideTaskmgrList">
            <summary>   
            在WINDOWS任务管理器里 不显示进程   
            </summary>   
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.Star">
            <summary>   
            开始   
            </summary>   
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.Stop">
            <summary>   
            停止   
            </summary>   
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.NetEnumControl(System.IntPtr,System.Int32)">
            <summary>   
            获取所有控件   
            </summary>   
            <param name="p_Handle"></param>   
            <param name="p_Param"></param>   
            <returns></returns>   
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.Hide(System.IntPtr)">
            <summary>   
            隐藏   
            </summary>   
            <param name="p_ListViewIntPtr"></param>   
        </member>
        <member name="M:CYQ.Data.Tool.HideTaskmgrList.HideTaskmgrListOfName(System.String)">
            <summary>   
            在WINDOWS任务管理器里隐藏一行 需要一直调用 会被任务管理器刷新出来   
            </summary>   
            <param name="p_Name">名称 如QQ.exe</param>   
        </member>
        <member name="P:CYQ.Data.Tool.HideTaskmgrList.ProcessName">
            <summary>   
            进程名称   
            </summary>   
        </member>
        <member name="T:CYQ.Data.Tool.Win32API">
            <summary>
            win32帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.OpenProcess(CYQ.Data.Tool.Win32API.ProcessAccessType,System.Int32,System.UInt32)">
            <summary>
            打开进程
            </summary>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="dwProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.CloseHandle(System.IntPtr)">
            <summary>
            关闭
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.ReadProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.UInt32,System.IntPtr@)">
            <summary>
            读内存
            </summary>
            <param name="hProcess"></param>
            <param name="lpBaseAddress"></param>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="lpNumberOfBytesRead"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.WriteProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.UInt32,System.IntPtr@)">
            <summary>
            写内存
            </summary>
            <param name="hProcess"></param>
            <param name="lpBaseAddress"></param>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="lpNumberOfBytesWritten"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.VirtualAllocEx(System.IntPtr,System.Int32,System.Int32,CYQ.Data.Tool.Win32API.MEM_COMMIT,CYQ.Data.Tool.Win32API.MEM_PAGE)">
            <summary>
            
            </summary>
            <param name="hProcess"></param>
            <param name="lpAddress"></param>
            <param name="dwSize"></param>
            <param name="flAllocationType"></param>
            <param name="flProtect"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.VirtualFreeEx(System.IntPtr,System.IntPtr,System.Int32,CYQ.Data.Tool.Win32API.MEM_COMMIT)">
            <summary>
            
            </summary>
            <param name="hProcess"></param>
            <param name="lpAddress"></param>
            <param name="dwSize"></param>
            <param name="dwFreeType"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.GetWindowText(System.IntPtr,CYQ.Data.Tool.Win32API.STRINGBUFFER@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="text"></param>
            <param name="nMaxCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.GetClassName(System.IntPtr,CYQ.Data.Tool.Win32API.STRINGBUFFER@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="ClassName"></param>
            <param name="nMaxCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.SendMessage(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32API.EnumChildWindows(System.IntPtr,CYQ.Data.Tool.Win32API.EnumWindowsProc,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWndParent"></param>
            <param name="ewp"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ImageHelper">
            <summary>
            图片帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ImageHelper.ImageToBytes(System.Drawing.Image)">
            <summary>
            Convert Image to Byte[]
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageHelper.BytesToImage(System.Byte[])">
            <summary>
            Convert Byte[] to Image
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageHelper.StreamToBytes(System.IO.Stream)">
            <summary>
             将 Stream 转成 byte[]
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageHelper.CreateImageFromBytes(System.String,System.Byte[])">
            <summary>
            Convert Byte[] to a picture and Store it in file
            </summary>
            <param name="fileName"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“T:CYQ.Data.Tool.ModuleCast”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.ModuleCast.GetCast(System.Type,System.Type)">
            <summary>
            获取要转换的当前转换类实例
            </summary>
            <param name="sourceType">要转换的源类型</param>
            <param name="targetType">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ModuleCast.#ctor(System.Type,System.Type)">
            <summary>
            以两个要转换的类型作为构造函数，构造一个对应的转换类
            </summary>
            <param name="sourceType"></param>
            <param name="targetType"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ModuleCast.Cast(System.Object,System.Object)">
            <summary>
            将源类型的属性值转换给目标类型同名的属性
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ModuleCast.Cast(System.Object,System.Object,System.String[])">
            <summary>
            将源类型的属性值转换给目标类型同名的属性，排除要过滤的属性名称
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="filter">要过滤的属性名称</param>
        </member>
        <member name="M:CYQ.Data.Tool.ModuleCast.CastObject``2(``0,``1)">
            <summary>
            转换对象
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
        </member>
        <member name="T:CYQ.Data.Tool.ModuleCast.CastProperty">
            <summary>
            转换属性对象
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ModuleCast.PropertyAccessorHandler">
            <summary>
            属性访问器
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ModuleCastExtension">
            <summary>
            对象转换扩展
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ModuleCastExtension.CopyTo``1(System.Object,``0,System.String[])">
            <summary>
            将当前对象的属性值复制到目标对象，使用浅表复制
            </summary>
            <typeparam name="T">目标对象类型</typeparam>
            <param name="source">源对象</param>
            <param name="target">目标对象，如果为空，将生成一个</param>
            <returns>复制过后的目标对象</returns>
        </member>
        <member name="T:CYQ.Data.Tool.Monitor">
            <summary>
            采用差异化抓图，应该效率高些
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Monitor.BitmapsAreEqual(System.Byte[]@,System.Byte[]@)">
            <summary>
            判断两个图的二进制数组是否相同
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Monitor.GetDesktopBitmapBytes">
            <summary>
            获得图像二进制的数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NetWorkHelper.GetHtmlByWebClient(System.String)">
            <summary>
            GET获取HTML
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NetWorkHelper.GetHtmlByHttpHelper(System.String)">
            <summary>
            返回html
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:Wangbg.DAL.PagingHelper">
            <summary>  
            双TOP二分法生成分页SQL类(支持MSSQL、ACCESS)
            </summary>  
        </member>
        <member name="M:Wangbg.DAL.PagingHelper.CreatePagingSql(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            获取分页SQL语句，排序字段需要构成唯一记录
            </summary>
            <param name="_recordCount">记录总数</param>
            <param name="_pageSize">每页记录数</param>
            <param name="_pageIndex">当前页数</param>
            <param name="_safeSql">SQL查询语句</param>
            <param name="_orderField">排序字段，多个则用“,”隔开</param>
            <returns>分页SQL语句</returns>
        </member>
        <member name="M:Wangbg.DAL.PagingHelper.CreateTopnSql(System.Int32,System.String)">
            <summary>
            获取记录总数SQL语句
            </summary>
            <param name="_n">限定记录数</param>
            <param name="_safeSql">SQL查询语句</param>
            <returns>记录总数SQL语句</returns>
        </member>
        <member name="M:Wangbg.DAL.PagingHelper.CreateCountingSql(System.String)">
            <summary>
            获取记录总数SQL语句
            </summary>
            <param name="_safeSql">SQL查询语句</param>
            <returns>记录总数SQL语句</returns>
        </member>
        <member name="M:Wangbg.DAL.SerializationHelper.Load(System.Type,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Wangbg.DAL.SerializationHelper.Save(System.Object,System.String)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.StreamHelper">
            <summary>
            Stream byte[] 文件之间转换帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StreamHelper.StreamToBytes(System.IO.Stream)">
            <summary> 
            将 Stream 转成 byte[] 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.StreamHelper.BytesToStream(System.Byte[])">
            <summary> 
            将 byte[] 转成 Stream 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.StreamHelper.StreamToFile(System.IO.Stream,System.String)">
            <summary> 
            将 Stream 写入文件 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.StreamHelper.FileToStream(System.String)">
            <summary> 
            从文件读取 Stream 
            </summary> 
        </member>
        <member name="T:CYQ.Data.Tool.StreamUtil">
            <summary>
            流帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StreamUtil.BytesToStream(System.Byte[])">
            <summary>
            byte数组转化为Stream
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StreamUtil.ReadFully(System.IO.Stream)">
            <summary>
            读取文件流转化为byte数组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StreamUtil.ReadFully(System.String)">
            <summary>
            读取文件，转化为byte数组
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StreamUtil.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。成功，返回空字符串，出错，返回错误信息
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="T:CYQ.Data.Tool.DBFHelper">
            <summary>
            DBF文件帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DBFHelper.GetTableFields(System.String,System.String)">
            <summary>
            获取DBF的字段名称
            </summary>
            <param name="path"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DBFHelper.GetSchemaTable(System.String)">
            <summary>
            获取DBF的schema
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DBFHelper.dbfExport(System.Data.DataTable,System.String,System.String,System.String,System.Windows.Forms.ProgressBar)">
            <summary>
            首先，拷贝标准库（空库）到指定的要导出的文件夹，然后读取这个拷贝后的文件到dt1，通过循环把dt的数据添加到dt1中，更新dt1
            </summary>
            <param name="dt">含有需要导出数据的DataTable</param>
            <param name="strExportPath">导出路径</param>
            <param name="strExportFile">导出文件名，要带有.dbf的后缀</param>
            <param name="strStructFile">标准库的文件名，含有路径</param>
            <param name="prgBar">用来在界面上显示导出进度</param>
        </member>
        <member name="M:CYQ.Data.Tool.DBFHelper.GetDTFromDBF(System.String)">
            <summary>
            获取DBF文件内容
            </summary>
            <param name="fullPath"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ImgHelper">
            <summary>
            缩放图片
            </summary>
            <remarks>
            http://www.cnblogs.com/xsyblogs/p/3516655.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ImgHelper.MakeThumbPic(System.String,System.String,System.Int32,System.Int32,CYQ.Data.Tool.MakeThumbnailMode,System.Drawing.Imaging.ImageFormat)">
            <summary>
            制作缩略图
            </summary>
            <param name="originalImagePath"></param>
            <param name="thumbnailPath"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="mode"></param>
            <param name="imageFormat"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ScreenCapture">
            <summary>
            截屏帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ScreenCapture.CaptureScreen">
            <summary>
            Creates an Image object containing a screen shot of the entire desktop
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ScreenCapture.CaptureWindow(System.IntPtr)">
            <summary>
            Creates an Image object containing a screen shot of a specific window
            </summary>
            <param name="handle">The handle to the window. (In windows forms, this is obtained by the Handle property)</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ScreenCapture.CaptureWindowToFile(System.IntPtr,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures a screen shot of a specific window, and saves it to a file
            </summary>
            <param name="handle"></param>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ScreenCapture.CaptureScreenToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures a screen shot of the entire desktop, and saves it to a file
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ScreenCapture.GDI32">
            <summary>
            Helper class containing Gdi32 API functions
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ScreenCapture.User32">
            <summary>
            Helper class containing User32 API functions
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.CollectionUtil">
            <summary>
            集合帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionUtil.Implode(System.Collections.ICollection,System.String)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionUtil.FormatToString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="nvc"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionUtil.FormatToString(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nvc"></param>
            <param name="format"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionUtil.FormatToString(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dic"></param>
            <param name="format"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionUtil.FormatToString``2(System.Collections.Generic.IDictionary{``0,``1},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dic"></param>
            <param name="format"></param>
            <param name="separator"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertUtil">
            <summary>
            转换帮助类库
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToByte(System.Object,System.Byte)">
            <summary>
            转换对象为byte
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToByte(System.String,System.Byte)">
            <summary>
            转换到Byte
            </summary>
            <param name="s">字符串</param>
            <param name="defaultValue">默认值</param>
            <returns>
            
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToNullableByte(System.Object)">
            <summary>
            可能为null的Byte转换
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToNullableByte(System.String)">
            <summary>
            转换可能为Null
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToByte(System.Object,System.SByte)">
            <summary>
            转换Byte
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToByte(System.String,System.SByte)">
            <summary>
            转换Byte
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtil.ToNullableSByte(System.Object)">
            <summary>
            转换可能为Null的sByte
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUITreeGridHelper">
            <summary>
            TreeGrid数据生成帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeGridHelper.GetTreeGridJson(System.Data.DataTable,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            递归将DataTable转化为适合jquery easy ui 控件tree ,combotree 的 json
            </summary>
            <param name="dt">要转化的表</param>
            <param name="pField">表中的父节点字段</param>
            <param name="pValue">表中顶层节点的值,没有 可以输入为0</param>
            <param name="kField">关键字字段名称</param>
            <param name="TextField">要显示的文本 对应的字段</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeGridHelper.TableToEasyUITreeJson(System.Data.DataTable,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            递归将DataTable转化为适合jquery easy ui 控件tree ,combotree 的 json
            该方法最后还要 将结果稍微处理下,将最前面的,"children" 字符去掉.
            </summary>
            <param name="dt">要转化的表</param>
            <param name="pField">表中的父节点字段</param>
            <param name="pValue">表中顶层节点的值,没有 可以输入为0</param>
            <param name="kField">关键字字段名称</param>
            <param name="TextField">要显示的文本 对应的字段</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUIToolbarHelper">
            <summary>
            Easyui Datagrid/Treegrid Toolbar帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIToolbarHelper.GetToolBar(System.Data.DataTable,System.String)">
            <summary>
            输出操作按钮
            </summary>
            <param name="dt">根据用户id和菜单标识码得到的用户可以操作的此菜单下的按钮集合,此DataTable包含name和icon列以及code列</param>
            <param name="pageName">当前页面名称，方便拼接js函数名</param>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelExporthelper">
            <summary>
            excel导出帮助类,可以导出多个sheet
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelExporthelper.Export(System.Collections.Generic.List{CYQ.Data.Tool.OneSheet},System.String)">
            <summary>
            导出操作
            </summary>
            <param name="list">表单集合</param>
            <param name="path">文件绝对路径</param>
            <returns>
            如果返回为空,则表示正常,如果不为空,则表示出错
            </returns>
        </member>
        <member name="T:CYQ.Data.Tool.OneSheet">
            <summary>
            单个sheet
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.OneSheet.Name">
            <summary>
            sheet名称
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.OneSheet.Ary">
            <summary>
            列名,需要与下方的数据集合字段顺序对应,直接调用会自动赋值为DT的列集合
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.OneSheet.Dt">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="T:System.TryCatchExtensions">
            <summary>
            扩展方法
            </summary>
        </member>
        <member name="M:System.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})">
            <summary>
            TryCatch 扩展
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="action">要执行的动作</param>
            <param name="failureAction">失败的委托</param>
            <param name="successAction">成功的委托</param>
            <returns>如果成功返回 True</returns>
        </member>
        <member name="M:System.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})">
            <summary>
            TryCatch 扩展
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="action">要执行的动作，只能是表达式</param>
            <param name="failureAction">失败的委托</param>
            <returns>如果成功返回 True</returns>
        </member>
        <member name="M:System.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})">
            <summary>
            TryCatch 扩展
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="source"></param>
            <param name="func">要执行的函数，只能是表达式</param>
            <param name="failureAction">失败的委托</param>
            <param name="successAction">成功的委托</param>
            <returns></returns>
        </member>
        <member name="M:System.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            TryCatch 扩展
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="source"></param>
            <param name="func">要执行的函数，只能是表达式</param>
            <param name="failureAction">失败的委托</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.GuidUtil">
            <summary>
            GUID帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.GuidUtil.New32Lower">
            <summary>
            没有连字符的32位
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.GuidUtil.New32LowerD">
            <summary>
            有连字符的32位GUID字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.GuidUtil.New32Upper">
            <summary>
            没连字符的32位
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.GuidUtil.New32UpperD">
            <summary>
            有连字符的32位GUID
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.JsonTools">
            <summary>
            json帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsonTools.ObjectToJson(System.Object)">
            <summary>
            从一个对象信息生成Json串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.JsonTools.JsonToObject(System.String,System.Object)">
            <summary>
            从一个Json串生成对象信息
            </summary>
            <param name="jsonString"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.RandomUtil">
            <summary>
            随机数帮助类
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ReflectUtil">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectUtil.GetObjectPropertyValue``1(``0,System.String)">
            <summary>
            反射获取泛型对象的一个属性的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="propertyname"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.RequestHelperT">
            <summary>
            Request操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.IsPost">
            <summary>
            判断当前页面是否接收到了Post请求
            </summary>
            <returns>是否接收到了Post请求</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.IsGet">
            <summary>
            判断当前页面是否接收到了Get请求
            </summary>
            <returns>是否接收到了Get请求</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetServerString(System.String)">
            <summary>
            返回指定的服务器变量信息
            </summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetUrlReferrer">
            <summary>
            返回上一个页面的地址
            </summary>
            <returns>上一个页面的地址</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetCurrentFullHost">
            <summary>
            得到当前完整主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetHost">
            <summary>
            得到主机头
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetRawUrl">
            <summary>
            获取当前请求的原始 URL(URL 中域信息之后的部分,包括查询字符串(如果存在))
            </summary>
            <returns>原始 URL</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.IsBrowserGet">
            <summary>
            判断当前访问是否来自浏览器软件
            </summary>
            <returns>当前访问是否来自浏览器软件</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.IsSearchEnginesGet">
            <summary>
            判断是否来自搜索引擎链接
            </summary>
            <returns>是否来自搜索引擎链接</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetUrl">
            <summary>
            获得当前完整Url地址
            </summary>
            <returns>当前完整Url地址</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryString(System.String)">
            <summary>
            采用Query方式,即get方式,获得指定Url参数的值,不进行SQL安全检查
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryString(System.String,System.Boolean)">
            <summary>
            采用Query方式,即get方式,获得指定Url参数的值
            </summary> 
            <param name="strName">Url参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryIntValue(System.String)">
            <summary>
            采用Query方式,即Get方式获取值,默认获取不到则返回0
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryIntValue(System.String,System.Int32)">
            <summary>
            返回指定URL的参数值(Int型)
            </summary>
            <param name="strName">URL参数</param>
            <param name="defaultvalue">默认值</param>
            <returns>返回指定URL的参数值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryStringValue(System.String)">
            <summary>
            采用Query方式获取值,默认获取值为空值
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryStringValue(System.String,System.String)">
            <summary>
            返回指定URL的参数值(String型)
            </summary>
            <param name="strName">URL参数</param>
            <param name="defaultvalue">默认值</param>
            <returns>返回指定URL的参数值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetPageName">
            <summary>
            获得当前页面的名称
            </summary>
            <returns>当前页面的名称</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetParamCount">
            <summary>
            返回表单或Url参数的总个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormString(System.String)">
            <summary>
            获得指定表单参数的值,默认不进行SQL安全检查
            </summary>
            <param name="strName">表单参数</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormString(System.String,System.Boolean)">
            <summary>
            获得指定表单参数的值
            </summary>
            <param name="strName">表单参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormIntValue(System.String)">
            <summary>
            返回指定表单的参数值(Int型),默认获取为0
            </summary>
            <param name="strName">表单参数</param>
            <returns>返回指定表单的参数值(Int型)</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormIntValue(System.String,System.Int32)">
            <summary>
            返回指定表单的参数值(Int型)
            </summary>
            <param name="strName">表单参数</param>
            <param name="defaultvalue">默认值</param>
            <returns>返回指定表单的参数值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormStringValue(System.String)">
            <summary>
            返回指定表单的参数值(String型),默认获取为空
            </summary>
            <param name="strName">表单参数</param>
            <returns>返回指定表单的参数值(String型)</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormStringValue(System.String,System.String)">
            <summary>
            返回指定表单的参数值(String型)
            </summary>
            <param name="strName">表单参数</param>
            <param name="defaultvalue">默认值</param>
            <returns>返回指定表单的参数值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetString(System.String)">
            <summary>
            获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetString(System.String,System.Boolean)">
            <summary>
            不区分是get还是post,即首先采用get方式获取,不成功则采用post方式获取.获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetStringValue(System.String)">
            <summary>
            不区分是Query还是Form,获取值,默认值为空
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetStringValue(System.String,System.String)">
            <summary>
            先尝试用Query方式,然后尝试用Form方式获取.获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <param name="defaultvalue">默认值</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryInt(System.String)">
            <summary>
            采用Query方式获取, 获得指定Url参数的int类型值,默认值为0
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryInt(System.String,System.Int32)">
            <summary>
            采用Query方式获取,获得指定Url参数的int类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormInt(System.String)">
            <summary>
            采用Form方式获取, 获得指定表单参数的int类型值,默认值为0
            </summary>
            <param name="strName">表单参数</param>
            <returns>表单参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormInt(System.String,System.Int32)">
            <summary>
            获得指定表单参数的int类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetInt(System.String,System.Int32)">
            <summary>
            首先尝试用Query方式,不成功则采用Form方式,获得指定Url或表单参数的int类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryDecimal(System.String,System.Decimal)">
            <summary>
            获得指定Url参数的decimal类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的decimal类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormDecimal(System.String,System.Decimal)">
            <summary>
            获得指定表单参数的decimal类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的decimal类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetQueryFloat(System.String,System.Single)">
            <summary>
            获得指定Url参数的float类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFormFloat(System.String,System.Single)">
            <summary>
            获得指定表单参数的float类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的float类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetFloat(System.String,System.Single)">
            <summary>
            获得指定Url或表单参数的float类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelperT.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="T:DESEncrypt">
            <summary>
            DES加密/解密类。
            </summary>
        </member>
        <member name="M:DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:CYQ.Data.Tool.JsonToCSharpHelper">
            <summary>
            Json字符串转C#类帮助类
            </summary>
            <example>
            <code>
            JsonToCSharpHelper helper = new JsonToCSharpHelper(true);
            try
            {
              this.txtOutPut.Text = helper.GetClassString("json字符串");
            }
            catch
            {
              this.txtOutPut.Text = "输入内容不符合规范...";
            }
            </code>
            </example>
        </member>
        <member name="F:CYQ.Data.Tool.JsonToCSharpHelper.isAddGetSet">
            <summary>
            是否添加get set
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.JsonToCSharpHelper.dataList">
            <summary>
            数据集合，临时
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsonToCSharpHelper.GetClassString(System.String)">
            <summary>
            获取类的字符串形式
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.JsonToCSharpHelper.GetTypeString(System.Type)">
            <summary>
            获取类型的字符串表示
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.JsonToCSharpHelper.GetDicType(Microsoft.JScript.JSObject,System.Int32@)">
            <summary>
            获取字典类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.JsonToCSharpHelper.GetDicListType(Microsoft.JScript.ArrayObject,System.Int32@)">
            <summary>
            读取集合类型
            </summary>
            <param name="jsArray"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NVelocityHelper.Put(System.String,System.Object)">
            <summary>
            给模板变量赋值
            </summary>
            <param name="key">模板变量</param>
            <param name="value">模板变量值</param>
        </member>
        <member name="M:CYQ.Data.Tool.NVelocityHelper.FileToString(System.String)">
            <summary>
            生成字符
            </summary>
            <param name="templatFileName">模板文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.NVelocityHelper.Display(System.String)">
            <summary>
            输出模板文件内容
            </summary>
            <param name="templateFileName">模板文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.NVelocityHelper.SaveFile(System.String,System.String)">
            <summary>
            保存根据模板生成的文件
            </summary>
            <param name="templateFileName">模板文件名称</param>
            <param name="saveFileName">新文件完全限定名称</param>
        </member>
        <member name="P:CYQ.Data.Tool.NVelocityHelper.StringTemplate">
            <summary>
            模板字符串
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.Regexlib">
            <summary>
            正则帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Regexlib.IsValidUserName(System.String)">
            <summary>
            判断字符串是否是a-zA-Z0-9_范围内（3-50位范围内）
            </summary>
            <param name="strIn"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Regexlib.IsValidEmail(System.String)">
            <summary>
            验证邮箱
            </summary>
            <param name="strIn"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Regexlib.IsValidMobile(System.String)">
            <summary>
            验证手机
            </summary>
            <param name="strIn"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Regexlib.IsValidTelPhone(System.String)">
            <summary>
            验证手机号
            </summary>
            <param name="strIn"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ScreenGrab">
            <summary>
            截取屏幕
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ScreenGrab.CaptureScreenToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures a screen shot of the entire desktop, and saves it to a file
            </summary>
            <param name="filename">要求为绝对路径</param>
            <param name="format"></param>
            <remarks>
            2015-09-15测试通过
            </remarks>
        </member>
        <member name="T:CYQ.Data.Tool.SpellUtil">
            <summary>
            拼写帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SpellUtil.GetSpell(System.String)">
            <summary>
            获取拼音
            </summary>
            <param name="chinese"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringUtil.GetByteLength(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.SystemDateHelper">
            <summary>
            更新系统日期帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SystemDateHelper.SetSystemDateTime(System.DateTime)">
            <summary>
            更新系统日期
            <remarks>
            有时候需要系统管理员权限
            </remarks>
            </summary>
            <param name="dtime">新日期</param>
        </member>
        <member name="T:CYQ.Data.Tool.TypeUtil">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TypeUtil.Type2DbType(System.Type)">
            <summary>
            .net提供的应用程序类型转换
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.IsNumeric(System.String)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.IsDouble(System.Object)">
            <summary>
            是否为Double类型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.IsValidEmail(System.String)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Utils.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Utils.GetStrArray(System.String)">
            <summary>
            将字符串转换为数组
            </summary>
            <param name="str">字符串</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:Utils.GetArrayStr(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            将数组转换为字符串
            </summary>
            <param name="list">List</param>
            <param name="speater">分隔符</param>
            <returns>String</returns>
        </member>
        <member name="M:Utils.StrToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:Utils.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:Utils.ObjToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.StrToInt(System.String,System.Int32)">
            <summary>
            将字符串转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.ObjToDecimal(System.Object,System.Decimal)">
            <summary>
            Object型转换为decimal型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的decimal类型结果</returns>
        </member>
        <member name="M:Utils.StrToDecimal(System.String,System.Decimal)">
            <summary>
            string型转换为decimal型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的decimal类型结果</returns>
        </member>
        <member name="M:Utils.ObjToFloat(System.Object,System.Single)">
            <summary>
            Object型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.StrToDateTime(System.String,System.DateTime)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.StrToDateTime(System.String)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.ObjectToDateTime(System.Object)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.ObjectToDateTime(System.Object,System.DateTime)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="obj">要转换的对象</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Utils.ObjectToStr(System.Object)">
            <summary>
            将对象转换为字符串
            </summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的string类型结果</returns>
        </member>
        <member name="M:Utils.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
        </member>
        <member name="M:Utils.SplitString(System.String,System.String,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utils.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:Utils.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:Utils.StringOfChar(System.Int32,System.String)">
            <summary>
            生成指定长度的字符串,即生成strLong个str字符串
            </summary>
            <param name="strLong">生成的长度</param>
            <param name="str">以str生成字符串</param>
            <returns></returns>
        </member>
        <member name="M:Utils.GetRamCode">
            <summary>
            生成日期随机码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utils.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
            <returns></returns>
        </member>
        <member name="M:Utils.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
            <returns></returns>
        </member>
        <member name="M:Utils.GetCheckCode(System.Int32)">
            <summary>
            生成随机字母字符串(数字字母混和)
            </summary>
            <param name="codeCount">待生成的位数</param>
        </member>
        <member name="M:Utils.GetOrderNumber">
            <summary>
            根据日期和随机码生成订单号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utils.CutString(System.String,System.Int32)">
            <summary>
            截取字符长度
            </summary>
            <param name="inputString">字符</param>
            <param name="len">长度</param>
            <returns></returns>
        </member>
        <member name="M:Utils.ToHtml(System.String)">
            <summary>
            字符串字符处理
            </summary>
            <param name="chr">等待处理的字符串</param>
            <returns>处理后的字符串</returns>
            //把TXT代码转换成HTML格式
        </member>
        <member name="M:Utils.ToTxt(System.String)">
            <summary>
            字符串字符处理
            </summary>
            <param name="chr">等待处理的字符串</param>
            <returns>处理后的字符串</returns>
            //把HTML代码转换成TXT格式
        </member>
        <member name="M:Utils.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Utils.Filter(System.String)">
            <summary>
            检查危险字符
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.SqlFilter(System.String,System.String)">
            <summary> 
            检查过滤设定的危险字符
            </summary> 
            <param name="InText">要过滤的字符串 </param> 
            <returns>如果参数存在不安全字符，则返回true </returns> 
        </member>
        <member name="M:Utils.Htmls(System.String)">
            <summary>
            过滤特殊字符
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:Utils.DeleteFile(System.String)">
            <summary>
            删除单个文件
            </summary>
            <param name="_filepath">文件相对路径</param>
        </member>
        <member name="M:Utils.DeleteUpFile(System.String)">
            <summary>
            删除上传的文件(及缩略图)
            </summary>
            <param name="_filepath"></param>
        </member>
        <member name="M:Utils.DeleteDirectory(System.String)">
            <summary>
            删除指定文件夹
            </summary>
            <param name="_dirpath">文件相对路径</param>
        </member>
        <member name="M:Utils.MoveDirectory(System.String,System.String)">
            <summary>
            修改指定文件夹名称
            </summary>
            <param name="old_dirpath">旧相对路径</param>
            <param name="new_dirpath">新相对路径</param>
            <returns>bool</returns>
        </member>
        <member name="M:Utils.GetFileSize(System.String)">
            <summary>
            返回文件大小KB
            </summary>
            <param name="_filepath">文件相对路径</param>
            <returns>int</returns>
        </member>
        <member name="M:Utils.GetFileExt(System.String)">
            <summary>
            返回文件扩展名，不含“.”
            </summary>
            <param name="_filepath">文件全名称</param>
            <returns>string</returns>
        </member>
        <member name="M:Utils.GetFileName(System.String)">
            <summary>
            返回文件名，不含路径
            </summary>
            <param name="_filepath">文件相对路径</param>
            <returns>string</returns>
        </member>
        <member name="M:Utils.FileExists(System.String)">
            <summary>
            文件是否存在
            </summary>
            <param name="_filepath">文件相对路径</param>
            <returns>bool</returns>
        </member>
        <member name="M:Utils.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Utils.WriteCookie(System.String,System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Utils.WriteCookie(System.String,System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Utils.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="strValue">过期时间(分钟)</param>
        </member>
        <member name="M:Utils.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:Utils.GetCookie(System.String,System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:Utils.ReplaceStr(System.String,System.String,System.String)">
            <summary>
            替换指定的字符串
            </summary>
            <param name="originalStr">原字符串</param>
            <param name="oldStr">旧字符串</param>
            <param name="newStr">新字符串</param>
            <returns></returns>
        </member>
        <member name="M:Utils.OutPageList(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            返回分页页码
            </summary>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">当前页</param>
            <param name="totalCount">总记录数</param>
            <param name="linkUrl">链接地址，__id__代表页码</param>
            <param name="centSize">中间页码数量</param>
            <returns></returns>
        </member>
        <member name="M:Utils.UrlEncode(System.String)">
            <summary>
            URL字符编码
            </summary>
        </member>
        <member name="M:Utils.UrlDecode(System.String)">
            <summary>
            URL字符解码
            </summary>
        </member>
        <member name="M:Utils.CombUrlTxt(System.String,System.String,System.String[])">
            <summary>
            组合URL参数
            </summary>
            <param name="_url">页面地址</param>
            <param name="_keys">参数名称</param>
            <param name="_values">参数值</param>
            <returns>String</returns>
        </member>
        <member name="M:Utils.HttpPost(System.String,System.String)">
            <summary>
            HTTP POST方式请求数据
            </summary>
            <param name="url">URL.</param>
            <param name="param">POST的数据</param>
            <returns></returns>
        </member>
        <member name="M:Utils.HttpGet(System.String)">
            <summary>
            HTTP GET方式请求数据.
            </summary>
            <param name="url">URL.</param>
            <returns></returns>
        </member>
        <member name="M:Utils.UrlExecute(System.String)">
            <summary>
            执行URL获取页面内容
            </summary>
        </member>
        <member name="M:Utils.ActionType">
            <summary>
            获取操作权限
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:Utils.GetUrlExtension(System.String,System.String)">
            <summary>
            替换扩展名
            </summary>
        </member>
        <member name="M:Utils.GetUrlExtension(System.String,System.String,System.Boolean)">
            <summary>
            替换扩展名，如没有扩展名替换默认首页
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.VpnHelper">
            <summary>
            vpn帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VpnHelper.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            带参构造函数
            </summary>
            <param name="vpnIp">vpn地址</param>
            <param name="vpnName">vpn名称</param>
            <param name="userName">用户名称</param>
            <param name="passWord">密码</param>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.CreateOrUpdateVPN">
            <summary>
            创建或更新一个默认的VPN连接
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDeleteVPN">
            <summary>
            尝试删除连接(默认VPN)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryConnectVPN">
            <summary>
            尝试连接VPN(默认VPN)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryConnectVPN(System.String@)">
            <summary>
            尝试连接VPN(默认VPN)
            </summary>
            <param name="error">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryConnectVPN(System.String,System.String,System.String)">
            <summary>
            尝试连接VPN(指定VPN名称，用户名，密码)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryConnectVPN(System.String,System.String,System.String,System.String@)">
            <summary>
            尝试连接VPN(指定VPN名称，用户名，密码)
            </summary>
            <param name="connVpnName"></param>
            <param name="connUserName"></param>
            <param name="connPassWord"></param>
            <param name="error"></param>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.Connect(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            连接VPN
            </summary>
            <param name="connection">vpn名称</param>
            <param name="phoneNumber">vpn地址</param>
            <param name="userName">vpn用户名称</param>
            <param name="pwd">密码</param>
            <param name="error">错误信息</param>
            <returns>成功返回true，否则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDisConnectVPN">
            <summary>
            尝试断开连接(默认VPN)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDisConnectVPN(System.String@)">
            <summary>
            尝试断开连接(默认VPN)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDisConnectVPN(System.String)">
            <summary>
            尝试断开VPN(指定VPN名称)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDisConnectVPN(System.String,System.String@)">
            <summary>
            尝试断开VPN(指定VPN名称)
            </summary>
            <param name="disConnVpnName">vpn名称</param>
            <param name="error">错误信息</param>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.CreateOrUpdateVPN(System.String,System.String)">
            <summary>
            创建或更新一个VPN连接(指定VPN名称，及IP)
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.CreateOrUpdatePPPOE(System.String)">
            <summary>
            创建或更新一个PPPOE连接(指定PPPOE名称)
            </summary>
            <param name="updatePPPOEname">PPPOE名称</param>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDeleteVPN(System.String)">
            <summary>
            删除指定名称的VPN
            如果VPN正在运行，一样会在电话本里删除，但是不会断开连接，所以，最好是先断开连接，再进行删除操作
            </summary>
            <param name="delVpnName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.TryDeleteVPN(System.String,System.String@)">
            <summary>
            删除指定名称的VPN
            如果VPN正在运行，一样会在电话本里删除，但是不会断开连接，所以，最好是先断开连接，再进行删除操作
            </summary>
            <param name="error">错误信息</param>
            <param name="delVpnName"></param>
            <remarks>
            有时候会报错：其他信息: 对路径“C:\ProgramData\Microsoft\Network\Connections\Pbk\rasphone.pbk”的访问被拒绝。可能是权限不足
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.GetCurrentConnectingVPNNames">
            <summary>
            获取当前正在连接中的VPN名称,正则有问题，请暂时用下面GetCurrentConnectingVPNNames2方法
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.GetCurrentConnectingVPNNames2">
            <summary>
            Retrieves a read-only list of active connections. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VpnHelper.Get(System.String)">
            <summary>
            GET获取HTML
            </summary>
            <param name="url">网址</param>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.VpnHelper.IPToPing">
            <summary>
             VPN地址
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.VpnHelper.VPNName">
            <summary>
            VPN名称
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.VpnHelper.UserName">
            <summary>
            VPN用户名
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.VpnHelper.PassWord">
            <summary>
            VPN密码
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUIComboboxHelper">
            <summary>
            ComboboxJson帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIComboboxHelper.GetEasyUIComboboxJson(System.Data.DataTable,System.String,System.String)">
            <summary>
            获取ComboboxJson字符串帮助类
            </summary>
            <param name="dt"></param>
            <param name="kField">绑定到 ComboBox 的 value 上的基础数据的名称。应该是整型</param>
            <param name="TextField">绑定到 ComboBox 的 text 上的基础数据的名称。</param>
            <returns>如果dt为null或者dt为空，则返回[{}]</returns>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUITreeHelper">
            <summary>
            EasyUITree帮助类
            </summary>
            <remarks>
            20150525编写了一个针对于IconCls属性的一个重载方法
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetEmptyTree">
            <summary>
            返回空的树
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTree(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTree(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="sort">排序列名,允许为空或者null</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTree(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="attributesColumnName">自定义属性列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTree(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="attributesColumnName">自定义属性列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTreeOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
             <summary>
             根据DataTable获取一代数据的Json字符串
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTreeOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String)">
             <summary>
             根据DataTable获取一代数据的Json字符串
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="attributesColumnName">自定义属性列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTreeOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String)">
             <summary>
             根据DataTable获取一代数据的Json字符串
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="attributesColumnName">自定义属性列名</param>
             <param name="iconClsName">iconCls列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetTreeOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String,System.String)">
             <summary>
             根据DataTable获取一代数据的Json字符串
             </summary>
             <param name="table">数据源</param>
             <param name="idCol">ID列,相当于主键的意思</param>
             <param name="txtCol">Text列,就是显示信息的列</param>
             <param name="rela">关系字段,就是父ID的那列</param>
             <param name="pId">父ID,具体的父ID的值</param>
             <param name="attributesColumnName">自定义属性列名</param>
             <param name="iconClsName">iconCls列名</param>
             <param name="sort">排序列,可以为空或者null</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetEasyUITreeJson(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            递归将DataTable转化为适合jquery easy ui 控件tree ,combotree 的 json 这里出现了无限递归错误,建议不使用
            该方法最后还要 将结果稍微处理下,将最前面的,"children" 字符去掉.
            </summary>
            <param name="dt">要转化的表</param>
            <param name="pField">表中的父节点字段</param>
            <param name="pValue">表中顶层节点的值,没有 可以输入为0</param>
            <param name="kField">关键字字段名称</param>
            <param name="TextField">要显示的文本 对应的字段</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITreeHelper.GetEasyUITreeJsonOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            获取一代Json字符串 当前节点的state属性设置成：closed，则展开该节点时，会异步展开这个节点下的所有子节点。
            </summary>
            <param name="dt">要转化的表</param>
            <param name="pField">表中的父节点字段</param>
            <param name="pValue">表中顶层节点的值,没有 可以输入为0</param>
            <param name="kField">关键字字段名称</param>
            <param name="TextField">要显示的文本 对应的字段</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUITree">
            <summary>
            EasyUITree帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTable(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTable(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTable(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
             <param name="iconClsColumnName">IconCls列名，如果为空或者null，则不存在此列</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTable(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
             <param name="iconClsColumnName">IconCls列名，如果为空或者null，则不存在此列</param>
             <param name="sort">排序列,可以为空或者null</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTableOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="bAttributes">是否有自定义参数</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTableOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段名称,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTableOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
             <param name="iconClsColumnName">icon列名，如果为null或者为空，则忽略</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUITree.GetTreeJsonByTableOneGeneration(System.Data.DataTable,System.String,System.String,System.String,System.Object,System.String,System.String,System.String)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">对应easyui的tree的ID列的实际的列名称</param>
             <param name="txtCol">Text列,对应的数据列名称</param>
             <param name="rela">关系字段,父类ID,例如parentid</param>
             <param name="pId">父ID值</param>
             <param name="attributesColumnName">自定义参数列名</param>
             <param name="iconClsColumnName">icon列名，如果为null或者为空，则忽略</param>
             <param name="sort">排序字段</param>
            <returns>easyui tree json格式</returns>
        </member>
        <member name="T:CYQ.Data.Resource1">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:CYQ.Data.Resource1.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:CYQ.Data.Resource1.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:CYQ.Data.Resource1.info">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.AlertForm">
            <summary>
            提示窗体
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AlertForm.Show(System.Object[])">
            <summary>
            显示提示窗口
            </summary>
            <param name="paramsList">
            params[0]:内容
            params[1]:标题
            params[2]:显示方式
            params[3]:宽度
            params[4]:高度
            params[5]:出现时间
            params[6]:停留时间
            params[7]:消失时间
            </param>
        </member>
        <member name="M:CYQ.Data.Tool.AlertForm.Show(System.String,System.String,CYQ.Data.Tool.AlertForm.ShowWay,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="content">内容</param>
            <param name="title">标题</param>
            <param name="showWay">显示方式</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="showInTime">出现时间，毫秒为单位</param>
            <param name="showTime">停留时间，毫秒为单位</param>
            <param name="showOutTime">消失时间，毫秒为单位</param>
        </member>
        <member name="F:CYQ.Data.Tool.AlertForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AlertForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CYQ.Data.Tool.AlertForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.AlertForm.ShowWay">
            <summary>
            展示方式枚举
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.AppConfig">
            <summary>
            用于获取或设置Web.config/*.exe.config中节点数据的辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.#ctor">
            <summary>
            从当前目录中按顺序检索Web.Config和*.App.Config文件。
            如果找到一个，则使用它作为配置文件；否则会抛出一个ArgumentNullException异常。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.#ctor(System.String)">
            <summary>
            用户指定具体的配置文件路径
            </summary>
            <param name="configFilePath">配置文件路径（绝对路径）</param>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.AppConfigSet(System.String,System.String)">
            <summary>
            设置程序的config文件，采用读写xml文件方式
            </summary>
            <param name="keyName">键名</param>
            <param name="keyValue">键值</param>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.AppConfigGet(System.String)">
            <summary>
            读取程序的config文件的键值。
            如果键名不存在，返回空
            </summary>
            <param name="keyName">键名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.GetSubValue(System.String,System.String)">
            <summary>
            获取指定键名中的子项的值
            </summary>
            <param name="keyName">键名</param>
            <param name="subKeyName">以分号(;)为分隔符的子项名称</param>
            <returns>对应子项名称的值（即是=号后面的值）</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.SetConnectionString(System.String,System.String)">
            <summary>
            设置程序的config文件的Enterprise Library的数据库链接地址
            </summary>
            <param name="keyName">键名</param>
            <param name="keyValue">键值</param>
        </member>
        <member name="M:CYQ.Data.Tool.AppConfig.GetConnectionString(System.String)">
            <summary>
            读取程序的config文件Enterprise Library的数据库链接地址
            </summary>
            <param name="filePath">Web.config或者*.exe.config文件的绝对路径</param>
            <param name="keyName">键名,不区分大小写</param>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.AppConfig.HWSecurity">
            <summary>
            从配置文件获取权限系统链接（配置项HWSecurity的值）
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.AppConfig.System_ID">
            <summary>
            系统的标识ID（配置项System_ID的值）
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.AppConfig.AppName">
            <summary>
            应用程序名称（配置项ApplicationName的值）
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.AppConfig.Manufacturer">
            <summary>
            软件厂商名称（配置项Manufacturer的值）
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.AsposeExcelTools">
            <summary>
            Aspose的Excel帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.DataTableToExcel(System.Data.DataTable,System.String,System.String@)">
            <summary>
            DataTableToExcel，允许导出图片字段
            </summary>
            <param name="datatable">一个数据集合</param>
            <param name="filepath">excel文件路径</param>
            <param name="error">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.DataTableToExcel2(System.Data.DataTable,System.String,System.String@)">
            <summary>
            DataTableToExcel2
            </summary>
            <param name="datatable">数据集合</param>
            <param name="filepath">excel文件路径</param>
            <param name="error">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ExcelFileToDataTable(System.String,System.Data.DataTable@,System.String@)">
            <summary>
            Excel文件转换为DataTable，默认选择第一个sheet表单
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ExcelFileToDataSet(System.String,System.String@)">
            <summary>
            Excel文件转换为DataTable. 默认以第一行为表头，同时，把第一行表头数据删除
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ExcelFileToDataSet(System.String,System.Int32,System.String@,System.Boolean)">
            <summary>
            Excel文件转换为DataTable.
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="firstRowTitle">作为表头的行号,从0开始算起，如果小于0，则表示没有标题行，即最后一个参数deleteRows也是无效的</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <param name="deleteRows">是否删除多余的行，例如说第二个参数为3，那么是否删除1、2行</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.RenameDatatableColumnName(System.Data.DataTable,System.Int32)">
            <summary>
            重新设置datatable的列名，删除行
            </summary>
            <param name="dt"></param>
            <param name="rowTitle">列名的行号</param>
            <returns>返回一个datatable</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.RenameDatatableColumnNameNotDeleteRows(System.Data.DataTable,System.Int32)">
            <summary>
            重新设置datatable的列名,不删除行
            </summary>
            <param name="dt"></param>
            <param name="rowTitle">列名的行号</param>
            <returns>返回一个datatable</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ReadExcel(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            读取指定路径的Excel文件为DataTable
            </summary>
            <param name="fileName">文件全路径</param>
            <param name="firstRow">要开始读取的第一行在Excel中的行索引（默认会以此行各列数据作为DataTable的列名）</param>
            <param name="firstColumn">要开始读取的第一列在Excel中的列索引</param>
            <param name="invalidEndRowNumber">文件尾部无效行数目（该部分所有行数据将不会被读取）</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ExportExcel(System.Data.DataTable,System.String,System.String)">
            <summary>
            将DataTable导出指定路径的Excel文件
            </summary>
            <param name="dt">DataTable</param>
            <param name="headerText">Excel文件的表头内容</param>
            <param name="path">文件保存的全路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.GetExcelSheetNames(System.String,System.String@)">
            <summary>
            获取表名
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
            <remarks>
            2015-05-26测试完成
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.ListsToExcelFile(System.String,System.Collections.IList[],System.String@)">
            <summary>
            List文件转化为excel文件
            </summary>
            <param name="filepath">excel文本路径</param>
            <param name="lists">List信息</param>
            <param name="error">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.CreateXlsFromTemplet(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            从模板生成xls,需要注意的是模板中的文字需要和模板代码分开，否则模板代码不能生效
            </summary>
            <param name="xlsTempletpath"></param>
            <param name="xlsResultPath"></param>
            <param name="dict"></param>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeExcelTools.RenderToFile(System.String,System.String)">
            <summary>
            asp.net 输出文件到客户端
            </summary>
            <param name="xlsPath">xls在服务器上的绝对物理路径</param>
            <param name="xlsName">显示的xls名称，供下载的时候给用户显示</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CustomerDoWorkEventArgs">
            <summary>
            自定义事件
            </summary>
        </member>
        <!-- 对于成员“T:CYQ.Data.Tool.BackgroundWorkerExtension”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.InitNewBackgroundWorker(System.ComponentModel.DoWorkEventHandler,System.ComponentModel.ProgressChangedEventHandler,System.ComponentModel.RunWorkerCompletedEventHandler)">
            <summary>
            构造BackgroundWorker对象
            </summary>
            <param name="doWorkEvent">待处理的事件</param>
            <param name="progressChangedEvent">通知事件</param>
            <param name="runWorkerCompletedEvent">结束事件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.CancelAsyncExt(System.ComponentModel.BackgroundWorker)">
            <summary>
            取消BackgroundWorker的执行
            </summary>
            <param name="bw"></param>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.RunWorkerAsyncExt(System.ComponentModel.BackgroundWorker,System.Object)">
            <summary>
            执行BackgroundWorker
            </summary>
            <param name="bw"></param>
            <param name="param"></param>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.RegisterDoWork(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventHandler)">
            <summary>
            注册DoWork事件
            </summary>
            <param name="bw"></param>
            <param name="doWorkEvent"></param>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.RegisterProgressChanged(System.ComponentModel.BackgroundWorker,System.ComponentModel.ProgressChangedEventHandler)">
            <summary>
            注册ProgressChanged事件
            </summary>
            <param name="bw"></param>
            <param name="progressChangedEvent"></param>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundWorkerExtension.RegisterRunWorkerCompleted(System.ComponentModel.BackgroundWorker,System.ComponentModel.RunWorkerCompletedEventHandler)">
            <summary>
            注册RunWorkerCompleted事件
            </summary>
            <param name="bw"></param>
            <param name="runWorkerCompletedEvent"></param>
        </member>
        <member name="T:CYQ.Data.Tool.Base64Util">
            <summary>
            基于Base64的加密编码，
            可以设置不同的密码表来获取不同的编码合解码
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.Encrypt(System.String)">
            <summary>
            使用默认的密码表加密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.Decrypt(System.String)">
            <summary>
            使用默认的密码表解密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.GetStandardBase64">
            <summary>
            获取具有标准的Base64密码表的加密类
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.Encode(System.String)">
            <summary>
            返回编码后的字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.Decode(System.String)">
            <summary>
            获得解码字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.InitDict">
            <summary>
            初始化双向哈西字典
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.ValidateRepeat(System.String)">
            <summary>
            检查字符串中的字符是否有重复
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Base64Util.ValidateEqualPad(System.String,System.String)">
            <summary>
            检查字符串是否包含补码字符
            </summary>
            <param name="input"></param>
            <param name="pad"></param>
        </member>
        <member name="P:CYQ.Data.Tool.Base64Util.CodeTable">
            <summary>
            密码表
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Base64Util.Pad">
            <summary>
            补码
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.CacheHelperT">
            <summary>
            CacheDependency 说明
            如果您向 Cache 中添加某个具有依赖项的项，当依赖项更改时，
            该项将自动从 Cache 中删除。例如，假设您向 Cache 中添加某项，
            并使其依赖于文件名数组。当该数组中的某个文件更改时，
            与该数组关联的项将从缓存中删除。
            [C#] 
            Insert the cache item.
            CacheDependency dep = new CacheDependency(fileName, dt);
            cache.Insert("key", "value", dep);
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheHelperT.DayFactor">
            <summary>
            天
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheHelperT.HourFactor">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheHelperT.MinuteFactor">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheHelperT.SecondFactor">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheHelperT.Factor">
            <summary>
            调节
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.#cctor">
            <summary>
            Static initializer should ensure we only have to look up the current cache
            instance once.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Clear">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.RemoveByPattern(System.String)">
            <summary>
            通过正则表达式移除缓存
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Remove(System.String)">
            <summary>
            清除缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object)">
            <summary>
            缓存OBJECT.
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            缓存obj 并建立依赖项
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object,System.Int32)">
            <summary>
            按秒缓存对象
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            按秒缓存对象 并存储优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32)">
            <summary>
            按秒缓存对象 并建立依赖项
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            按秒缓存对象 并建立具有优先级的依赖项
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheHelperT.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CacheByXml">
             <summary>
            缓存管理
             </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheByXml.objectXmlMap">
            <summary>
            XML 元素
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheByXml.rootXml">
            <summary>
            缓存键XML文档
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.Add(System.String,System.Object)">
            <summary>
            Add the object to the underlying storage and Xml mapping document
            </summary>
            <param name="xpath">the hierarchical location of the object in Xml document </param>
            <param name="o">the object to be cached</param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.Get(System.String)">
            <summary>
            Retrieve the cached object using its hierarchical location
            </summary>
            <param name="xpath">hierarchical location of the object in xml document</param>
            <returns>cached object </returns>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.GetList(System.String)">
            <summary>
            Retrive a list of object under a hierarchical location
            </summary>
            <param name="xpath">hierarchical location</param>
            <returns>an array of objects</returns>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.Remove(System.String)">
            <summary>
            Remove the object from the storage and clear the Xml assocated with
            the object
            </summary>
            <param name="xpath">hierarchical locatioin of the object</param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.CreateNode(System.String)">
            <summary>
            CreateNode is responsible for creating the xml tree that is
            specificed in the hierarchical location of the object.
            </summary>
            <param name="xpath">hierarchical location</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByXml.PrepareXpath(System.String)">
            <summary>
            clean up the xpath so that extra '/' is removed
            </summary>
            <param name="xpath">hierarchical location</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CacheByTag">
            <summary>
            通过Tag管理缓存
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByTag.Get(System.String)">
            <summary>
            取得缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByTag.Set(System.String,System.Object)">
            <summary>
            存缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByTag.Set(System.String,System.Object,System.String[])">
            <summary>
            存缓存，带Tag，用于做类似命名空间的管理
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="tags"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByTag.Remove(System.String)">
            <summary>
            删缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByTag.RemoveByTags(System.String[])">
            <summary>
            根据 Tag 删除缓存
            </summary>
            <param name="tags"></param>
        </member>
        <member name="T:CYQ.Data.Tool.CacheByRegex">
            <summary>
            通过正则表达式管理缓存
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CacheByRegex.cacheKeys">
            
            用于存放所有cache keys，以便于用正则的方式删除缓存
            如： place/home/page/1 ，以后用 place/home/page/* 来删除 place/home/page/1,place/home/page/2 ... place/home/page/n
            
        </member>
        <member name="M:CYQ.Data.Tool.CacheByRegex.saveKeyToCacheKeys(System.String)">
            <summary>
            将 Key 存入 cacheKeyStore
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CacheByRegex.Remove(System.String,System.Boolean)">
            
            删缓存
            
            
            是否用正则匹配
        </member>
        <member name="T:CYQ.Data.Tool.ChildWinManagement">
            <summary>
            窗口管理类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ChildWinManagement.WinCaption(System.String)">
            <summary> 
            获取窗口标题
            </summary>
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ChildWinManagement.ExistWin(System.Windows.Forms.Form,System.String)">
            <summary> 
            获取MDI父窗口是否有窗口标题为指定字符串的子窗口（如果已经存在把此子窗口推向前台） 
            </summary> 
            <param name="MDIwin">MDI父窗口</param> 
            <param name="caption">窗口标题</param> 
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ChildWinManagement.LoadMdiForm(System.Windows.Forms.Form,System.Type)">
            <summary>
            加载Mdi窗体
            </summary>
            <param name="mainDialog"></param>
            <param name="formType"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ChildWinManagement.PopControlForm(System.Type,System.String)">
            <summary>
            把控件附加到窗体上弹出
            </summary>
            <param name="control"></param>
            <param name="caption"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ChildWinManagement.PopDialogForm(System.Type)">
            <summary>
            弹出窗体
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ArrayListHelper">
            <summary>
            ArrayList帮助类
            </summary>
            <remarks>
            添加时间：2014-02-18
            来自：http://www.cnblogs.com/carysun/archive/2009/11/08/search-in-arraylilst.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ArrayListHelper.Search(System.Collections.ArrayList,System.String,System.String,CYQ.Data.Tool.MemType,CYQ.Data.Tool.CmpOperator)">
            <summary>
            查找ArrayList
            </summary>
            <param name="objArr">带查找的ArrayList集合对象</param>
            <param name="valueToSearch">一个数值</param>
            <param name="FieldName">对象的一个属性</param>
            <param name="memType">属性数据类型</param>
            <param name="comOp">对比方式</param>
            <returns>成功返回位置，否则返回-1</returns>
        </member>
        <member name="T:CYQ.Data.Tool.MemType">
            <summary>
            数据类型 
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.CmpOperator">
            <summary>
            对比方式
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.BackgroundTask">
             <summary>
             耗时操作 eg:BackgroundTask.BackgroundWork(getData, null); getData为耗时代码
             </summary>
             <![CDATA[
             private void loadData()
            {
                BackgroundTask.BackgroundWork(getData, null);
            }
            private void getData()
            {
                //这里执行耗时操作 的代码 譬如，加载远程数据之类，还有绑定数据到UI，比如this.gridview.datasource = 之类的操作
            }
             ]]>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundTask.BackgroundWork(System.Action{System.Object},System.Object)">
            <summary>
            耗时操作 BackgroundTask.BackgroundWork(getData, null); getData为耗时代码
            </summary>
            <param name="action"></param>
            <param name="obj"></param>
        </member>
        <member name="M:CYQ.Data.Tool.BackgroundTask.BackgroundWorkWithNotify(System.Action{System.Object},System.Object)">
            <summary>
            耗时操作 BackgroundTask.BackgroundWork(getData, null); getData为耗时代码
            </summary>
            <param name="action"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CYQ.Data.Tool.AsposeCell">
            <summary>
            Aspose帮助类，对常用Aspose用法进行封装
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fullName">绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.SetCurrentWorksheet(System.String)">
            <summary>
            设置指定名称的sheet为当前操作sheet
            </summary>
            <param name="worksheetName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.SetCurrentWorksheet(System.Byte)">
            <summary>
            设置指定索引（从0开始）的sheet为当前操作sheet
            </summary>
            <param name="worksheetIndex"></param>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetWorkSheetByIndex(System.Byte)">
            <summary>
            //根据索引得到sheet
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetWorkSheetByName(System.String)">
            <summary>
            //根据sheet名称得到sheet
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.RowHasValue(System.Int32)">
            <summary>
            判断指定行是否有数据
            </summary>
            <param name="row">从1开始，为Excel行序号</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.RowHasValue(System.String)">
            <summary>
            //指定行是否有数据（以连续50列没有数据为标准）
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetCellValue(System.String,System.String)">
            <summary>
            取得指定sheet中指定cell位置的数据
            </summary>
            <param name="worksheetName"></param>
            <param name="cellName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetCellValue(System.Byte,System.String)">
            <summary>
            //取得指定sheet中指定cell位置的数据
            </summary>
            <param name="worksheetIndex"></param>
            <param name="cellName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetCellValue(System.String)">
            <summary>
            //取得指定sheet中指定cell位置的数据
            </summary>
            <param name="cellName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetCellValue(System.Int32,System.Int32)">
            <summary>
            根据行列索引得到指定位置的数据
            </summary>
            <param name="row">从0开始</param>
            <param name="column">从0开始</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.IsMerged(System.Int32,System.Int32)">
            <summary>
            判断某位置的单元格是否为合并单元格
            </summary>
            <param name="row">从0开始</param>
            <param name="column">从0开始</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetMergedCellValue(System.Int32,System.Int32)">
            <summary>
            ///取得合并单元格的数据
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetRangeNames">
            <summary>
            //取得Range名称集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetRangeNames(System.Int32)">
            <summary>
            ////取得某行Range名称集合
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetRowIndexByRangeName(System.String)">
            <summary>
            //根据Range（别名）取得行索引
            </summary>
            <param name="rangeName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetColumnIndexByRangeName(System.String)">
            <summary>
            //根据Range（别名）取得列索引
            </summary>
            <param name="rangeName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.AsposeCell.GetRowAndColumnIndexByRangeName(System.String)">
            <summary>
            //根据Range(别名)取得行列索引
            </summary>
            <param name="rangeName"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Chinese">
            <summary>
                语言工具
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.Chinese.pv">
            <summary>
                包含字符 ASC 码的整形数组。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.Chinese.ps">
            <summary>
                包含汉字拼音的字符串数组。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.Chinese.bd">
            <summary>
                包含要排除处理的字符的字符串数组。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.Convert(System.String,System.String,System.Boolean)">
            <summary>
                将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <param name="separator">连接拼音之间的分隔符。</param>
            <param name="initialCap">指定是否将首字母大写。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.ToDBC(System.String)">
            <summary>
                转半角的函数(DBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.ToSChinese(System.String)">
            <summary>
                转换为简体中文
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.ToTChinese(System.String)">
            <summary>
                转换为繁体中文
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.SBCCaseToNumberic(System.String)">
            <summary>
                将全角数字转换为数字
            </summary>
            <param name="SBCCase"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.ToSBC(System.String)">
            <summary>
                转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.GetRandomChinese(System.Int32)">
            <summary>
            获取随机中文
            </summary>
            <param name="strlength"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Chinese.CreateRegionCode(System.Int32)">
                    此函数在汉字编码范围内随机创建含两个元素的十六进制字节数组，每个字节数组代表一个汉字，并将 
                    四个字节数组存储在object数组中。 
                    参数：strlength，代表需要产生的汉字个数 
                    *
        </member>
        <member name="P:CYQ.Data.Tool.Chinese.Phrase">
            <summary>
                设置或获取包含列外词组读音的键/值对的组合。
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.MaxLengthAttribute">
            <summary>
            自定义特性
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.TableAttribute">
            <summary>
            自定义特性
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.BuildSqlTool">
            <summary>
            创建sqlite建表语句帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.BuildSqlTool.GetCreateTableSql(System.String,System.String)">
            <summary>
            创建表的sql语句
            sqlite数据类型：integer/bigint/float/varchar/datetime/blob/varchar(36)
            </summary>
            <param name="tableName">表名</param>
            <param name="nameString">a|integer,b|varchar,c|datetime,d|blob</param>
            <returns>
            如果列名未按照格式填写，则直接返回空字符串
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.BuildSqlTool.GetCreateTableSql(System.Object)">
            <summary>
            创建sqlite表的sql语句
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BuildSqlTool.SqlType(System.Reflection.PropertyInfo)">
            <summary>
            sqlite数据类型：integer/bigint/float/varchar/datetime/blob/varchar(36)
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BuildSqlTool.MaxStringLength(System.Reflection.PropertyInfo)">
            <summary>
            最大长度
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CalculateTime">
            <summary>
            计算所用时间
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CalculateTime.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CalculateTime.Start">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CalculateTime.Stop">
            <summary>
            Stop the timer
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.CalculateTime.Duration">
            <summary>
            Returns the duration of the timer (in seconds)
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.EasyUIDataGridHelper">
            <summary>
            EasyUIDataGrid帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EasyUIDataGridHelper.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            获取easyui datagrid 所需要的JSON数据,可以通过判断EasyUIDataGridHelper.error是否为空来确定是否出现错误
            </summary>
            <param name="fields">字段列表，以逗号隔开</param>
            <param name="pageindex">第几页</param>
            <param name="pagesize">每页记录数</param>
            <param name="keyfield">主键字段名</param>
            <param name="where">条件</param>
            <param name="sort">排序字段,例如id desc/id都可以</param>
            <param name="tablename">表名</param>
            <param name="connection">连接字符串</param>
            <param name="error">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String@,System.Int32)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="fields">字段列表，以逗号隔开</param>
            <param name="pageindex">第几页</param>
            <param name="pagesize">每页记录数</param>
            <param name="keyfield">主键字段名</param>
            <param name="where">条件</param>
            <param name="sort">排序字段,例如id desc/id都可以</param>
            <param name="tablename">表名</param>
            <param name="connection">连接字符串</param>
            <param name="error">错误信息</param>
            <param name="type">分页类型 0：Max分页  1:Top分页</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="fields">字段列表，以逗号隔开</param>
            <param name="pageindex">第几页</param>
            <param name="pagesize">每页记录数</param>
            <param name="keyfield">主键字段名</param>
            <param name="where">条件</param>
            <param name="sort">排序字段</param>
            <param name="tablename">表名</param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String@,System.Int32)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="fields">字段列表，以逗号隔开</param>
            <param name="pageindex">第几页</param>
            <param name="pagesize">每页记录数</param>
            <param name="keyfield">主键字段名</param>
            <param name="where">条件</param>
            <param name="sort">排序字段</param>
            <param name="tablename">表名</param>
            <param name="error">错误信息</param>
            <param name="type">分页类型 0：Max分页  1:Top分页</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.String,System.String,System.String)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="keyfield">主键字段名</param>
            <param name="where"></param>
            <param name="sort">排序字段</param>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="keyfield">主键字段名</param>
            <param name="where"></param>
            <param name="sort">排序字段</param>
            <param name="tablename"></param>
            <param name="type">分页类型 0：Max分页  1:Top分页</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetDataTableForEasyuiDatagrid(System.String,System.String,System.String,System.String,System.Int32@,System.Boolean)">
            <summary>
            返回符合要求的DataGrid的一个DataTable,后期需要调用GetJsonForEasyuiDatagrid方法进行转化为json字符串
            </summary>
            <param name="keyfield">关键字段,这个参数在方法中根本没有用到,故此可以为任何对象</param>
            <param name="where">条件</param>
            <param name="sort">排序字段</param>
            <param name="tablename">表名</param>
            <param name="total">总数</param>
            <param name="bSortDesc">是不是desc排序,降序</param>
            <returns>出错,返回一个datatable,rows.count=0</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetDataTableForEasyuiDatagrid(System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            返回符合要求的DataGrid的一个DataTable,后期需要调用GetJsonForEasyuiDatagrid方法进行转化为json字符串,默认升序排列
            </summary>
            <param name="keyfield">关键字段,这个参数在方法中根本没有用到,故此可以为任何对象</param>
            <param name="where">条件</param>
            <param name="sort">排序字段</param>
            <param name="tablename">表名</param>
            <param name="total">总数</param>
            <returns>出错,返回一个datatable,rows.count=0</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetJsonForEasyuiDatagrid(System.Data.DataTable,System.Int32)">
            <summary>
            获取easyui datagrid 所需要的JSON数据
            </summary>
            <param name="dt">数据源</param>
            <param name="total">总数</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EasyUIDataGridHelper.GetEmptyDataGrid">
            <summary>
            返回一个空的json字符串给datagrid
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.EasyUIDataGridHelper.Pageindex">
            <summary>
            页索引
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.EasyUIDataGridHelper.Sort">
            <summary>
            grid 排序字段,默认为id
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.EasyUIDataGridHelper.Order">
            <summary>
            grid 排序方式 asc || desc,默认为desc
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.EasyUIDataGridHelper.Pagesize">
            <summary>
            页尺寸
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.EasyUIDataGridHelper.Filter">
            <summary>
            筛选条件
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.EnvironmentHelper">
            <summary>
            环境变量帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EnvironmentHelper.SetVariable(System.String,System.String)">
            <summary>
            设置环境变量，创建或修改当前进程中的环境变量 通过Environment静态类，有此环境变量名称，则尝试更新，如果没有，则尝试添加
            </summary>
            <param name="name">环境变量名称</param>
            <param name="value">环境变量的值,不需要以；结尾</param>
            <returns>成功返回空，否则返回错误信息</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EnvironmentHelper.GetVariable(System.String)">
            <summary>
            获取环境变量，通过Environment静态类
            </summary>
            <param name="name">环境变量名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EnvironmentHelper.SetVariableT(System.String,System.String)">
            <summary>
            设置windows环境变量，通过注册表
            </summary>
            <param name="name">变量名称</param>
            <param name="value">变量值</param>
        </member>
        <member name="M:CYQ.Data.Tool.EnvironmentHelper.SetPath(System.String)">
            <summary>
            设置Path环境变量
            </summary>
            <param name="pathValue"></param>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.EnvironmentHelper.AddDirectorySecurity(System.String,System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.EnvironmentHelper.AddFileSecurity(System.String,System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Adds an ACL entry on the specified directory for the specified account.
            This function was taken directly from MSDN.  It adds security rights to a file
            </summary>
            <param name="FileName"></param>
            <param name="Account">like @"BUILTIN\Administrators" or @"BUILTIN\Users" </param>
            <param name="Rights">like FileSystemRights.FullControl</param>
            <param name="ControlType">like AccessControlType.Allow</param>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyOS">
            <summary>
            通知系统使得环境变量生效
            </summary>
            <remarks>
            http://www.cnblogs.com/runliuv/p/3489427.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyOS.NotifyOSActiveVariables">
            <summary>
            通知系统能够使得环境变量生效
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.GridViewExportUtil">
            <summary>
            导出EXCEL
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.GridViewExportUtil.Export(System.String,System.Web.UI.WebControls.GridView)">
            <summary>
            将GRIDVIEW导出excel
            </summary>
            <param name="fileName">excel文件名</param>
            <param name="gv">GridView ＩＤ</param>
        </member>
        <member name="M:CYQ.Data.Tool.GridViewExportUtil.PrepareControlForExport(System.Web.UI.Control)">
            <summary>
            Replace any of the contained controls with literals
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:CYQ.Data.Tool.JsonMessage">
            <summary>
            用来表示json的一个信息,提供给EasyUI使用的
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.JsonMessage.Success">
            <summary>
            存储是否成功
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.JsonMessage.Message">
            <summary>
            存储提示信息
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.JsonMessage.Data">
            <summary>
            用来存储数据
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.wmv(System.String,System.String,System.String)">
              <summary>    
              wmv格式文件播放    
              </summary>    
              <param   name="url"></param>    
              <returns></returns>    
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.wma(System.String,System.String,System.String)">
            <summary>
            播放wma格式文件
            </summary>
            <param name="url">文件地址</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.avi(System.String,System.String,System.String)">
              <summary>    
              avi格式文件播放    
              </summary>    
              <param   name="url"></param>    
              <returns></returns>    
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.mpg(System.String,System.String,System.String)">
            <summary>
            播放mpg格式的文件
            </summary>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.rm(System.String,System.String,System.String)">
            <summary>
            播放rm格式的文件
            </summary>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.swf(System.String,System.String,System.String)">
            <summary>
            播放swf格式的文件
            </summary>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MediaHelper.mp3(System.String,System.String,System.String)">
            <summary>
            播放mp3
            </summary>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.SQLInjectionHelper">
             <summary>
            SQLInjectionHelper 的摘要说明
             </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SQLInjectionHelper.ValidUrlPostData">
            <summary>
            获取Post的数据
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SQLInjectionHelper.ValidUrlGetData">
            <summary>
            获取QueryString中的数据
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SQLInjectionHelper.ValidData(System.String)">
            <summary>
            验证是否存在注入代码
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:CYQ.Data.Tool.SQLInjectionHelper.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <param name="queryConditions"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.TransRowColumn">
            <summary>
            trans 的摘要说明
            author: jorans xu
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TransRowColumn.transRowToCol(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            DataTable 行转成列
            </summary>
            <param name="DataTableSource">数据源</param>
            <param name="groupbyDataMeber">按哪些字段转成列,以逗号分隔</param>
            <param name="needTransDataMenber">需要转的列,列名</param>
            <param name="data">需要转的列对应的值,列名</param>
            <param name="defaultvalue">当对应的列没有值时，使用该值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TransRowColumn.transColToRow(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            DataTable 列转成行
            </summary>
            <param name="DataTableSource">数据源</param>
            <param name="groupbyDataMeber">按哪些字段转成列</param>
            <param name="needTransCols">需要转的列</param>
            <param name="beColName">需要转的这些列的列名</param>
            <param name="valueColName">值对应的列名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TransRowColumn.addNewRow(System.Data.DataTable,System.String)">
            <summary>
            DataTable 新增一行
            </summary>
            <param name="dtSource">数据源</param>
            <param name="rowsValue">列值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TransRowColumn.addNewRow(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            DataTable 指定行号新增一行
            </summary>
            <param name="dtSource">数据源</param>
            <param name="rowsValue">列值</param>
            <param name="index">插入行的位置</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TransRowColumn.mergeRows(System.Web.UI.WebControls.GridView,System.String)">
            <summary>
            GridView合并行,groupbyDataMeberIndex字段的数据必须有序
            </summary>
            <param name="dtSource">GridView</param>
            <param name="groupbyDataMeber">group by 哪些字段的index</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DataSetHelper">
            <summary> 
            DataSet助手 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.SelectDistinct(System.String,System.Data.DataTable,System.String)">
            
            
            
            
            
            
            
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            相当于select distinct fieldName from sourceTable 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源DataTable</param> 
            <param name="fieldName">列名</param> 
            <returns>一个新的不含重复行的DataTable，列只包括fieldName指明的列</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.SelectDistinct(System.String,System.Data.DataTable,System.String[])">
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            相当于select distinct fieldName1,fieldName2,,fieldNamen from sourceTable 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源DataTable</param> 
            <param name="fieldNames">列名数组</param> 
            <returns>一个新的不含重复行的DataTable，列只包括fieldNames中指明的列</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.Distinct(System.String,System.Data.DataTable,System.String)">
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            并且包含sourceTable中所有的列。 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldName">字段</param> 
            <returns>一个新的不含重复行的DataTable</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.Distinct(System.String,System.Data.DataTable,System.String[])">
            <summary> 
            按照fieldNames从sourceTable中选择出不重复的行， 
            并且包含sourceTable中所有的列。 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldNames">字段</param> 
            <returns>一个新的不含重复行的DataTable</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.SelectInto(System.String,System.Data.DataTable,System.String,System.String,System.String)">
            <summary> 
            按sort排序，按rowFilter过滤sourceTable， 
            复制fieldList中指明的字段的数据到新DataTable，并返回之 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldList">字段列表</param> 
            <param name="rowFilter">过滤条件</param> 
            <param name="sort">排序</param> 
            <returns>新DataTable</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataSetHelper.SelectGroupByInto(System.String,System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
            <param name="sourceTable"></param>
            <param name="fieldList"></param>
            <param name="rowFilter"></param>
            <param name="groupBy"></param>
            <returns>创建的一个新的DataTable</returns>
        </member>
        <member name="T:CYQ.Data.Tool.MSG">
            <summary>
            windows主要消息
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.LmadaHelper">
             <summary>
            lamada表达式演化过程
             </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WindowHelper">
            <summary>
            窗体帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WindowHelper.GetChildWindowsUseRegex(System.IntPtr,System.String,System.String)">
            <summary>
            通过正则表达式获取子窗体
            </summary>
            <param name="parentHandle">父类句柄</param>
            <param name="name">窗体名称</param>
            <param name="classname">窗体类名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.WindowHelper.GetAllDesktopWindowsUseRegex(System.String,System.String,System.Boolean)">
            <summary>
            结合窗体名称以及窗体类名查找顶级窗体，通过正则表达式找到的顶级窗体，最后建议缩小范围到一个为佳
            </summary>
            <param name="windowText">窗体名称，正则 .*内容.*</param>
            <param name="className">窗体类名 ， 正则 .*内容.*</param>
            <param name="bothMath">是否窗体名称和窗体类名的正则表达式需要同时匹配</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.WindowHelper.GetSiblingWindowsUseRegex(System.IntPtr,System.String,System.String,System.Int32)">
            <summary>
            返回相同窗体文件和窗体类名的第几个窗体信息
            </summary>
            <param name="parentHandle">父类窗体</param>
            <param name="name">窗体文字</param>
            <param name="classname">窗体类名</param>
            <param name="order">第几个，最小为1</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.WindowHelper.WindowInfo">
            <summary>
            窗体信息结构
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.WindowHelper.WindowInfo.szWindowName">
            <summary>
            窗体文字
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.WindowHelper.WindowInfo.szClassName">
            <summary>
            窗体类名
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ConsoleWin32Helper">
            <summary>
            添加引用 System.Runtime.InteropServices; 和 System.Threading; 用于禁用关闭按钮
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConsoleWin32Helper.DisableCloseButton(System.String)">
            <summary>
            禁用关闭按钮
            </summary>
            <param name="consoleName">控制台名字</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConsoleWin32Helper.IsExistsConsole(System.String)">
            <summary>
            是否存在
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConsoleWindow2">
            <summary>
            Console帮助类，可以显示Winform的同时显示Console http://www.cnblogs.com/zhouyinhui/archive/2009/06/06/1497500.html
            先在调用类的构造函数中调用CreateConsole方法，然后在调用Console.WriteLine方法既可以输出了
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConsoleWindow2.CreateConsole">
            <summary>
            在调用之前必须调用此方法 或者在构造函数中调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell">
            <summary>
            Provides a drop-down filter list in a DataGridViewColumnHeaderCell.
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.dropDownListBox">
            <summary>
            The ListBox used for all drop-down lists. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.filters">
            <summary>
            A list of filters available for the owning column stored as 
            formatted and unformatted string values. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.selectedFilterValue">
            <summary>
            The drop-down list filter value currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.currentColumnFilter">
            <summary>
            The complete filter string currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.filtered">
            <summary>
            Indicates whether the DataGridView is currently filtered by the owning column.  
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.#ctor(System.Windows.Forms.DataGridViewColumnHeaderCell)">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class and sets its property values to the property values of the 
            specified DataGridViewColumnHeaderCell.
            </summary>
            <param name="oldHeaderCell">The DataGridViewColumnHeaderCell to copy property values from.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.Clone">
            <summary>
            Creates an exact copy of this cell.
            </summary>
            <returns>An object that represents the cloned DataGridViewAutoFilterColumnHeaderCell.</returns>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.OnDataGridViewChanged">
            <summary>
            Called when the value of the DataGridView property changes
            in order to perform initialization that requires access to the 
            owning control and column. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.VerifyDataSource">
            <summary>
            Confirms that the data source, if it has been set, is a BindingSource.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.HandleDataGridViewEvents">
            <summary>
            Add handlers to various DataGridView events, primarily to invalidate 
            the drop-down button bounds, hide the drop-down list, and reset 
            cached filter values when changes in the DataGridView require it.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the user scrolls horizontally.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnDisplayIndexChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the column display index changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnWidthChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when a column width changes
            in the DataGridView control. A width change in any column of the 
            control has the potential to affect the drop-down button location, 
            depending on the current horizontal scrolling position and whether
            the changed column is to the left or right of the current column. 
            It is easier to invalidate the button in all cases. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnHeadersHeightChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the height of the column headers changes.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the size of the DataGridView changes.
            This prevents a painting issue that occurs when the right edge of the control moves 
            to the right and the control contents have previously been scrolled to the right.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataBindingComplete(System.Object,System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
            <summary>
            Invalidates the drop-down button bounds, hides the drop-down 
            filter list, if it is showing, and resets the cached filter values
            if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewBindingCompleteEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataSourceChanged(System.Object,System.EventArgs)">
            <summary>
            Verifies that the data source meets requirements, invalidates the 
            drop-down button bounds, hides the drop-down filter list if it is 
            showing, and resets the cached filter values if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.ResetDropDown">
            <summary>
            Invalidates the drop-down button bounds and hides the filter
            list if it is showing.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.ResetFilter">
            <summary>
            Resets the cached filter values if the filter has been removed.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnSortModeChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Throws an exception when the column sort mode is changed to Automatic.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Paints the column header cell, including the drop-down button. 
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Handles mouse clicks to the header cell, displaying the 
            drop-down list or sorting the owning column as appropriate. 
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.SortByColumn">
            <summary>
            Sorts the DataGridView by the current column if AutomaticSortingEnabled is true.
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxShowing">
            <summary>
            Indicates whether dropDownListBox is currently displayed 
            for this header cell. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.ShowDropDownList">
            <summary>
            Displays the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.HideDropDownList">
            <summary>
            Hides the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.SetDropDownListBoxBounds">
            <summary>
            Sets the dropDownListBox size and position based on the formatted 
            values in the filters dictionary and the position of the drop-down 
            button. Called only by ShowDropDownListBox.  
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.HandleDropDownListBoxEvents">
            <summary>
            Adds handlers to ListBox events for handling mouse
            and keyboard input.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.UnhandleDropDownListBoxEvents">
            <summary>
            Removes the ListBox event handlers. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Adjusts the filter in response to a user selection from the drop-down list. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.lostFocusOnDropDownButtonClick">
            <summary>
            Indicates whether the drop-down list lost focus because the
            user clicked the drop-down button. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Hides the drop-down list when it loses focus. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the ENTER and ESC keys.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.PopulateFilters">
            <summary>
            Populates the filters dictionary with formatted and unformatted string
            representations of each unique value in the column, accounting for all 
            filters except the current column's. Also adds special filter options. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilterWithoutCurrentColumn(System.String)">
            <summary>
            Returns a copy of the specified filter string after removing the part that filters the current column, if present. 
            </summary>
            <param name="filter">The filter string to parse.</param>
            <returns>A copy of the specified filter string without the current column's filter.</returns>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.UpdateFilter">
            <summary>
            Updates the BindingSource.Filter value based on a user selection
            from the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.RemoveFilter(System.Windows.Forms.DataGridView)">
            <summary>
            Removes the filter from the BindingSource bound to the specified DataGridView. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the BindingSource to unfilter.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.GetFilterStatus(System.Windows.Forms.DataGridView)">
            <summary>
            Gets a status string for the specified DataGridView indicating the 
            number of visible rows in the bound, filtered BindingSource, or 
            String.Empty if all rows are currently visible. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the 
            BindingSource to return the filter status for.</param>
            <returns>A string in the format "x of y records found" where x is 
            the number of rows currently displayed and y is the number of rows 
            available, or String.Empty if all rows are currently displayed.</returns>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.dropDownButtonBoundsValue">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering 
            is disabled or the button bounds need to be recalculated. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.InvalidateDropDownButtonBounds">
            <summary>
            Sets dropDownButtonBoundsValue to Rectangle.Empty if it isn't already empty. 
            This indicates that the button bounds should be recalculated. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.SetDropDownButtonBounds">
            <summary>
            Sets the position and size of dropDownButtonBoundsValue based on the current 
            cell bounds and the preferred cell height for a single line of header text. 
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.AdjustPadding(System.Int32)">
            <summary>
            Adjusts the cell padding to widen the header by the drop-down button width.
            </summary>
            <param name="newDropDownButtonPaddingOffset">The new drop-down button width.</param>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.currentDropDownButtonPaddingOffset">
            <summary>
            The current width of the drop-down button. This field is used to adjust the cell padding.  
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.filteringEnabledValue">
            <summary>
            Indicates whether filtering is enabled for the owning column. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.automaticSortingEnabledValue">
            <summary>
            Indicates whether automatic sorting is enabled. 
            </summary>
        </member>
        <member name="F:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxMaxLinesValue">
            <summary>
            The maximum number of lines in the drop-down list. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxHeightInternal">
            <summary>
            Gets the actual maximum height of the drop-down list, in pixels.
            The maximum height is calculated from the DropDownListBoxMaxLines 
            property value, but is limited to the available height of the 
            DataGridView control. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownButtonBounds">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering
            is disabled. Recalculates the button bounds if filtering is enabled
            and the bounds are empty.
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilteringEnabled">
            <summary>
            Gets or sets a value indicating whether filtering is enabled.
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.AutomaticSortingEnabled">
            <summary>
            Gets or sets a value indicating whether automatic sorting is enabled for the owning column. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxLines">
            <summary>
            Gets or sets the maximum number of lines to display in the drop-down filter list. 
            The actual height of the drop-down list is constrained by the DataGridView height. 
            </summary>
        </member>
        <member name="T:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilterListBox">
            <summary>
            Represents a ListBox control used as a drop-down filter list
            in a DataGridView control.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.#ctor">
            <summary>
            Initializes a new instance of the FilterListBox class.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Indicates that the FilterListBox will handle (or ignore) all 
            keystrokes that are not handled by the operating system. 
            </summary>
            <param name="keyData">A Keys value that represents the keyboard input.</param>
            <returns>true in all cases.</returns>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes a keyboard message directly, preventing it from being
            intercepted by the parent DataGridView control.
            </summary>
            <param name="m">A Message, passed by reference, that 
            represents the window message to process.</param>
            <returns>true if the message was processed by the control;
            otherwise, false.</returns>
        </member>
        <member name="T:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn">
            <summary>
            Represents a DataGridViewTextBoxColumn with a drop-down filter list accessible from the header cell.  
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the DataGridViewAutoFilterTextBoxColumn class.
            </summary>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.RemoveFilter(System.Windows.Forms.DataGridView)">
            <summary>
            Removes the filter from the BindingSource bound to the specified DataGridView. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the BindingSource to unfilter.</param>
        </member>
        <member name="M:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.GetFilterStatus(System.Windows.Forms.DataGridView)">
            <summary>
            Gets a status string for the specified DataGridView indicating the 
            number of visible rows in the bound, filtered BindingSource, or 
            String.Empty if all rows are currently visible. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the 
            BindingSource to return the filter status for.</param>
            <returns>A string in the format "x of y records found" where x is 
            the number of rows currently displayed and y is the number of rows 
            available, or String.Empty if all rows are currently displayed.</returns>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.DefaultHeaderCellType">
            <summary>
            Returns the AutoFilter header cell type. This property hides the 
            non-virtual DefaultHeaderCellType property inherited from the 
            DataGridViewBand class. The inherited property is set in the 
            DataGridViewAutoFilterTextBoxColumn constructor. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.SortMode">
            <summary>
            Gets or sets the sort mode for the column and prevents it from being 
            set to Automatic, which would interfere with the proper functioning 
            of the drop-down button. This property hides the non-virtual 
            DataGridViewColumn.SortMode property from the designer. The inherited 
            property is set in the DataGridViewAutoFilterTextBoxColumn constructor.
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.FilteringEnabled">
            <summary>
            Gets or sets a value indicating whether filtering is enabled for this column. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.AutomaticSortingEnabled">
            <summary>
            Gets or sets a value indicating whether automatic sorting is enabled for this column. 
            </summary>
        </member>
        <member name="P:DataGridViewAutoFilter.DataGridViewAutoFilterTextBoxColumn.DropDownListBoxMaxLines">
            <summary>
            Gets or sets the maximum height of the drop-down filter list for this column. 
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.PrintDataGridView">
            <summary>
            打印
            开心懒人
            2014-10-10
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PrintDataGridView.Print(System.Windows.Forms.DataGridView,System.String,System.String)">
            <summary>
            打印DataGridView
            </summary>
            <param name="dataGridView">要打印的DataGridView</param>
            <param name="title">标题</param>
            <param name="title2">第二标题,可以为null</param>
        </member>
        <member name="T:System.BackgroundWorkerExt">
            <summary>
            BackgroundWorker扩展类
            </summary>
        </member>
        <member name="M:System.BackgroundWorkerExt.Init(System.ComponentModel.BackgroundWorker,System.Boolean,System.Boolean)">
            <summary>
            初始化BackgroundWorker
            </summary>
            <param name="bw"></param>
            <param name="workerReportsProgress"></param>
            <param name="workerSupportsCancellation"></param>
        </member>
        <member name="M:System.BackgroundWorkerExt.Init(System.ComponentModel.BackgroundWorker)">
            <summary>
            初始化BackgroundWorker
            </summary>
            <param name="bw"></param>
        </member>
        <member name="T:System.RichTextBoxExt">
            <summary>
            RichTextBox扩展方法
            </summary>
        </member>
        <member name="M:System.RichTextBoxExt.AppendTextAndScrollToCaret(System.Windows.Forms.RichTextBox,System.String)">
            <summary>
            滚动到最低端
            </summary>
            <param name="richTextBox"></param>
            <param name="text">文字会自动在结果加上\r\n</param>
        </member>
        <member name="M:System.RichTextBoxExt.AppendTextAndScrollToCaret(System.Windows.Forms.RichTextBox,System.String,System.Drawing.Color)">
            <summary>
            滚动到最低端
            </summary>
            <param name="richTextBox"></param>
            <param name="text">文字会自动在结果加上\r\n</param>
        </member>
        <member name="M:System.RichTextBoxExt.TextInThread(System.Windows.Forms.RichTextBox,System.String)">
            <summary>
            在线程中赋值文字
            </summary>
            <param name="rtb"></param>
            <param name="text"></param>
        </member>
        <member name="T:CYQ.Data.Tool.PingHelper">
            <summary>
            ping命令帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PingHelper.PingResult(System.String,System.Int32)">
            <summary>
            ping命令
            </summary>
            <param name="ip">ip地址</param>
            <para name="timeout">超时秒数</para>
            <returns>链接成功返回success，否则返回timeout</returns>
        </member>
        <member name="M:CYQ.Data.Tool.PingHelper.PingResult(System.String)">
            <summary>
            ping命令
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:System.InputBoxResult">
            <summary>
            Class used to store the result of an InputBox.Show message.
            </summary>
        </member>
        <member name="T:System.InputBox">
            <summary>
            Summary description for InputBox.
            </summary>
        </member>
        <member name="M:System.InputBox.ShowPWD(System.String,System.String,System.String)">
            <summary>
            设置密码
            </summary>
            <param name="Prompt"></param>
            <param name="Title"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ProxyManagerT">
            <summary>
            设置IE代理
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyManagerT.Add(System.String)">
            <summary>
            设置代理
            </summary>
            <param name="server">http=127.0.0.1:17173</param>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyManagerT.Run">
            <summary>
            执行设置代理操作
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ProxyManager">
            <summary>
            代理帮助类,用于设置IE代理地址
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyManager.SetProxy(System.String)">
            <summary>
            设置代理
            </summary>
            <param name="strProxy">http=127.0.0.1:17173 或者 https=127.0.0.1:17173</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyManager.SetProxy(System.String,System.String)">
            <summary>
            设置代理
            </summary>
            <param name="strProxy">http=127.0.0.1:17173 或者 https=127.0.0.1:17173</param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="T:System.DoubleBufferDataGridView">
            <summary>
            双缓冲，解决闪烁问题
            </summary>
        </member>
        <member name="M:System.DoubleBufferDataGridView.DoubleBufferedDataGirdView(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            双缓冲，解决闪烁问题
            </summary>
            <param name="dgv"></param>
            <param name="flag"></param>
        </member>
        <member name="M:System.DoubleBufferListView.DoubleBufferedListView(System.Windows.Forms.ListView,System.Boolean)">
            <summary>
            双缓冲，解决闪烁问题
            </summary>
            <param name="lv"></param>
            <param name="flag"></param>
        </member>
        <member name="T:CYQ.Data.Tool.NetworkShareConnect">
            <summary>
            共享文件访问链接帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NetworkShareConnect.connectToShare(System.String,System.String,System.String)">
            <summary>
            连接共享
            </summary>
            <param name="remoteUNC">共享网络路径</param>
            <param name="username">登录用户名</param>
            <param name="password">密码</param>
            <returns>错误信息</returns>
        </member>
        <member name="M:CYQ.Data.Tool.NetworkShareConnect.connectToShare(System.String)">
            <summary>
            没用户密码连接
            </summary>
            <param name="remoteUNC">共享网络路径</param>
            <returns>错误信息</returns>
        </member>
        <member name="M:CYQ.Data.Tool.NetworkShareConnect.disconnectRemote(System.String)">
            <summary>
            断开连接注意：断开共享后，系统缓存还在，没能即时失去连接，在1-3分钟内仍然可以访问共享。
            有时候要注销才能失去连接，原因未明 
            </summary>
            <param name="remoteUNC"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.PopupHelper">
            <summary>
            提示信息帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PopupHelper.#ctor">
            <summary>
            显示提示
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PopupHelper.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            显示提示
            </summary>
            <param name="showTime">显示的存在时间，单位为秒</param>
            <param name="alertsMaxCount">提示显示个数</param>
            <param name="alertAlignment">提示位置1：TopRight 2：TopLeft 3：BottomRight 4:BottomLeft</param>
        </member>
        <member name="M:CYQ.Data.Tool.PopupHelper.Show(System.String,System.String,System.Int32)">
            <summary>
            显示提示
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="type">类型 1:提示 2：警告 3：错误 4:无</param>
        </member>
        <member name="M:CYQ.Data.Tool.PopupHelper.Show(System.String)">
            <summary>
            提示信息
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ProxyHelper">
            <summary>
            代理帮助类库，用于验证代理是否有效
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyHelper.Verify(System.String,System.Int32,System.Int32)">
            <summary>
            验证代理是否有效
            </summary>
            <param name="ip">代理服务器IP地址</param>
            <param name="port">端口</param>
            <param name="timeout">超时秒数</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyHelper.Verify(System.String,System.Int32)">
            <summary>
            验证代理IP是否有效的方法 返回Error表示失败，否则返回百度首页html
            </summary>
            <param name="IP"></param>
            <param name="port"></param>
            <returns>返回Error表示失败，否则返回百度首页html</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyHelper.ConnectProxyServer(System.String,System.Int32,System.Net.Sockets.Socket)">
            <summary>
            链接匿名socks5代理服务器
            </summary>
            <param name="strRemoteHost"></param>
            <param name="iRemotePort"></param>
            <param name="sProxyServer"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyHelper.GetSocket(System.String,System.Int32)">
            <summary>
            返回一个Socket对象
            </summary>
            <param name="strIpAdd"></param>
            <param name="iPort"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProxyHelper.VerifySocks5(System.String,System.Int32)">
            <summary>
            测试代理服务器
            </summary>
            <param name="ip">Socks5代理服务器IP地址</param>
            <param name="port">端口</param>
            <returns>返回空字符串表示正常，否则表示错误</returns>
        </member>
        <member name="T:CYQ.Data.Tool.RemoteUpload">
            <summary>
            远程上传从其他网站复制过来的图片
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.RemoteUpload.sOriginalFileName">
            <summary>
            上传的源文件名称
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.RemoteUpload.sSaveFileName">
            <summary>
            上传后的文件名称
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.RemoteUpload.sPathFileName">
            <summary>
            结合 sContentPath 得取的带路径的上传路径名称
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.RemoteUpload.sPath">
            <summary>
            上传需要建立目录的临时变量
            </summary>
            <permission cref="T:System.Security.PermissionSet">private</permission>
        </member>
        <member name="F:CYQ.Data.Tool.RemoteUpload.sContentPath">
            <summary>
            根据 sBaseUrl 参数转化后的路径(包含sUploadDir)路径
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.RtnContent(System.String,System.String,System.String,System.String@)">
            <summary>
            从HTML文本中下载远程图片 Relative相对
            </summary>
            <param name="sHTML">含有图片网址路径的HTML文本</param>
            <param name="path">服务器上的物理路径</param>
            <param name="relativePath">网站上的相对路径，与上面的物理路径相对应</param>
            <param name="Images">返回下载的所有图片文件，以“|”间隔！</param>
            <returns>返回替换远程图片路径的HTML文本</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.RtnContent(System.String,System.String@)">
            <summary>
            从HTML文本中下载远程图片 Relative相对
            </summary>
            <param name="sHTML">含有图片网址路径的HTML文本</param>
            <param name="Images">返回下载的所有图片文件，以“|”间隔！</param>
            <returns>返回替换远程图片路径的HTML文本</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.GetRndFileName(System.String)">
            <summary>
            获取随即文件名称
            </summary>
            <param name="filetype"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.GetRootURI">
            <summary>
            取得网站的根目录的URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.GetRootURI(System.Web.HttpRequest)">
            <summary>
            取得网站的根目录的URL
            </summary>
            <param name="Req"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.GetRootPath">
            <summary>
            取得网站根目录的物理路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.SaveRemoteFile(System.String,System.String)">
            <summary>
            保存远程的文件到本地
            </summary>
            <param name="s_LocalFileName">保存到本地文件名</param>
            <param name="s_RemoteFileUrl">远程读取的文件URL</param>
            <returns>如果保存成功则返回 true,否则返回 false</returns>
            <remarks>
            此方法仅供内部使用，由 ReplaceRemoteUrl 进行调用
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.RemoteUpload.CreateDateTimeDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="sign"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CookiesHelper">
            <summary>
                Cookies工具
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.Set(System.String,System.Object,System.Boolean)">
            <summary>
                写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="isAddPrefix"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.Set(System.String,System.Object,System.Int32,System.Boolean)">
            <summary>
                写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="value">值</param>
            <param name="expires">过期时间(分钟)</param>
            <param name="isAddPrefix"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.Get(System.String,System.Boolean)">
            <summary>
                读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
            <param name="isAddPrefix"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.Get``1(System.String,``0,System.Boolean)">
            <summary>
                读cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="defValue">默认值</param>
            <returns>cookie值</returns>
            <param name="isAddPrefix"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.RemoveCookie(System.String,System.Boolean)">
            <summary>
                移除cookie值
            </summary>
            <param name="strName">名称c</param>
            <param name="isAddPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CookiesHelper.IsValidDomain(System.String)">
            <summary>
                是否为有效域
            </summary>
            <param name="host">域名</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DbUtility">
            <summary>
            通用数据库访问类，封装了对数据库的常见操作
            作者：周公
            创建日期：2011-07-18
            修改日期：2012-04-12
            新浪微博地址：http://weibo.com/zhoufoxcn
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.#ctor(System.String,CYQ.Data.Tool.DbProviderType)">
            <summary>
            构造函数
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <param name="providerType">数据库类型枚举，参见<paramref name="providerType"/></param>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteNonQuery(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>   
            对数据库执行增删改操作，返回受影响的行数。   
            </summary>   
            <param name="sql">要执行的增删改的SQL语句</param>   
            <param name="parameters">执行增删改语句所需要的参数</param>
            <returns></returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteNonQuery(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>   
            对数据库执行增删改操作，返回受影响的行数。   
            </summary>   
            <param name="sql">要执行的增删改的SQL语句</param>   
            <param name="parameters">执行增删改语句所需要的参数</param>
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteReader(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>   
            执行一个查询语句，返回一个关联的DataReader实例   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteReader(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>   
            执行一个查询语句，返回一个关联的DataReader实例   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteDataTable(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>   
            执行一个查询语句，返回一个包含查询结果的DataTable   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteDataTable(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>   
            执行一个查询语句，返回一个包含查询结果的DataTable   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteScalar(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>   
            执行一个查询语句，返回查询结果的第一行第一列   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>   
            <returns></returns>   
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.ExecuteScalar(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>   
            执行一个查询语句，返回查询结果的第一行第一列   
            </summary>   
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>   
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>   
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.QueryForList``1(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            查询多个实体集合
            </summary>
            <typeparam name="T">返回的实体集合类型</typeparam>
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.QueryForList``1(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>
             查询多个实体集合
            </summary>
            <typeparam name="T">返回的实体集合类型</typeparam>
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>   
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.QueryForObject``1(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            查询单个实体
            </summary>
            <typeparam name="T">返回的实体集合类型</typeparam>
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.QueryForObject``1(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>
            查询单个实体
            </summary>
            <typeparam name="T">返回的实体集合类型</typeparam>
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>   
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DbUtility.CreateDbCommand(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.Data.CommandType)">
            <summary>
            创建一个DbCommand对象
            </summary>
            <param name="sql">要执行的查询语句</param>   
            <param name="parameters">执行SQL查询语句所需要的参数</param>
            <param name="commandType">执行的SQL语句的类型</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DbProviderType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ProviderFactory">
            <summary>
            DbProviderFactory工厂类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ProviderFactory.GetProviderInvariantName(CYQ.Data.Tool.DbProviderType)">
            <summary>
            获取指定数据库类型对应的程序集名称
            </summary>
            <param name="providerType">数据库类型枚举</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProviderFactory.GetDbProviderFactory(CYQ.Data.Tool.DbProviderType)">
            <summary>
            获取指定类型的数据库对应的DbProviderFactory
            </summary>
            <param name="providerType">数据库类型枚举</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ProviderFactory.ImportDbProviderFactory(CYQ.Data.Tool.DbProviderType)">
            <summary>
            加载指定数据库类型的DbProviderFactory
            </summary>
            <param name="providerType">数据库类型枚举</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DEncrypt">
            <summary>
            加密解密类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Test">
            <summary>
            测试
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Sha1Md5(System.String)">
            <summary>
            sha1与md5组合加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Md5(System.String)">
            <summary>
            md5加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Sha1(System.String)">
            <summary>
            sha1加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Encrypt(System.String)">
            <summary>
            md5双重加密，以密匙qianbo
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Encrypt(System.String,System.String)">
            <summary>
            md5双重加密
            </summary>
            <param name="text">欲加密字符串</param>
            <param name="sKey">密匙</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Decrypt(System.String)">
            <summary>
            解密，以默认密匙qianbo
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="text">欲解密字符串</param>
            <param name="sKey">密匙</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DEncrypt.Test2">
            <summary>
            TestDriven测试
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.DesHelper">
            <summary>
            Des加密解密
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DesHelper.Encrypt(System.String,System.String)">
            <summary>
            加密 密匙必须8位
            标准的DES密钥长度为64bit，密钥每个字符占7bit，外加1bit的奇偶校验，64/(7+1)=8。所以必须是8个字符也只能是8个字符。
            但 .NET 里 DESCryptoServiceProvider 这个类是微软已经封装好的了，如果密钥长度不足，会以 PKCS7Padding 方式补足位。
            </summary>
            <param name="text"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DesHelper.Decrypt(System.String,System.String)">
            <summary>
            解密 密匙必须8位
            </summary>
            <param name="cyphertext"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.EncDec">
            <summary>
            Des加密解密帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.Encrypt(System.Byte[])">
            <summary>
            加密
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.Decrypt(System.Byte[])">
            <summary>
            解密
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Security.Cryptography.PaddingMode)">
            <summary>
            加密
            </summary>
            <param name="data"></param>
            <param name="iv"></param>
            <param name="key"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Security.Cryptography.PaddingMode)">
            <summary>
            解密
            </summary>
            <param name="data"></param>
            <param name="iv"></param>
            <param name="key"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.CalculateMD5Hash32(System.String)">
            <summary>
            计算MD5值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.CalculateMD5Hash16(System.String)">
            <summary>
            计算MD5以及Hash16
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.EncodeBase64(System.String)">
            <summary>
            加密Base64
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.DecodeBase64(System.String)">
            <summary>
            解密Base64
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.DateTimeBase64(System.DateTime)">
            <summary>
            日期转化为Base64
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncDec.PwdString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sName"></param>
            <param name="sPwdOrig"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Encrypt">
            <summary>
                加密工具,内部类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Md5(System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            MD5函数
            </summary>
            <param name="str">原始字符串</param>
            <param name="isReverse">是否加密后反转字符串</param>
            <param name="toUpper">是否加密后转为大写</param>
            <param name="count">加密次数</param>
            <returns>MD5结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.SHA256(System.String)">
            <summary>
                SHA256函数
            </summary>
            ///
            <param name="str">原始字符串</param>
            <returns>SHA256结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Reverse(System.String)">
            <summary>
                反转字符串
            </summary>
            <param name="input">要反转字符串</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Encrypt.Aes">
            <summary>
                加密
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Aes.Encode(System.String,System.String)">
            <summary>
                AES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Aes.Decode(System.String,System.String)">
            <summary>
                AES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:CYQ.Data.Tool.Encrypt.Des">
            <summary>
                加密
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Des.Encode(System.String,System.String)">
            <summary>
                DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Encrypt.Des.Decode(System.String,System.String)">
            <summary>
                DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:CYQ.Data.Tool.EntityReader">
            <summary>
            实体阅读器类，可以从DataTable中或者DbDataReader的实例中将数据转换成对应的示例
            作者：周公
            创建日期：2011-07-21
            修改日期：2012-04-12
            新浪微博地址：http://weibo.com/zhoufoxcn
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetEntities``1(System.Data.DataTable)">
            <summary>
            将DataTable中的所有数据转换成List&gt;T&lt;集合
            </summary>
            <typeparam name="T">DataTable中每条数据可以转换的数据类型</typeparam>
            <param name="dataTable">包含有可以转换成数据类型T的数据集合</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetEntities``1(System.Data.Common.DbDataReader)">
            <summary>
            将DbDataReader中的所有数据转换成List&gt;T&lt;集合
            </summary>
            <param name="reader">DbDataReader</param>
            <typeparam name="T">DbDataReader中每条数据可以转换的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetSimpleEntities``1(System.Data.DataTable)">
            <summary>
            从DataTable中将每一行的第一列转换成T类型的数据
            </summary>
            <typeparam name="T">要转换的目标数据类型</typeparam>
            <param name="dataTable">包含有可以转换成数据类型T的数据集合</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetValueFromObject(System.Object,System.Type)">
            <summary>
            将指定的 Object 的值转换为指定类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <param name="targetType">要转换的目标数据类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetComplexEntities``1(System.Data.DataTable)">
            <summary>
            从DataTable中读取复杂数据类型集合
            </summary>
            <typeparam name="T">要转换的目标数据类型</typeparam>
            <param name="dataTable">包含有可以转换成数据类型T的数据集合</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetComplexEntities``1(System.Data.Common.DbDataReader)">
            <summary>
            从DbDataReader的实例中读取复杂的数据类型
            </summary>
            <typeparam name="T">要转换的目标类</typeparam>
            <param name="reader">DbDataReader的实例</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetSimpleEntities``1(System.Data.Common.DbDataReader)">
            <summary>
            从DbDataReader的实例中读取简单数据类型（String,ValueType)
            </summary>
            <typeparam name="T">目标数据类型</typeparam>
            <param name="reader">DbDataReader的实例</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetString(System.Object)">
            <summary>
            将Object转换成字符串类型
            </summary>
            <param name="value">object类型的实例</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetEnum(System.Object,System.Type)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetBoolean(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetByte(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetSByte(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetChar(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetGuid(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetInt16(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetUInt16(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetInt32(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetUInt32(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetInt64(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetUInt64(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetSingle(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetDouble(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetDecimal(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetDateTime(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetTimeSpan(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetBinary(System.Object)">
            <summary>
            将指定的 Object 的值转换为指定枚举类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetGenericValueFromObject(System.Object,System.Type)">
            <summary>
            将Object类型数据转换成对应的可空数值类型表示
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <param name="targetType">可空数值类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GetNonGenericValueFromObject(System.Object,System.Type)">
            <summary>
            将指定的 Object 的值转换为指定类型的值。
            </summary>
            <param name="value">实现 IConvertible 接口的 Object，或者为 null</param>
            <param name="targetType">目标对象的类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EntityReader.GenerateTypePropertyMapping(System.Type)">
            <summary>
            获取该类型中属性与数据库字段的对应关系映射
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ColumnNameAttribute">
            <summary>
            自定义属性，用于指示如何从DataTable或者DbDataReader中读取类的属性值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ColumnNameAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="columnName">类属性对应的列名</param>
        </member>
        <member name="P:CYQ.Data.Tool.ColumnNameAttribute.ColumnName">
            <summary>
            类属性对应的列名
            </summary>
        </member>
        <member name="T:System.BoolExtend">
            <summary>
                Bool扩展工具
            </summary>
        </member>
        <member name="M:System.BoolExtend.IsTrue``1(System.Boolean,``0)">
            <summary>
                结果为True时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:System.BoolExtend.IsTrue``1(System.Nullable{System.Boolean},``0)">
            <summary>
                结果为True时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:System.BoolExtend.IsFalse``1(System.Boolean,``0)">
            <summary>
                结果为False时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:System.BoolExtend.IsFalse``1(System.Nullable{System.Boolean},``0)">
            <summary>
                结果为False时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:System.BoolExtend.GetName(System.Boolean,System.String,System.String)">
            <summary>
            获取中文
            </summary>
            <param name="b"></param>
            <param name="strTrue">为True时的中文：是</param>
            <param name="strFalse">为False时的中文：否</param>
            <returns></returns>
        </member>
        <member name="M:System.BoolExtend.GetName(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            获取中文
            </summary>
            <param name="b"></param>
            <param name="strTrue">为True时的中文：是</param>
            <param name="strFalse">为False时的中文：否</param>
            <returns></returns>
        </member>
        <member name="T:System.ControlExtend">
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
        </member>
        <member name="M:System.ControlExtend.GetValue(System.Web.UI.WebControls.CheckBoxList)">
            <summary>
                获取CheckBoxList中，选中后的枚举值
            </summary>
            <param name="control">CheckBoxList控件</param>
        </member>
        <member name="M:System.ControlExtend.SetValue(System.Web.UI.WebControls.CheckBoxList,System.Int32)">
            <summary>
                获取CheckBoxList中，选中后的枚举值
            </summary>
            <param name="control">CheckBoxList控件</param>
            <param name="value">设置的值</param>
        </member>
        <member name="M:System.ControlExtend.Bind``1(System.Windows.Forms.DataGridView,System.Collections.Generic.List{``0})">
            <summary>
                IEnumerable绑定到DataGridView
            </summary>
            <param name="dgv">DataGridView</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:System.ControlExtend.Bind``1(System.Windows.Forms.DataGridView,System.ComponentModel.BindingList{``0},System.Action{System.Object,System.ComponentModel.ListChangedEventArgs})">
            <summary>
                IEnumerable绑定到DataGridView
            </summary>
            <param name="dgv">DataGridView</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:System.ControlExtend.ToList``1(System.Web.UI.WebControls.ListItemCollection)">
            <summary>
                将ListItem 转换为List
            </summary>
            <typeparam name="T">指定要转换的基本类型</typeparam>
            <param name="lstItem">ListItemCollection</param>
        </member>
        <member name="M:System.ControlExtend.SetDisEnabledColor(System.Web.UI.ControlCollection)">
            <summary>
                设置冻结的ListControl的颜色不为灰
            </summary>
            <param name="controls"></param>
        </member>
        <member name="M:System.ControlExtend.ClearAllEvents(System.Object,System.String)">
            <summary>
            清除事件
            </summary>
            <param name="objectHasEvents"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:System.ControlExtend.GetValue``1(System.Web.UI.WebControls.ListControl)">
            <summary>
                获取ListBox的值
            </summary>
            <param name="control">ListControl控件</param>
        </member>
        <member name="M:System.ControlExtend.SetValue``1(System.Web.UI.WebControls.ListControl,System.Collections.Generic.List{``0})">
            <summary>
                设置ListBox的值
            </summary>
            <param name="control">ListControl控件</param>
            <param name="lst">要设置的值</param>
        </member>
        <member name="M:System.ControlExtend.InsertItem(System.Web.UI.WebControls.ListControl,System.Object,System.String,System.Int32)">
            <summary>
                插入项
            </summary>
            <param name="control">control控件</param>
            <param name="text">显示的名称</param>
            <param name="value">保存的值</param>
            <param name="index">插入的项索引</param>
        </member>
        <member name="M:System.ControlExtend.SelectedItems(System.Web.UI.WebControls.ListControl,System.Object)">
            <summary>
                选择项
            </summary>
            <param name="control">ListControl控件</param>
            <param name="selectedValue">选择项</param>
        </member>
        <member name="M:System.ControlExtend.Bind``1(System.Web.UI.WebControls.ListControl,``0[],System.Object)">
            <summary>
                string[]绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="strs">源数据</param>
            <param name="selectedValue">默认选择值</param>
        </member>
        <member name="M:System.ControlExtend.Bind(System.Web.UI.WebControls.ListControl,System.Collections.IEnumerable,System.Object,System.String,System.String,System.String,System.Object)">
            <summary>
                IEnumerable绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="lst">源数据</param>
            <param name="dataTextField">绑定的文本字段</param>
            <param name="dataValueField">绑定的值字段</param>
            <param name="defShowText">第一行显示的文字</param>
            <param name="defShowValue">第一行显示的值</param>
            <param name="selectedValue">默认选择值</param>
        </member>
        <member name="M:System.ControlExtend.Bind(System.Windows.Forms.ListControl,System.Collections.IEnumerable,System.String,System.String)">
            <summary>
                WinForm绑定
            </summary>
            <param name="control">控件</param>
            <param name="lst">List列表</param>
            <param name="dataTextField">显示名称</param>
            <param name="dataValueField">值</param>
        </member>
        <member name="M:System.ControlExtend.Bind(System.Web.UI.WebControls.ListControl,System.String,System.String,System.String)">
            <summary>
                string[]绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="trueCaption">值为是的提示</param>
            <param name="falseCaption">值为不是的提示</param>
            <param name="NoSelectCaption">未选择的提示</param>
        </member>
        <member name="M:System.ControlExtend.Bind(System.Web.UI.WebControls.Repeater,System.Collections.IEnumerable)">
            <summary>
                IEnumerable绑定到Repeater
            </summary>
            <param name="rpt">Repeater</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:System.ControlExtend.Trim(System.Windows.Forms.TextBox)">
            <summary>
                清除空格
            </summary>
            <param name="control">TextBox控件</param>
        </member>
        <member name="M:System.ControlExtend.Trim(System.Web.UI.WebControls.TextBox)">
            <summary>
                清除空格
            </summary>
            <param name="control">TextBox控件</param>
        </member>
        <member name="T:System.DateTimeExtend">
            <summary>
                其它扩展，夫归类的扩展
            </summary>
        </member>
        <member name="M:System.DateTimeExtend.ToShortString(System.DateTime,System.String)">
            <summary>
            获取短日期 yyyy-MM-dd
            </summary>
            <param name="time">时间对像</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:System.DateTimeExtend.ToShortString(System.Nullable{System.DateTime},System.String)">
             <summary>
            获取短日期 yyyy-MM-dd
             </summary>
             <param name="time">时间对像</param>
             <param name="format">格式化时间格式</param>
        </member>
        <member name="M:System.DateTimeExtend.ToShortDate(System.DateTime,System.Double)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对像</param>
            <param name="addDay">添加天数</param>
        </member>
        <member name="M:System.DateTimeExtend.ToShortDate(System.DateTime)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对像</param>
        </member>
        <member name="M:System.DateTimeExtend.ToShortDate(System.Nullable{System.DateTime})">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对像</param>
        </member>
        <member name="M:System.DateTimeExtend.ToShortDate(System.Nullable{System.DateTime},System.Double)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对像</param>
            <param name="addDay">添加天数</param>
        </member>
        <member name="M:System.DateTimeExtend.ToLongString(System.DateTime,System.String)">
            <summary>
            获取长日期 yyyy-MM-dd HH:mm:ss
            </summary>
            <param name="time">时间对像</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:System.DateTimeExtend.ToLongString(System.Nullable{System.DateTime},System.String)">
            <summary>
                获取长日期 yyyy-MM-dd HH:mm:ss
            </summary>
            <param name="time">时间对像</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:System.DateTimeExtend.GetStartDayOfMonth(System.DateTime)">
            <summary>
            获取本月月初
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtend.GetFirstDate(System.DateTime)">
            <summary>
            获取当前日期的第一天
            </summary>
            <param name="dt">时间</param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeExtend.GetLastDate(System.DateTime)">
            <summary>
                返回当前日期的最后一天
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:System.DateTimeExtend.GetLastDay(System.DateTime)">
            <summary>
                返回当前日期的最后一天
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:System.DateTimeExtend.GetAllDay(System.DateTime)">
            <summary>
                返回当前的所有天数
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:System.DateTimeExtend.ToInt(System.DateTime)">
            <summary>
                日期转换成数字
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="T:System.ObjectExtend">
            <summary>
                Object扩展工具
            </summary>
        </member>
        <member name="M:System.ObjectExtend.ToString``1(``0[],System.String,System.Func{``0,System.String})">
            <summary>
                将任何数组转换成用符号连接的字符串
            </summary>
            <param name="obj">任何对像</param>
            <param name="func">传入要在转换过程中要执行的方法</param>
            <param name="sign">分隔符</param>
            <typeparam name="T">基本对像</typeparam>
        </member>
        <member name="M:System.ObjectExtend.ConvertType``1(System.Object,``0)">
            <summary>
                将对像转换为T类型
            </summary>
            <param name="objValue">要转换的源对像</param>
            <param name="defValue">转换失败时，代替的默认值</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:System.ObjectExtend.ConvertType(System.Object,System.Type)">
            <summary>
                将值转换成类型对像的值
            </summary>
            <param name="objValue">要转换的值</param>
            <param name="type">要转换的对像的类型</param>
        </member>
        <member name="M:System.ObjectExtend.ConvertType(System.Object,System.Type,System.Type)">
            <summary>
            将值转换成类型对像的值（此方法作为公共的调用，只支持单值转换)
            </summary>
            <param name="objValue">要转换的值</param>
            <param name="objType">要转换的值类型</param>
            <param name="defType">转换失败时，代替的默认值类型</param>
            <returns></returns>
        </member>
        <member name="M:System.ObjectExtend.IsNullOrEmpty(System.Object)">
            <summary>
            判断是否为null或者是否为空
            </summary>
            <param name="objValue"></param>
            <returns></returns>
        </member>
        <member name="M:System.ObjectExtend.NotNullOrEmpty(System.Object)">
            <summary>
            判断是否不为null或者是否为空
            </summary>
            <param name="objValue"></param>
            <returns></returns>
        </member>
        <member name="M:System.ObjectExtend.IsType``1(System.Object)">
            <summary>
                判断是否T类型
            </summary>
            <param name="objValue">要判断的对像</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:System.ObjectExtend.Split(System.String,System.String,System.Int32)">
            <summary>
            直接返回分隔后的元素项
            </summary>
            <param name="arr">要分隔的字符串</param>
            <param name="tag">分隔的标识</param>
            <param name="index">元素下标</param>
            <returns></returns>
        </member>
        <member name="M:System.ObjectExtend.Split(System.String,System.Char,System.Int32)">
            <summary>
            直接返回分隔后的元素项
            </summary>
            <param name="arr">要分隔的字符串</param>
            <param name="tag">分隔的标识</param>
            <param name="index">元素下标</param>
            <returns></returns>
        </member>
        <member name="T:System.StringExtend">
            <summary>
                String扩展工具
            </summary>
        </member>
        <member name="M:System.StringExtend.ClearString(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                指定清除标签的内容
            </summary>
            <param name="str">内容</param>
            <param name="tag">标签</param>
            <param name="options">选项</param>
        </member>
        <member name="M:System.StringExtend.ClearString(System.String[],System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                指定清除标签的内容
            </summary>
            <param name="strs">内容</param>
            <param name="tag">标签</param>
            <param name="options">选项</param>
        </member>
        <member name="M:System.StringExtend.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                替换字符串
            </summary>
            <param name="str">数据源</param>
            <param name="tag">要搜索的字符串</param>
            <param name="newString">代替的数据</param>
            <param name="options">选项</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.ToList``1(System.String,``0,System.String)">
            <summary>
                将字符串转换成List型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:System.StringExtend.ToEnumList(System.String,System.Type,System.String)">
            <summary>
                将字符串转换成List型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:System.StringExtend.ToArray``1(System.String,``0,System.String)">
            <summary>
                将字符串转换成Array型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:System.StringExtend.DelEndOf(System.String,System.String)">
            <summary>
                删除指定最后的字符串
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="strChar">要删除的字符串</param>
        </member>
        <member name="M:System.StringExtend.DelLastOf(System.String,System.String)">
            <summary>
                删除指定最后的字符串(直到找到为止)
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="strChar">要删除的字符串</param>
        </member>
        <member name="M:System.StringExtend.SubString(System.String,System.Int32,System.Int32)">
            <summary>
                从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度(负数，则获取全部)</param>
        </member>
        <member name="M:System.StringExtend.SubString(System.String,System.String)">
            <summary>
                截取到tag字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="tag">截取到的字符串</param>
        </member>
        <member name="M:System.StringExtend.IsEquals(System.String,System.String)">
            <summary>
                比较两者是否相等，不考虑大小写,两边空格
            </summary>
            <param name="str">对比一</param>
            <param name="str2">对比二</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.NotEquals(System.String,System.String)">
            <summary>
                比较两者是否不相等，不考虑大小写,两边空格
            </summary>
            <param name="str">对比一</param>
            <param name="str2">对比二</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.IsHaving(System.String)">
            <summary>
                是否不为Null或者Empty
            </summary>
            <param name="str">要判断的字符串</param>
        </member>
        <member name="M:System.StringExtend.IsNullOrEmpty(System.String)">
            <summary>
                是否为Null或者Empty
            </summary>
            <param name="str">要判断的字符串</param>
        </member>
        <member name="M:System.StringExtend.IsStartsWith(System.String,System.String)">
            <summary>
                对比开头字符是否一致
            </summary>
            <param name="str">原字符串</param>
            <param name="value">要对比的字符串</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.IsEndsWith(System.String,System.String)">
            <summary>
                对比开头字符是否一致
            </summary>
            <param name="str">原字符串</param>
            <param name="value">要对比的字符串</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.GetJson``2(System.String)">
            <summary>
            获取json
            </summary>
            <param name="json">json字符串</param>
        </member>
        <member name="M:System.StringExtend.GetJsonValue(System.String,System.Object)">
            <summary>
                获取json值
            </summary>
            <param name="json">json字符串</param>
            <param name="key">对应的键值</param>
        </member>
        <member name="M:System.StringExtend.GetJsonValue``1(System.String,System.Object,``0)">
            <summary>
                获取json值
            </summary>
            <param name="json">json字符串</param>
            <param name="key">对应的键值</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:System.StringExtend.GetJsonKey(System.String,System.Object)">
            <summary>
                获取json Key
            </summary>
            <param name="json">json字符串</param>
            <param name="value">对应的键值</param>
        </member>
        <member name="M:System.StringExtend.GetJsonKey``1(System.String,System.Object,``0)">
            <summary>
                获取json Key
            </summary>
            <param name="json">json字符串</param>
            <param name="value">对应的值</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:System.StringExtend.Split(System.String,System.String)">
            <summary>
                分隔字符串
            </summary>
            <param name="str">字符串</param>
            <param name="splitString">分隔符号</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.IsContains(System.String,System.String)">
            <summary>
                是否包括str2字段串
            </summary>
            <param name="str">源字符串</param>
            <param name="str2">要包括的字符串</param>
        </member>
        <member name="M:System.StringExtend.Len(System.String)">
            <summary>
                返回字符串的长度（用于SQL的比较）
            </summary>
            <param name="str">要比较的字段值</param>
            <returns></returns>
        </member>
        <member name="M:System.StringExtend.CutTrim(System.String,System.Int32,System.Int32)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftIndex">开始位置</param>
            <param name="rightIndex">结束位置</param>
        </member>
        <member name="M:System.StringExtend.CutTrim(System.String,System.Int32,System.String)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftIndex">开始位置</param>
            <param name="rightStr">结束位置字符串</param>
        </member>
        <member name="M:System.StringExtend.CutTrim(System.String,System.String,System.String)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftStr">开始位置字符串</param>
            <param name="rightStr">结束位置字符串</param>
        </member>
        <member name="M:System.StringExtend.CutTrim(System.String,System.String,System.Int32)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftStr">开始位置字符串</param>
            <param name="rightIndex">结束位置</param>
        </member>
        <member name="M:System.StringExtend.WhileNullOrEmpty(System.String,System.String)">
            <summary>
                当NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="str">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:System.StringExtend.WhileNotNullOrEmpty(System.String,System.String)">
            <summary>
                当不为NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="str">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:System.StringExtend.Contains(System.String,System.Nullable{System.Int32})">
            <summary>
            判断ID是否存在于str
            </summary>
            <param name="str"></param>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="T:System.JsonExtensions">
            <summary>
            这个类型实现了对JSON数据处理的一些扩展方法
            </summary>
        </member>
        <member name="M:System.JsonExtensions.ToJsonObject``1(System.String)">
            <summary>
            根据一个字符串，进行JSON的反序列化，转换为一个特定类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:System.JsonExtensions.ToJsonString``1(``0)">
            <summary>
            将任何一个对象转换为JSON字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:System.StructExtend">
            <summary>
                数字类型扩展工具
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Int32,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Nullable{System.Int32},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.UInt32,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Nullable{System.UInt32},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Decimal,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Nullable{System.Decimal},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Double,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.Format(System.Nullable{System.Double},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:System.StructExtend.IsNullOrEmpty``1(System.Nullable{``0},System.String)">
            <summary>
                当NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="obj">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:System.StructExtend.IsNotNullOrEmpty``1(System.Nullable{``0},System.String)">
            <summary>
                当不为NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="obj">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="T:CYQ.Data.Tool.FindWindow">
            <summary>
            利用API查找子窗体帮助类
            </summary>
            <remarks>
            来源：http://blog.csdn.net/iwteih/article/details/1483743
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.FindWindow.#ctor(System.IntPtr,System.String,System.String,System.Int32)">
            <summary>
            查找子窗体
            </summary>
            <param name="hwndParent">父窗体句柄，可以为0，从顶层开始查找</param>
            <param name="classname">要查找的子句柄</param>
            <param name="caption">要查找的子句柄的标题，必须真实填写，如果有，则必须填写</param>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:CYQ.Data.Tool.FindWindow.FindChildClassHwnd(System.IntPtr,System.IntPtr)">
            
            <summary>
            Find the child window, if found m_classname will be assigned 
            </summary>
            <param name="hwndParent">parent's handle</param>
            <param name="lParam">the application value, nonuse</param>
            <returns>found or not found</returns>
        </member>
        <member name="P:CYQ.Data.Tool.FindWindow.IsTimeOut">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.Htmls">
            <summary>
                解释Html
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.Htmls.RegexFont">
            <summary>
                正则
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.HtmlEncode(System.String)">
            <summary>
                返回 HTML 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.HtmlDecode(System.String)">
            <summary>
                返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.RemoveHtml(System.String)">
            <summary>
                移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.RemoveUnsafeHtml(System.String)">
            <summary>
                过滤HTML中的不安全标签
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.GetInnerText(System.String)">
            <summary>
                从HTML中获取文本,保留br,p,img
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.Spaces(System.Int32)">
            <summary>
                生成指定数量的html空格符号
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.IsSafeUserInfoString(System.String)">
            <summary>
                检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.CodeToHtml(System.String)">
            <summary>
                替换回车换行符为html换行符
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.HtmlToCode(System.String)">
            <summary>
                替换html换行符为回车换行符
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.EmailEncode(System.String)">
            <summary>
                Email 编码
            </summary>
            <param name="html">要编码的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.ScriptEncode(System.String)">
            <summary>
                JavaScript 编码
            </summary>
            <param name="script">要编码的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.ShitEncode(System.String)">
            <summary>
                过滤脏词，默认有为“妈的|你妈|他妈|妈b|妈比|fuck|shit|我日|法轮|我操”
            </summary>
            <param name="text">要编码的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.Htmls.Compression(System.String)">
            <summary>
            压缩html
            </summary>
            <param name="html"></param>
        </member>
        <member name="T:CYQ.Data.Tool.HttpClient">
            <summary>
                支持 Session 和 Cookie 的 WebClient。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.#ctor">
            <summary>
                创建一个新的 WebClient 实例。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.#ctor(System.Net.CookieContainer)">
            <summary>
                创建一个新的 WebClient 实例。
            </summary>
            <param name="cookies">Cookie 容器</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.GetWebRequest(System.Uri)">
            <summary>
                返回带有 Cookie 的 HttpWebRequest。
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.PostData(System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
                向指定的 URL POST 数据，并返回页面
            </summary>
            <param name="url">POST URL</param>
            <param name="postString">POST 的 数据</param>
            <param name="encoding">POST 数据的 CharSet</param>
            <param name="msg">页面的 CharSet</param>
            <returns>页面的源文件</returns>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.GetSrc(System.String,System.String,System.String@)">
            <summary>
                获得指定 URL 的源文件
            </summary>
            <param name="uriString">页面 URL</param>
            <param name="dataEncoding">页面的 CharSet</param>
            <param name="errorMessage">错误消息</param>
            <returns>页面的源文件</returns>
        </member>
        <member name="M:CYQ.Data.Tool.HttpClient.GetFile(System.String,System.String,System.String@)">
            <summary>
                从指定的 URL 下载文件到本地
            </summary>
            <param name="urlString">文件 URL</param>
            <param name="fileName">本地文件的完成路径</param>
            <param name="errorMessage">错误消息</param>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.HttpClient.Cookies">
            <summary>
                Cookie 容器
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ImagesHelper">
            <summary>
                图片工具
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ImagesHelper.SaveImageByRequest(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
                保存图片
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ImagesHelper.SaveImageByClient(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
                保存图片
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ImagesHelper.WriteImage(System.Byte[])">
            <summary>
                将二进制代码输出图片
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.InvokeHelper">
            <summary>
            A thread-safe control invoker helper class.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.InvokeHelper.Invoke(System.Windows.Forms.Control,System.String,System.Object[])">
            <summary>
            调用方法
            </summary>
            <param name="control"></param>
            <param name="methodName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.InvokeHelper.Get(System.Windows.Forms.Control,System.String)">
            <summary>
            设置控件的属性
            </summary>
            <param name="control"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.InvokeHelper.G(System.Windows.Forms.Control,System.String)">
            <summary>
            获取控件属性
            </summary>
            <param name="control"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.InvokeHelper.Get(System.Windows.Forms.Control,System.Object,System.String)">
            <summary>
            获取控件的属性
            </summary>
            <param name="control"></param>
            <param name="noncontrol"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.InvokeHelper.Set(System.Windows.Forms.Control,System.String,System.Object)">
            <summary>
            设置控件属性
            </summary>
            <param name="control"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:CYQ.Data.Tool.IPAdress">
            <summary>
                纯真数据库操作类
                2009.5.25 YM
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.IPAdress.file">
            <summary>
                IP数据库的位置
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.IPAdress.GetAddress(System.String)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="ip">IP</param>
        </member>
        <member name="M:CYQ.Data.Tool.IPAdress.GetAddress(System.String,System.String@,System.String@)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="ip">IP</param>
            <param name="province">返回省份</param>
            <param name="city">返回城市</param>
        </member>
        <member name="M:CYQ.Data.Tool.IPAdress.GetAddress(System.String@,System.String@)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="province">返回省份</param>
            <param name="city">返回城市</param>
        </member>
        <member name="M:CYQ.Data.Tool.IPAdress.GetLocation(System.String)">
            <summary>
                查找指定IP位置
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.IPAdress.File">
            <summary>
                IP数据库的位置,默认是App_Data/QQWry.Dat
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.Location">
            <summary>
                地理位置
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Location.IP">
            <summary>
                IP
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Location.Area">
            <summary>
                区域
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Location.Address">
            <summary>
                详细位置
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Location.Province">
            <summary>
                省
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.Location.City">
            <summary>
                城市
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.TypeHelper">
            <summary>
                判断类型
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsValidEmail(System.String)">
            <summary>
                检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsIP(System.String)">
            <summary>
                是否为ip
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsDoubleArray(System.String[])">
            <summary>
                判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strDouble">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsIntArray(System.String[])">
            <summary>
                判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strInt">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsBase64String(System.String)">
            <summary>
                判断是否为base64字符串
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsNumber(System.String,System.String)">
            <summary>
                验证带小数点的数字
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsDigital(System.String)">
            <summary>
                是否为数字
            </summary>
            <param name="number">0-9</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsInt(System.String)">
            <summary>
                是否为整型
            </summary>
            <param name="number">第一位，不能为0，不带小数点</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsLetter(System.String)">
            <summary>
                是否为字母
            </summary>
            <param name="number">a-zA-Z</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsTel(System.String)">
            <summary>
                验证座机号码
            </summary>
            <param name="tel"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsMobile(System.String)">
            <summary>
                验证手机号码
            </summary>
            <param name="mobile"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsPhone(System.String)">
            <summary>
                验证电话号码(包括手机、座机)
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TypeHelper.IsZIP(System.String)">
            <summary>
                验证邮编号码
            </summary>
            <param name="zip"></param>
            <returns></returns>
        </member>
        <member name="T:System.Json2">
            <summary>
            Json扩展包
            </summary>
        </member>
        <member name="M:System.Json2.String2Json(System.String)">
            <summary>
                过滤特殊字符
            </summary>
        </member>
        <member name="M:System.Json2.StringFormat(System.String,System.Type)">
            <summary>
                格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:System.Json2.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
                List转换成Json
            </summary>
        </member>
        <member name="M:System.Json2.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
                List转换成Json
            </summary>
        </member>
        <member name="M:System.Json2.ToJson(System.Object)">
            <summary>
                对象转换为Json
            </summary>
            <param name="jsonObject">对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:System.Json2.ToJson(System.Collections.IEnumerable)">
            <summary>
                对象集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:System.Json2.ToArrayString(System.Collections.IEnumerable)">
            <summary>
                普通集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:System.Json2.ToJson(System.Data.DataSet)">
            <summary>
                DataSet转换为Json
            </summary>
            <param name="dataSet">DataSet对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:System.Json2.ToJson(System.Data.DataTable)">
            <summary>
                Datatable转换为Json,使得格式符合easyUI的DataGrid的要求
            </summary>
            <param name="dt">Datatable对象</param>
            <returns>Json字符串</returns>
            <remarks>
            更新时间：2015-03-22
            参考：http://www.cnblogs.com/liang--liang/archive/2013/02/05/2893030.html
            </remarks>
        </member>
        <member name="M:System.Json2.GetTreeJsonByTable(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
             <summary>
             根据DataTable生成Json树结构  調用GetTreeJsonByTable(datatable, "MENUID", "MENUNAME", "PARENTID", "0"); 适用于EasyUI绑定Tree
             GetTreeJsonByTable(datatable, "ID", "TEXT", "PARENTNO", "0");
             </summary>
             <param name="tabel">数据源</param>
             <param name="idCol">ID列</param>
             <param name="txtCol">Text列</param>
             <param name="rela">关系字段</param>
             <param name="pId">父ID</param>
            <returns>easyui tree json格式</returns>
             <remarks>
             加入时间：2013-03-22
             来自：http://www.cnblogs.com/liang--liang/archive/2013/02/05/2893040.html
             </remarks>
        </member>
        <member name="M:System.Json2.ToJson(System.Data.DataTable,System.String)">
            <summary>
                DataTable转换为Json
            </summary>
        </member>
        <member name="M:System.Json2.ToJson(System.Data.Common.DbDataReader)">
            <summary>
                DataReader转换为Json
            </summary>
            <param name="dataReader">DataReader对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="T:CYQ.Data.Tool.Mac">
            <summary>
            机器硬件信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Mac.GetCpu">
            <summary>
            获取CPU码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Mac.GetHd">
            <summary>
            获取硬盘码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Mac.GetMac">
            <summary>
            获取网卡码
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.NCBCONST">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.MACHelper">
            <summary>
            获取MAC地址的几种方法
            作者：yys(Sam Young)
            日期：2011-12-21
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddress">
            <summary>
            获取mac地址，需要实例化此帮助类
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMac">
            <summary>
            获取mac地址,通过多张方式来获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressByWMI">
            <summary>
            通过WMI获得电脑的mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressBySendArp">
            <summary>
            SendArp获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressByAdapter">
            <summary>
            通过适配器信息获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressByNetBios">
            <summary>
            通过NetBios获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressByDos">
            <summary>
            通过DOS命令获得MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MACHelper.GetMacAddressByNetworkInformation">
            <summary>
            通过网络适配器获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ControlFileClass">
            <summary>
            文件操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ControlFileClass.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数并遍历文件夹获取文件名称，路径
            </summary>
            <param name="sourceDirectory">文件夹路径</param>
            <param name="nextFold">是否继续查找更深路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.ControlFileClass.GetAllList(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            取得文件列表
            </summary>
            <param name="source"></param>
            <param name="nextFold"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ControlFileClass.IsFolder(System.String)">
            <summary>
            判断一个路径是文件还是文件夹
            </summary>
            <param name="fileNamePath">文件路径</param>
            <returns>true:文件夹，false:文件</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ControlFileClass.DeleteFolder(System.String)">
            <summary>
            删除指定文件夹
            </summary>
            <param name="dirPath">文件夹路径</param>
        </member>
        <member name="P:CYQ.Data.Tool.ControlFileClass.FileListPath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.ControlFileClass.FileListName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.OpenPopHelper">
            <summary>
            OpenPop帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.HeadersFromAndSubject(System.String,System.Int32,System.Boolean,System.String,System.String,System.Int32)">
            <summary>
            Example showing:
             - how to fetch only headers from a POP3 server
             - how to examine some of the headers
             - how to fetch a full message
             - how to find a specific attachment and save it to a file
            </summary>
            <param name="hostname">Hostname of the server. For example: pop3.live.com</param>
            <param name="port">Host port to connect to. Normally: 110 for plain POP3, 995 for SSL POP3</param>
            <param name="useSsl">Whether or not to use SSL to connect to server</param>
            <param name="username">Username of the user on the server</param>
            <param name="password">Password of the user on the server</param>
            <param name="messageNumber">
            The number of the message to examine.
            Must be in range [1, messageCount] where messageCount is the number of messages on the server.
            </param>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.FetchUnseenMessages(System.String,System.Int32,System.Boolean,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Example showing:
             - how to use UID's (unique ID's) of messages from the POP3 server
             - how to download messages not seen before
               (notice that the POP3 protocol cannot see if a message has been read on the server
                before. Therefore the client need to maintain this state for itself)
            </summary>
            <param name="hostname">Hostname of the server. For example: pop3.live.com</param>
            <param name="port">Host port to connect to. Normally: 110 for plain POP3, 995 for SSL POP3</param>
            <param name="useSsl">Whether or not to use SSL to connect to server</param>
            <param name="username">Username of the user on the server</param>
            <param name="password">Password of the user on the server</param>
            <param name="seenUids">
            List of UID's of all messages seen before.
            New message UID's will be added to the list.
            Consider using a HashSet if you are using >= 3.5 .NET
            </param>
            <returns>A List of new Messages on the server</returns>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.DeleteMessageByMessageId(OpenPop.Pop3.Pop3Client,System.String)">
            <summary>
            Example showing:
             - how to delete fetch an emails headers only
             - how to delete a message from the server
            </summary>
            <param name="client">A connected and authenticated Pop3Client from which to delete a message</param>
            <param name="messageId">A message ID of a message on the POP3 server. Is located in <see cref="P:OpenPop.Mime.Header.MessageHeader.MessageId"/></param>
            <returns><see langword="true"/> if message was deleted, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.FetchAllMessages(System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Example showing:
             - how to fetch all messages from a POP3 server
            </summary>
            <param name="hostname">Hostname of the server. For example: pop3.live.com</param>
            <param name="port">Host port to connect to. Normally: 110 for plain POP3, 995 for SSL POP3</param>
            <param name="useSsl">Whether or not to use SSL to connect to server</param>
            <param name="username">Username of the user on the server</param>
            <param name="password">Password of the user on the server</param>
            <returns>All Messages on the POP3 server</returns>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.FindPlainTextInMessage(OpenPop.Mime.Message)">
            <summary>
            Example showing:
             - how to a find plain text version in a Message
             - how to save MessageParts to file
            </summary>
            <param name="message">The message to examine for plain text</param>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.FindHtmlInMessage(OpenPop.Mime.Message)">
            <summary>
            Example showing:
             - how to find a html version in a Message
             - how to save MessageParts to file
            </summary>
            <param name="message">The message to examine for html</param>
        </member>
        <member name="M:CYQ.Data.Tool.OpenPopHelper.FindXmlInMessage(OpenPop.Mime.Message)">
            <summary>
            Example showing:
             - how to find a MessagePart with a specified MediaType
             - how to get the body of a MessagePart as a string
            </summary>
            <param name="message">The message to examine for xml</param>
        </member>
        <member name="T:CYQ.Data.Tool.ProcessHelper">
            <summary>
            Process管理
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ProcessHelper.OpenUrl(System.String,System.Boolean)">
            <summary>
            根据默认浏览器打开网页
            </summary>
            <param name="url">要打开的链接</param>
            <param name="openInNewWindow">是否在新窗口打开</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Rand">
            <summary>
                随机数工具
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Rand.GetRandom">
            <summary>
                返回非负随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Rand.GetRandom(System.Int32)">
            <summary>
                返回一个小于所指定最大值的非负随机数。
            </summary>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Rand.GetRandom(System.Int32,System.Int32)">
            <summary>
                返回一个指定范围内的随机数。
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Rand.CreateRandomString(System.Int32)">
            <summary>
            
                随机生成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.Sessions">
            <summary>
                Session工具
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Sessions.Get(System.String,System.Boolean)">
            <summary>
                从 Session 读取 键为 name 的值
            </summary>
            <param name="name">SessionID</param>
            <param name="isAddPrefix">是否自动加入前缀</param>
        </member>
        <member name="M:CYQ.Data.Tool.Sessions.Get``1(System.String,``0,System.Boolean)">
            <summary>
                从 Session 读取 键为 name 的值
            </summary>
            <param name="strName">SessionID</param>
            <param name="defValue">为空时返回的值</param>
            <param name="isAddPrefix">是否自动加入前缀</param>
        </member>
        <member name="M:CYQ.Data.Tool.Sessions.Set(System.String,System.Object,System.Boolean)">
            <summary>
                向 Session 保存 键为 name 的， 值为 value
            </summary>
            <param name="strName"></param>
            <param name="value">插入的值</param>
            <param name="isAddPrefix">是否自动加入前缀，默认前缀wwwocppw</param>
        </member>
        <member name="M:CYQ.Data.Tool.Sessions.Remove(System.String,System.Boolean)">
            <summary>
                从 Session 删除 键为 name session 项
            </summary>
            <param name="strName">SessionID</param>
            <param name="isAddPrefix">是否自动加入前缀，默认前缀wwwocppw</param>
        </member>
        <member name="M:CYQ.Data.Tool.Sessions.RemoveAll">
            <summary>
                删除所有 session 项
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.StringEx">
            <summary>
            字符串的扩展方法
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToDataTable(System.String)">
            <summary>
            string 到 DataTable
            </summary>
            <param name="strdata"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsNumber(System.String)">
            <summary>
            是否是数字字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsDecimalSign(System.String)">
            <summary>
            是否是浮点数，可带正负号
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsHasCHZN(System.String)">
            <summary>
            字符串扩展-是否有中文
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsDateTime(System.String)">
            <summary>
            字符串扩展-是否是日期
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_PadLeftWithZero(System.String,System.Int32)">
            <summary>
            左侧用零填充字符串到指定的长度为止
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_DelLastComma(System.String)">
            <summary>
            删除最后结尾的逗号
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_DeleteLastChar(System.String,System.Char)">
            <summary>
            删除最后结尾的指定字符（strchar）后的字符（包括strchar）
            </summary>
            <param name="str"></param>
            <param name="strchar"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_RemoveFinalComma(System.String)">
            <summary>
            移除最后一个逗号
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_DeleteLastChar(System.String)">
            <summary>
            扩展：删除最后一个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToDBC(System.String)">
            <summary>
            转半角(DBC case)
            </summary>
            <param name="input">任意字符串</param>
            <returns>半角字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_Format(System.String,System.Object[])">
            <summary>
            Format扩展
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsMatch(System.String,System.String)">
            <summary>
            是否匹配
            </summary>
            <param name="s"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_Match(System.String,System.String)">
            <summary>
            返回第一个匹配
            </summary>
            <param name="s"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsNullOrEmpty(System.String)">
            <summary>
            扩展方法
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_NotNullOrEmpty(System.String)">
            <summary>
            是否非空或者是非Null
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToCamel(System.String)">
            <summary>
            首字母小写
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToPascal(System.String)">
            <summary>
            首字母大写
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ContainsIgnoreCase(System.String,System.String)">
            <summary>
            忽略大小写判断字符串是否包含
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_EndsWithIgnoreCase(System.String,System.String)">
            <summary>
            判断字符串结束部分
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_StartsWithIgnoreCase(System.String,System.String)">
            <summary>
            判断字符串起始部分
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsChineseLetter(System.String)">
            <summary>
            是否全部都是中文字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_IsLetter(System.String)">
            <summary>
            是否是英文字符或下划线
            </summary>
            <param name="rawString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToDecimal(System.Object,System.Decimal)">
            <summary>
            转换为decimal类型
            </summary>
            <param name="data"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToInt32(System.Object)">
            <summary>
            将数据转换为整型  转换失败返回默认值,默认返回0
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToBoolean(System.Object)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值true
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_RemoveFinalChar(System.String)">
            <summary>
            移除最后一个字符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_RemoveSpaces(System.String)">
            <summary>
            移除字符串中的空格
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_ToSBC(System.String)">
            <summary>
            转全角(SBC case)
            </summary>
            <param name="input">任意字符串</param>
            <returns>全角字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringEx.Ex_FormatWith(System.String,System.Object[])">
            <summary>
            Format扩展
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:TabControlExtensions">
            <summary>
            Extension methods for System.Windows.Forms.TabControl
            </summary>
        </member>
        <member name="M:TabControlExtensions.HideHeaders(System.Windows.Forms.TabControl)">
            <summary>
            Hide tab page headers
            </summary>
            <param name="tabControl">Current TabControl</param>
        </member>
        <member name="M:TabControlExtensions.ShowHeaders(System.Windows.Forms.TabControl)">
            <summary>
            Show tab page headers
            </summary>
            <param name="tabControl">Current TabControl</param>
        </member>
        <member name="M:TabControlExtensions.IsHeadersVisible(System.Windows.Forms.TabControl)">
            <summary>
            Check, tab page headers are visible or hidden
            </summary>
            <param name="tabControl">Current TabControl</param>
            <returns>Returns true if visible</returns>
        </member>
        <member name="M:TabControlExtensions.SetHeadersVisible(System.Windows.Forms.TabControl,System.Boolean)">
            <summary>
            Set visibility of tab page headers
            </summary>
            <param name="tabControl">Current TabControl</param>
            <param name="visible">Visibility of tab page headers</param>
        </member>
        <member name="T:TabPageExtensions">
            <summary>
            Extension methods for System.Windows.Forms.TabPage
            </summary>
        </member>
        <member name="M:TabPageExtensions.SetVisible(System.Windows.Forms.TabPage,System.Boolean)">
            <summary>
            Set visibility of current TabPage in the parent TabControl.TabPages collection
            </summary>
            <param name="tabPage">Current TabPage</param>
            <param name="visible">Visibility of this tab page</param>
        </member>
        <member name="M:TabPageExtensions.IsVisible(System.Windows.Forms.TabPage)">
            <summary>
            Checks, tab page into the TabControl.TabPages collection or not
            </summary>
            <param name="tabPage">Current TabPage</param>
            <returns>Returns true if visible</returns>
        </member>
        <member name="M:TabPageExtensions.ShowTabPage(System.Windows.Forms.TabPage)">
            <summary>
            Show tab page.
            <para>Returns back previously temporarily deleted tab page to the parent TabControl.TabPages collection</para>
            </summary>
            <param name="tabPage">Current TabPage</param>
        </member>
        <member name="M:TabPageExtensions.HideTabPage(System.Windows.Forms.TabPage)">
            <summary>
            Hide tab page.
            <para>Temporarily removes the tab page from the parent TabControl.TabPages collection</para>
            </summary>
            <param name="tabPage">Current TabPage</param>
        </member>
        <member name="T:CYQ.Data.Tool.ThreadSafe">
            <summary>
            跨线程访问UI控件
            </summary>
            <remarks>
            来自：http://www.cnblogs.com/zhangc/p/3407431.html
            添加时间：2014-04-28
            </remarks>
        </member>
        <member name="T:CYQ.Data.Tool.FileHelper">
            <summary>
            FileHelper 通用类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.GetFileBytes(System.String)">
            <summary>
            把文件转换为byte[]
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.ConvertByteToImg(System.Byte[])">
            <summary>
            把byte[]转化为图片
            </summary>
            <param name="imgData"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.ReadFileByFullname(System.String)">
            <summary>
            获取文件的文本内容
            </summary>
            <param name="fullfile">全路径的文件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.WriteFileByFullname(System.String,System.String)">
            <summary>
            写内容到指定文件中
            </summary>
            <param name="fullname"></param>
            <param name="text"></param>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.WriteFileByFullname(System.String,System.Byte[])">
            <summary>
            把byte内容写到指定文件中
            </summary>
            <param name="fullname"></param>
            <param name="data">流数据</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.Rename(System.String,System.String@,System.Boolean)">
            <summary>
            重命名文件
            </summary>
            <param name="orgfile"></param>
            <param name="newfile"></param>
            <param name="overwrite">如果目标文件存在，是否覆盖</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.Move(System.String,System.String,System.Boolean)">
            <summary>
            移动文件
            </summary>
            <param name="orgfile"></param>
            <param name="descfile"></param>
            <param name="overwrite">如果目标文件存在，是否覆盖</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.Delete(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="fullname">完整路径的文件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.CheckFilename(System.String,System.String)">
            <summary>
            返回不重复的的文件名称
            </summary>
            <param name="fullname">文件名称</param>
            <param name="filetype">要判断文件的格式。例如：'txt';如果全匹配输入 '*'</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.GetMD5(System.String)">
            <summary>
            获取文件的MD5值
            </summary>
            <param name="fullname"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.GetAllFiles(System.String)">
            <summary>
            遍历 rootdir目录下的所有文件，包括子目录
            </summary>
            <param name="rootdir">目录名称</param>
            <returns>该目录下的所有文件</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.GetAllFiles(System.String,System.Collections.Specialized.StringCollection)">
            <summary>
            作为遍历文件函数的子函数
            </summary>
            <param name="parentDir">目录名称</param>
            <param name="result">该目录下的所有文件</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileHelper.GetAllFiles(System.String,System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            作为遍历文件函数的子函数
            </summary>
            <param name="parentDir">目录名称</param>
            <param name="result">该目录下的所有文件</param>
            <param name="filter">过滤条件 ".txt" </param>
        </member>
        <member name="T:CYQ.Data.Tool.TreeExXMLCls">
            <summary>
            xml与treeview的转换
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TreeExXMLCls.TreeToXML(System.Windows.Forms.TreeView,System.String)">
            <summary>   
            遍历treeview并实现向XML的转化
            </summary>   
            <param name="TheTreeView">树控件对象</param>   
            <param name="XMLFilePath">XML输出路径</param>   
            <returns>0表示函数顺利执行</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.TreeExXMLCls.XMLToTree(System.String,System.Windows.Forms.TreeView)">
            <summary>   
            遍历treeview并实现向XML的转化
            </summary>   
            <param name="XMLFilePath">XML输出路径</param>   
            <param name="TheTreeView">树控件对象</param>   
            <returns>0表示函数顺利执行</returns>   
        </member>
        <member name="T:CYQ.Data.Tool.BaseVeriCode">
            <summary>
                验证码
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.BaseVeriCode.random">
            <summary>
            随机类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.BaseVeriCode.brushNameIndex">
            <summary>
            画笔索引
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.SetPageNoCache">
            <summary>
                设置页面不被缓存
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.GetFontStyle">
            <summary>
                取一个字体的样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.GetBrush">
            <summary>
                随机取一个笔刷
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.GetFont(System.Int32)">
            <summary>
                随机取一个字体
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.Paint_Background(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
                绘画背景色
            </summary>
            <param name="g">Graphics对像</param>
            <param name="backColor">背景色</param>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.Paint_Border(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
                绘画边框
            </summary>
            <param name="g">Graphics对像</param>
            <param name="borderColor">边框颜色</param>
            <param name="imgHeiht">边框高度</param>
            <param name="imgWidth">边框长度</param>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.Paint_Text(System.Drawing.Graphics,System.Int32,System.String)">
            <summary>
                绘画文字
            </summary>
            <param name="g">Graphics对像</param>
            <param name="fontSize">字体大小</param>
            <param name="code">文字</param>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.Paint_Stain(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
                绘画噪音点
            </summary>
            <param name="b">Bitmap对像</param>
            <param name="imgHeiht">噪音点高度</param>
            <param name="imgWidth">长度</param>
            <param name="count">数量</param>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
                正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="dMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.BaseVeriCode.ResponseImage(System.Web.HttpContext,System.String,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
                绘画事件
            </summary>
            <param name="context"></param>
            <param name="code">随机字符</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
            <param name="backColor">背景色</param>
            <param name="borderColor">边框色</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.VeriCode">
            <summary>
                验证码
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VeriCode.Arithmetic(System.Web.HttpContext,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                算术运算验证
            </summary>
            <param name="context">httpcontext</param>
            <param name="sessionKey">保存运算值的SESSION的KEY</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
        </member>
        <member name="M:CYQ.Data.Tool.VeriCode.Alphabet(System.Web.HttpContext,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                英文字母 + 数字
            </summary>
            <param name="context">httpcontext</param>
            <param name="sessionKey">保存运算值的SESSION的KEY</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
            <param name="codeLenght">随机码长度</param>
        </member>
        <member name="M:CYQ.Data.Tool.VeriCode.Check(System.String,System.String)">
            <summary>
                检测验证码是否正确
            </summary>
            <param name="sessionKey">保存到session的key</param>
            <param name="code">用户输入的验证码</param>
        </member>
        <member name="T:CYQ.Data.Tool.WebCache">
            <summary>
                对缓存操作进行封装
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WebCache.Add``1(System.String,``0,System.Int32)">
            <summary>
                添加对像
            </summary>
            <param name="key"></param>
            <param name="t"></param>
            <param name="timeOut">默认缓存存活期为1440分钟(24小时)单位：／分钟</param>
        </member>
        <member name="M:CYQ.Data.Tool.WebCache.Get``1(System.String)">
            <summary>
                返回对像
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WebCache.Get(System.String)">
            <summary>
                返回对像
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WebCache.Clear(System.String)">
            <summary>
                删除对像
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WebServiceHelper">
            <summary>
            动态调用asmx
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WebServiceHelper.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            动态调用WebService
            </summary>
            <param name="url">WebService地址</param>
            <param name="methodname">WebService方法名</param>
            <param name="args">参数列表</param>
            <returns>返回object</returns>
        </member>
        <member name="M:CYQ.Data.Tool.WebServiceHelper.InvokeWebService(System.String,System.String,System.String,System.Object[])">
            <summary>
            动态调用WebService
            </summary>
            <param name="url">WebService地址</param>
            <param name="classname">类名</param>
            <param name="methodname">WebService方法名</param>
            <param name="args">参数列表</param>
            <returns>返回object</returns>
        </member>
        <member name="M:CYQ.Data.Tool.WebServiceHelper.GetClassName(System.String)">
            <summary>
            得到URL中的WebService名称
            </summary>
            <param name="url">URL地址</param>
            <returns>如http://wwww.baidu.com/service.asmx 则返回service</returns>
        </member>
        <member name="T:CYQ.Data.Tool.WinControlExtension">
            <summary>
            win控件扩展
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WinControlExtension.SetControlText(System.Windows.Forms.Control,System.Windows.Forms.Form,System.String)">
            <summary>
            设置控件文字
            </summary>
            <param name="control"></param>
            <param name="cFrom"></param>
            <param name="text"></param>
        </member>
        <member name="M:CYQ.Data.Tool.WinControlExtension.SetControlEnable(System.Windows.Forms.Control,System.Windows.Forms.Form,System.Boolean)">
            <summary>
            设置控件是否可用
            </summary>
            <param name="control"></param>
            <param name="CFrom"></param>
            <param name="enable"></param>
        </member>
        <member name="M:CYQ.Data.Tool.WinControlExtension.SetControlProperty(System.Windows.Forms.Control,System.String,System.Object)">
            <summary>
            跨线程设置控件属性值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WinControlExtension.GetControlProperty(System.Windows.Forms.Control,System.String)">
            <summary>
            跨线程读取控件属性值
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WinControlExtension.ControlTextMethod">
            <summary>
            委托
            </summary>
            <param name="control"></param>
            <param name="cFrom"></param>
            <param name="text"></param>
        </member>
        <member name="T:CYQ.Data.Tool.WinControlExtension.ControlEnableMethod">
            <summary>
            委托
            </summary>
            <param name="control"></param>
            <param name="cFrom"></param>
            <param name="enable"></param>
        </member>
        <member name="T:CYQ.Data.Tool.WinControlExtension.SetControlPropertyCallBack">
            <summary>
            跨线程设置控件属性值委托类型定义
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WinControlExtension.GetControlPropertyCallBack">
            <summary>
            跨线程设置控件属性值委托类型定义
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WindowsMessages">
            <summary>
            windows 消息封装帮助类
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.HotKeyHelper">
            <summary>
            热键帮助类库，未通过测试
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.RegisterHotKey(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            注册热键API
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.UnregisterHotKey(System.IntPtr,System.UInt32)">
            <summary>
            注销热键API
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.GlobalAddAtom(System.String)">
            <summary>
            全局原子表添加原子
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.GlobalDeleteAtom(System.UInt32)">
            <summary>
            全局原子表删除原子
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.#ctor(System.IntPtr)">
            <summary>
            构造函数
            </summary>
            <param name="hWnd">当前句柄</param>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.RegisterHotkey(System.Windows.Forms.Keys,CYQ.Data.Tool.HotKeyHelper.KeyFlags)">
            <summary>
            注册热键
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.UnregisterHotkeys">
            <summary>
            注销所有热键
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKeyHelper.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            消息筛选
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.HotKeyHelper.KeyFlags">
            <summary>
            辅助按键
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ListEx">
            <summary>
            List扩展
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ListEx.ListToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            List转Datatable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.TcpClientEx">
            <summary>
            TcpClient在连接成功后无法检测连接状态，即使对方关闭了网络连接。以下扩展可检测连接状态
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.TcpClientWithTimeout">
            <summary>
            TcpClientWithTimeout 用来设置一个带连接超时功能的类
            使用者可以设置毫秒级的等待超时时间 (1000=1second)
            例如:
            TcpClient connection = new TcpClientWithTimeout('127.0.0.1',80,1000).Connect();
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TcpClientWithTimeout.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="hostname"></param>
            <param name="port"></param>
            <param name="timeout_milliseconds"></param>
        </member>
        <member name="M:CYQ.Data.Tool.TcpClientWithTimeout.Connect">
            <summary>
            连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TcpClientWithTimeout.BeginConnect">
            <summary>
            开始连接
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ServiceHelper">
            <summary>
            服务帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ServiceHelper.InstallService(System.String,System.String,System.String[])">
            <summary>
            安装服务
            </summary>
            <param name="filepath">文件绝对路径</param>
            <param name="serviceName">服务名称</param>
            <param name="options">参数，例如 /logfile=xxx </param>
        </member>
        <member name="M:CYQ.Data.Tool.ServiceHelper.UnInstallService(System.String,System.String,System.String[])">
            <summary>
            卸载服务
            </summary>
            <param name="filepath">文件绝对路径</param>
            <param name="serviceName">服务名称</param>
            <param name="options">参数</param>
        </member>
        <member name="M:CYQ.Data.Tool.ServiceHelper.IsServiceExisted(System.String)">
            <summary>
            判断服务是否存在
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServiceHelper.StartService(System.String)">
            <summary>
            启动服务
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ServiceHelper.StopService(System.String)">
            <summary>
            停止服务
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="T:CYQ.Data.Tool.TcpClientConnector">
            <summary>
            TcpClient连接帮助类 
            </summary>
            <remarks>
            TcpClient没有提供设置连接间隔的方法或是属性，类完成这个功能，使用实例：TcpClient client = TcpClientConnector.Connect(host, port, 1000);
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.TcpClientConnector.Connect(System.String,System.Int32,System.Int32)">
            <summary>
            在指定时间内尝试连接指定主机上的指定端口。
            </summary>
            <param name="hostname">要连接到的远程主机的 DNS 名。</param>
            <param name="port">要连接到的远程主机的端口号。</param>
            <param name="millisecondsTimeout">要等待的毫秒数，或 -1 表示无限期等待。</param>
            <returns>已连接的一个 TcpClient 实例。</returns>
            <remarks>本方法可能抛出的异常与 TcpClient 的构造函数重载之一
            public TcpClient(string, int) 相同，并若指定的等待时间是个负数且不等于
            -1，将会抛出 ArgumentOutOfRangeException。</remarks>
        </member>
        <member name="T:Win32.ERROR">
            <summary>
            错误信息汇总
            </summary>
        </member>
        <member name="T:Win32.AdvApi">
            <summary>
            高级API使用帮助类
            </summary>
        </member>
        <member name="M:Win32.User.EnumChildWindows(System.IntPtr,System.Int32@,System.Int32)">
            <summary>
            遍历子句柄
            </summary>
            <param name="hwndParent"></param>
            <param name="lpEnumFunc"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.EnumChildWindows(System.IntPtr,Win32.User.CallBack,System.Int32)">
            <summary>
            遍历子句柄
            </summary>
            <param name="hWndParent"></param>
            <param name="lpfn"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.EnumWindows(System.Int32,System.Int32)">
            <summary>
            该函数枚举所有屏幕上的顶层窗口，办法是先将句柄传给每一个窗口，然后再传送给应用程序定义的回调函数。EnumThreadWindows函数继续到所有顶层窗口枚举完为止或回调函数返回FALSE为止函数原型：BOOL EnumWindows（WNDENUMPROC lpEnumFunc，LPARAM lParam）；EnumWindows函数不列举子窗口。
            </summary>
            <param name="lpEnumFunc">指向一个应用程序定义的回调数指针，请参看EnumWindowsProc。</param>
            <param name="lParam">指定一个传递给回调函数的应用程序定义值。</param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.EnumWindows(Win32.User.WNDENUMPROC,System.Int32)">
            <summary>
            通过借助于应用程序定义的回调函数传递每个窗口句柄枚举所有顶层的屏幕窗口。直到最后一个顶层窗口被枚举或者回调函数返回false ，EnumWindows 函数才会退出停止枚举过程。
            </summary>
            <param name="lpEnumFunc"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.ExitWindows(System.Int32,System.Int32)">
            <summary>
            用来退出、重启或注销系统。
            </summary>
            <param name="dwReserved">关闭参数</param>
            <param name="uReturnCode">系统保留，一般取0</param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            用来退出、重启或注销系统。
            </summary>
            <param name="uFlags">关闭参数</param>
            <param name="dwReserved">系统保留，一般取0</param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.FindWindow(System.String,System.String)">
            <summary>
            该函数获得一个顶层窗口的句柄，该窗口的类名和窗口名与给定的字符串相匹配。这个函数不查找子窗口。在查找时不区分大小写。
            </summary>
            <param name="lpClassName">指向一个指定了类名的空结束字符串，或一个标识类名字符串的成员的指针。如果该参数为一个成员，则它必须为前次调用theGlobafAddAtom函数产生的全局成员。该成员为16位，必须位于IpClassName的低 16位，高位必须为 0。</param>
            <param name="lpWindowName">指向一个指定了窗口名（窗口标题）的空结束字符串。如果该参数为空，则为所有窗口全匹配。</param>
            <returns>如果函数成功，返回值为具有指定类名和窗口名的窗口句柄；如果函数失败，返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>
            该函数获得一个窗口的句柄，该窗口的类名和窗口名与给定的字符串相匹配。这个函数查找子窗口，从排在给定的子窗口后面的下一个子窗口开始。在查找时不区分大小写。
            </summary>
            <param name="hwnd1">要查找子窗口的父窗口句柄。如果hwnjParent为NULL，则函数以桌面窗口为父窗口，查找桌面窗口的所有子窗口。</param>
            <param name="hwnd2">子窗口句柄。查找从在Z序中的下一个子窗口开始。子窗口必须为hwndPareRt窗口的直接子窗口而非后代窗口。如果HwndChildAfter为NULL，查找从hwndParent的第一个子窗口开始。如果hwndParent 和 hwndChildAfter同时为NULL，则函数查找所有的顶层窗口及消息窗口。</param>
            <param name="lpsz1">指向一个指定了类名的空结束字符串，或一个标识类名字符串的成员的指针。如果该参数为一个成员，则它必须为前次调用theGlobaIAddAtom函数产生的全局成员。该成员为16位，必须位于lpClassName的低16位，高位必须为0。</param>
            <param name="lpsz2">指向一个指定了窗口名（窗口标题）的空结束字符串。如果该参数为 NULL，则为所有窗口全匹配。返回值：如果函数成功，返回值为具有指定类名和窗口名的窗口句柄。如果函数失败，返回值为NULL。</param>
            <returns>Long，找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError 如果函数成功，返回值为具有指定类名和窗口名的窗口句柄。如果函数失败，返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.FindWindowEx(System.IntPtr,System.UInt32,System.String,System.String)">
            <summary>
            该函数获得一个窗口的句柄，该窗口的类名和窗口名与给定的字符串相匹配。这个函数查找子窗口，从排在给定的子窗口后面的下一个子窗口开始。在查找时不区分大小写。
            </summary>
            <param name="hwndParent">要查找子窗口的父窗口句柄 如果hwnjParent为NULL，则函数以桌面窗口为父窗口，查找桌面窗口的所有子窗口。</param>
            <param name="hwndChildAfter">子窗口句柄。查找从在Z序中的下一个子窗口开始。子窗口必须为hwndPareRt窗口的直接子窗口而非后代窗口。如果HwndChildAfter为 NULL，查找从hwndParent的第一个子窗口开始。如果hwndParent 和 hwndChildAfter同时为NULL，则函数查找所有的顶层窗口及消息窗口。</param>
            <param name="lpszClass">指向一个指定了类名的空结束字符串，或一个标识类名字符串的成员的指针。</param>
            <param name="lpszWindow">指向一个指定了窗口名（窗口标题）的空结束字符串。如果该参数为 NULL，则为所有窗口全匹配。返回值：如果函数成功，返回值为具有指定类名和窗口名的窗口句柄。如果函数失败，返回值为NULL。</param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.FlashWindow(System.IntPtr,System.Int32)">
            <summary>
            闪烁显示指定窗口。这意味着窗口的标题和说明文字会发生变化，似乎从活动切换到非活动状态、或反向切换。通常对不活动的窗口应用这个函数，引起用户的注意
            </summary>
            <param name="hwnd">要闪烁显示的窗口的句柄。</param>
            <param name="bInvert">Long，TRUE（非零）表示切换窗口标题；FALSE返回最初状态。</param>
            <returns>Long，如窗口在调用前处于活动状态，则返回TRUE（非零）。</returns>
        </member>
        <member name="M:Win32.User.GetActiveWindow">
            <summary>
            该函数可以获得与调用线程的消息队列相关的活动窗口的窗口句柄。
            </summary>
            <returns>返回值是与调用线程的消息队列相关的活动窗口的句柄。否则，返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.GetDesktopWindow">
            <summary>
            该函数返回桌面窗口的句柄。桌面窗口覆盖整个屏幕。桌面窗口是一个要在其上绘制所有的图标和其他窗口的区域。
            </summary>
            <returns>函数返回桌面窗口的句柄。</returns>
        </member>
        <member name="M:Win32.User.GetFocus">
            <summary>
            该函数获取与调用线程消息队列相关的窗口的句柄，该窗口拥有输入焦点。
            </summary>
            <returns>为拥有键盘输入焦点的窗口句柄，若调用线程的消息队列没有相关的持有键盘输入焦点的窗口，则返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.GetForegroundWindow">
            <summary>
            该函数返回前台窗口（用户当前工作的窗口）。系统分配给产生前台窗口的线程一个稍高一点的优先级。
            </summary>
            <returns>函数返回前台窗回的句柄。</returns>
        </member>
        <member name="M:Win32.User.GetNextWindow(System.IntPtr,System.Int32)">
            <summary>
            该函数返回z序中的前一个或后一个窗口的句柄。下一窗口在指定窗口的下面，前一窗口则在上面。如果指定的窗口是顶端窗口，该函数返回下一个（或前一个）顶端窗口的句柄。如果指定的窗口是顶层窗口，函数返回下一个（或前一个）顶层窗口的句柄。如果函数是子窗口，则函数搜索下一个或前一个子窗口的句柄。
            </summary>
            <param name="hwnd">一个窗口的句柄。窗口句柄在wCmd参数的基础上获得的相对于这个窗口的句柄。</param>
            <param name="wFlag">GW HWNONEXT：返回在给定窗口的下面窗口的句柄。GW_HWNDPREV：返回在给定窗口的上面窗口的句柄。</param>
            <returns>如果函数成功，返回值是前一窗口（或后一窗口）的句柄。如果前后窗口不存在，则返回值为NULL。若想获得更多错误信息，请调用GetLastError函数。</returns>
        </member>
        <member name="M:Win32.User.GetParent(System.IntPtr)">
            <summary>
            该函数获得一个指定子窗口的父窗口句柄。
            </summary>
            <param name="hwnd">子窗口句柄，函数要获得该子窗口的父窗口句柄。</param>
            <returns>如果函数成功，返回值为父窗口句柄。如果窗口无父窗口，则函数返回NULL。若想获得更多错误信息，请调用GetLastError函数。</returns>
        </member>
        <member name="M:Win32.User.GetTopWindow(System.IntPtr)">
            <summary>
            该函数检查与特定父窗口相联的子窗口z序，并返回在z序顶部的子窗口的句柄。
            </summary>
            <param name="hwnd">被查序的父窗口的句柄。如果该参数为NULL，函数返回Z序顶部的窗口句柄。</param>
            <returns>如果函数成功，返回值为在Z序顶部的子窗口句柄。如果指定的窗口无子窗口，返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.GetWindow(System.IntPtr,System.Int32)">
            <summary>
            该函数返回与指定窗口有特定关系（如Z序或所有者）的窗口句柄。
            </summary>
            <param name="hwnd">窗口句柄。要获得的窗口句柄是依据nCmd参数值相对于这个窗口的句柄。</param>
            <param name="wCmd">说明指定窗口与要获得句柄的窗口之间的关系。该参数值可以是下列之一：GW_CHILD：如果指定窗口是父窗口，则获得的是在Z序顶端的子窗口的句柄，否则为NULL。函数仅检查指定父窗口的子窗口，不检查继承窗口</param>
            <returns>如果函数成功，返回值为窗口句柄；如果与指定窗口有特定关系的窗口不存在，则返回值为NULL。</returns>
        </member>
        <member name="M:Win32.User.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
             获取窗体标题
            </summary>
            <param name="hwnd"></param>
            <param name="lpString"></param>
            <param name="cch"></param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.IsWindow(System.IntPtr)">
            <summary>
            该函数确定给定的窗口句柄是否识别一个已存在的窗口。
            </summary>
            <param name="hwnd">被测试窗口的句柄。</param>
            <returns>如果窗口句柄标识了一个已存在的窗口，返回值为非零；如果窗口句柄未标识一个已存在窗口，返回值为零。</returns>
        </member>
        <member name="M:Win32.User.IsWindowEnabled(System.IntPtr)">
            <summary>
            该函数用于判断指定的窗口是否允许接受键盘或鼠标输入。
            </summary>
            <param name="hwnd">被测试的窗口句柄。</param>
            <returns>若窗口允许接受键盘或鼠标输入，则返回非0值，若窗口不允许接受键盘或鼠标输入，则返回值为0。</returns>
        </member>
        <member name="M:Win32.User.IsWindowUnicode(System.IntPtr)">
            <summary>
            该函数确定指定的窗口是否是一个本地Unicode窗口。
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Win32.User.IsWindowVisible(System.IntPtr)">
            <summary>
            该函数获得给定窗口的可视状态。；
            </summary>
            <param name="hwnd">被测试窗口的句柄。</param>
            <returns>如果指定的窗口及其父窗口具有WS_VISIBLE风格，返回值为非零；如果指定的窗口及其父窗口不具有WS_VISIBLE风格，返回值为零。由于返回值表明了窗口是否具有Ws_VISIBLE风格，因此，即使该窗口被其他窗口遮盖，函数返回值也为非零。</returns>
        </member>
        <member name="M:Win32.User.PostMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            该函数将一个消息放入（寄送）到与指定窗口创建的线程相联系消息队列里，不等待线程处理消息就返回。消息队列里的消息通过调用GetMessage和PeekMessage取得。
            </summary>
            <param name="hwnd">其窗口程序接收消息的窗口的句柄。可取有特定含义的两个值：HWND.BROADCAST：消息被寄送到系统的所有顶层窗口，包括无效或不可见的非自身拥有的窗口、被覆盖的窗口和弹出式窗口。消息不被寄送到子窗口。NULL：此函数的操作和调用参数dwThread设置为当前线程的标识符PostThreadMessage函数一样。</param>
            <param name="wMsg">指定被寄送的消息。</param>
            <param name="wParam">指定附加的消息特定的信息。</param>
            <param name="lParam">指定附加的消息特定的信息。</param>
            <returns>如果函数调用成功，返回非零值：如果函数调用失败，返回值是零。若想获得更多的错误信息，请调用GetLastError函数。</returns>
        </member>
        <member name="M:Win32.User.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            该函数设置指定窗口的显示状态。
            </summary>
            <param name="hwnd">窗口句柄。</param>
            <param name="nCmdShow">指定窗口如何显示。如果发送应用程序的程序提供了STARTUPINFO结构，则应用程序第一次调用ShowWindow时该参数被忽略。否则，在第一次调用ShowWindow函数时，该值应为在函数WinMain中nCmdShow参数。在随后的调用中，该参数可以为下列值之一：</param>
            <returns>如果窗口以前可见，则返回值为非零。如果窗口以前被隐藏，则返回值为零。</returns>
        </member>
        <member name="T:Win32.User.CallBack">
            <summary>
            回调函数代理
            </summary>
        </member>
        <member name="T:Win32.User.WNDENUMPROC">
            <summary>
            用于 Win32 API - EnumWindows 的回调函数
            </summary>
            <param name="hWnd"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.WinServiceController">
            <summary>
            Win服务控制
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WinServiceController.RunService(System.String)">
            <summary>
            运行服务
            </summary>
            <param name="serverName">服务名称</param>
        </member>
        <member name="M:CYQ.Data.Tool.WinServiceController.StopService(System.String)">
            <summary>
            停止服务
            </summary>
            <param name="serverName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.WinServiceController.GetStateForService(System.String)">
            <summary>
            获取服务状态
            </summary>
            <param name="serverName"></param>
            <returns></returns>
        </member>
        <member name="T:System.DataTableExt">
            <summary>
            datatable扩展
            </summary>
        </member>
        <member name="M:System.DataTableExt.DataTable2ArrayList(System.Data.DataTable)">
            <summary>
            DataTable转换为ArrayList，里面的每个数据是一个Hashtable，每个Hashtable就是一行数据
            </summary>
            <param name="data"></param>
            <returns>
            返回一个Hashtable的ArrayList
            函数添加时间：20160222
            函数来源：MINIUI的.NET Demo事例
            </returns>
        </member>
        <member name="M:System.DataTableExt.ToArrayList(System.Data.DataTable)">
            <summary>
            DataTable转换为ArrayList，里面的每个数据是一个Hashtable，每个Hashtable就是一行数据
            </summary>
            <param name="data"></param>
            <returns>
            返回一个Hashtable的ArrayList
            函数添加时间：20160222
            函数来源：MINIUI的.NET Demo事例
            </returns>
        </member>
        <member name="M:System.DataTableExt.ToHashTable(System.Collections.ArrayList,System.String)">
            <summary>
            返回一个Hashtable，包含data/total 等，其中data为ArrayList，里面每个数据就是一个hashtable，也是一行数据
            </summary>
            <param name="al"></param>
            <param name="dataName">hashtable的data字段的名称</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Sort(System.Data.DataTable,System.String)">
            <summary>
                对DataTable排序,默认排序字段是ID DESC
            </summary>
            <param name="dt">要排序的表</param>
            <param name="sort">要排序的字段</param>
        </member>
        <member name="M:System.DataTableExt.ColumeToString(System.Data.DataTable,System.Int32)">
            <summary>
            遍历DataTable，累加某一列作为一个总字符串，以逗号分隔
            </summary>
            <param name="dt">数据源</param>
            <param name="columnIndex">列序号</param>
            <returns></returns>
            <remarks>
            2015-05-17日添加，学习地图项目使用
            </remarks>
        </member>
        <member name="M:System.DataTableExt.ColumeToString(System.Data.DataTable,System.String)">
            <summary>
            遍历DataTable，累加某一列作为一个总字符串，以逗号分隔
            </summary>
            <param name="dt">数据源</param>
            <param name="columnName">列名</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Reverse(System.Data.DataTable)">
            <summary>
                DataTable倒序
            </summary>
            <param name="dt">源DataTable</param>
        </member>
        <member name="M:System.DataTableExt.ToList2``1(System.Data.DataTable)">
            <summary>
                DataTable转换为实体类
            </summary>
            <param name="dt">源DataTable</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="M:System.DataTableExt.IsHasColumn(System.Data.DataTable,System.String)">
            <summary>
            是否含有此列
            </summary>
            <param name="dt"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.DaTableToString(System.Data.DataTable)">
            <summary>
            DataTable 到 string
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.BindDataGridView(System.Data.DataTable,System.Windows.Forms.DataGridView)">
            <summary>
            扩展DataTable
            </summary>
            <param name="dt"></param>
            <param name="dgv"></param>
        </member>
        <member name="M:System.DataTableExt.RenameDatatableColumnName(System.Data.DataTable,System.Int32)">
            <summary>
            重新设置datatable的列名
            </summary>
            <param name="dt"></param>
            <param name="rowTitle">列名的行号</param>
            <returns>返回一个datatable</returns>
        </member>
        <!-- 对于成员“M:System.DataTableExt.ToList``1(System.Data.DataTable)”忽略有格式错误的 XML 注释 -->
        <member name="M:System.DataTableExt.HackType(System.Object,System.Type)">
            <summary>
            这个类对可空类型进行判断转换，要不然会报错
            </summary>
            <param name="value"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.DataTable2Entities``1(System.Data.DataTable)">
            <summary>
            DataTable转换为List列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.OrderBy(System.Data.DataTable,System.String)">
            <summary>
            datatable排序
            </summary>
            <param name="dt"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Where(System.Data.DataTable,System.String)">
            <summary>
            Datatable查找,返回一个新的DataTable 字符串需要加入单引号，否则报错，例如 like age '%xxxx%'
            </summary>
            <param name="dt"></param>
            <param name="where">注意， 字符串需要加入单引号，否则报错，例如 like age '%xxxx%' </param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.GetDataTableFromArrayList(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="dt"></param>
            <param name="al"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.OrderBy``1(System.Data.DataTable,System.String)">
            <summary>
            datatable排序后，转化为List列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="dt"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Where``1(System.Data.DataTable,System.String)">
            <summary>
            datatable查找后，转化为List列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="dt"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.ToPage``1(System.Data.DataTable,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Datatable内存分页
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="dt"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="totalRecords"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.IsNullOrEmpty(System.Data.DataTable)">
            <summary>
            判断当前 <see cref="T:System.Data.DataTable"/> 是否是 Null 或者包含空行。
            </summary>
            <param name="table">当前 <see cref="T:System.Data.DataTable"/> </param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.FieldAt(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            获取指定行列的 <see cref="T:System.String"/> 值。
            </summary>
            <param name="table">表</param>
            <param name="rowIndex">行所引</param>
            <param name="colIndex">列所引</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.FieldSetAt(System.Data.DataTable,System.Int32,System.Int32,System.String)">
            <summary>
            修改指定行列的 <see cref="T:System.String"/> 值。如果没有此行号或者列号，则不做修改，直接返回
            </summary>
            <param name="table">表</param>
            <param name="rowIndex">行所引</param>
            <param name="colIndex">列所引</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.FieldAt(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            获取指定行列的 <see cref="T:System.String"/> 值。
            </summary>
            <param name="table">表</param>
            <param name="rowIndex">行所引</param>
            <param name="colName">列名</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.FieldSetAt(System.Data.DataTable,System.Int32,System.String,System.Object)">
            <summary>
            修改指定行列的 <see cref="T:System.String"/> 值。
            </summary>
            <param name="table">表</param>
            <param name="rowIndex">行所引</param>
            <param name="colName">列名</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Col2Row(System.Data.DataTable,System.Int32)">
            <summary>
            将DataTable行列转换
            </summary>
            <param name="src">要转换的DataTable</param>
            <param name="columnHead">要作为Column的哪列</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Col2Row(System.Data.DataTable,System.String)">
            <summary>
            将DataTable行列转换
            </summary>
            <param name="src"></param>
            <param name="columnHead"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.ColumnToRow(System.Data.DataTable,System.Int32)">
            <summary>
            行转列
            </summary>
            <param name="src_dt"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.ToPage(System.Data.DataTable,System.Int32,System.Int32,System.Int32@)">
            <summary>
            对当前 <see cref="T:System.Data.DataTable"/> 对象数据进行分页，返回指定页起始索引，页大小的 <see cref="T:System.Data.DataTable"/> 副本。
            </summary>
            <param name="source">数据源</param>
            <param name="pageIndex">页起始索引</param>
            <param name="pageSize">每页记录数.</param>
            <param name="totalRecords">总共记录数</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Split(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
                对DataTable分页
            </summary>
            <param name="dt">源表</param>
            <param name="pageSize">每页显示的记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.Select(System.Data.DataTable,System.String[])">
            <summary>
            返回当前 <see cref="T:System.Data.DataTable"/> 指定需要的列的副本。
            </summary>
            <param name="source"><see cref="T:System.Data.DataTable"/> 源.</param>
            <param name="columnsToReturn">需要返回的并包含在当前 <see cref="T:System.Data.DataTable"/> 中的列。</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.ForEach(System.Data.DataTable,System.Action{System.Data.DataRow})">
            <summary>
            遍历当前 <see cref="T:System.Data.DataTable"/> 的所有行。
            </summary>
            <param name="source">当前 <see cref="T:System.Data.DataTable"/>对象 。</param>
            <param name="repeatter">指定遍历的操作。</param>
        </member>
        <member name="M:System.DataTableExt.DataTableSumRowsWithColList(System.Data.DataTable,System.String,System.String[])">
            <summary>
            在DataTable末尾添加合计行，最后一个参数设置需要合计的列，dbDataTableSumRowsWithColList(dt,"车号",new string[]{"个人产值","节油（元）","超油（元）"});
            </summary>
            <param name="dt"></param>
            <param name="sColHeJi">需要显示‘合计’字段的列,如果没有显示合计字样的列，请输入null或者“”</param>
            <param name="colsHeJi">需要合计的列</param>
        </member>
        <member name="M:System.DataTableExt.ToEasyUITreeJson(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            递归将DataTable转化为适合jquery easy ui 控件tree ,combotree 的 json
            该方法最后还要 将结果稍微处理下,将最前面的,"children" 字符去掉.
            </summary>
            <param name="dt">要转化的表</param>
            <param name="pField">表中的父节点字段</param>
            <param name="pValue">表中顶层节点的值,没有 可以输入为0</param>
            <param name="kField">关键字字段名称</param>
            <param name="TextField">要显示的文本 对应的字段</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableExt.ToEasyuiDatagridJson(System.Data.DataTable)">
            <summary>
            返回符合EasyUI的DataGrid要求的Json数据
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:WeifenLuo.WinFormsUI.Docking.DockContentEx">
            <summary>
            很多窗体都在Tab中有个右键菜单，右击的里面有关闭，所以最好继承一下DockContent，
            让其它窗体只要继承这个就有了这个右键菜单
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.DockHelper">
            <summary>
            Weifengluo控件帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DockHelper.FindDockContent(System.String,WeifenLuo.WinFormsUI.Docking.DockPanel)">
            <summary>
            根据名称查找DockContent
            </summary>
            <param name="name"></param>
            <param name="dockPanel"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.FormHelper">
            <summary>
            动态窗体帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_HOR_POSITIVE">
            <summary>
            从左到右打开窗口
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_HOR_NEGATIVE">
            <summary>
            从右到左打开窗口
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_VER_POSITIVE">
            <summary>
            从上到下打开窗口
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_VER_NEGATIVE">
            <summary>
             从下到上打开窗口
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_CENTER">
            <summary>
            若使用了AW_HIDE标志，则使窗口向内重叠；若未使用AW_HIDE标志，则使窗口向外扩展。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_HIDE">
            <summary>
            隐藏窗口，缺省则显示窗口。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_ACTIVATE">
            <summary>
            激活窗口。在使用了AW_HIDE标志后不要使用这个标志。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_SLIDE">
            <summary>
            使用滑动类型。缺省则为滚动动画类型。当使用AW_CENTER标志时，这个标志就被忽略。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.FormHelper.AW_BLEND">
            <summary>
            //使用淡出效果。只有当hWnd为顶层窗口的时候才可以使用此标志。
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ListHelper">
            <summary>
            List帮助类
            </summary>
            <remarks>
            2014-02-16日加入
            来自：博客园
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ListHelper.GetRandomList``1(System.Collections.Generic.List{``0})">
            <summary>
            随机list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="inputList"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.ListHelper.Search``1(System.Collections.Generic.List{``0},System.String,System.String,CYQ.Data.Tool.MemType,CYQ.Data.Tool.CmpOperator)”忽略有格式错误的 XML 注释 -->
        <member name="T:System.ControlExtensions">
            <summary>
            控件扩展，用户多线程下访问控件
            来自：http://www.codeproject.com/Tips/374741/Avoiding-InvokeRequired
            </summary>
            <example>
                <code>
                    /// private void button3_Click(object sender, EventArgs e)
                    {
                         new Thread(new ThreadStart(UpdateFormTextFromSomeThread2)).Start();
                    }
                    this.InvokeOnOwnerThread((form) => form.Text = message); 
                </code>
            </example>
        </member>
        <member name="M:System.ControlExtensions.InvokeOnOwnerThread``1(``0,System.Action{``0})">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control">要调用的控件</param>
            <param name="invoker">Labda表达式</param>
        </member>
        <member name="M:System.ControlExtensions.UIThread(System.Windows.Forms.Control,System.Action)">
            <summary>
            Runs code in UI thread synchronously with BeginInvoke when required.
            </summary>
            <param name="control">控件</param>
            <param name="code">
            匿名方法方式： "delegate(){ button1.Text = "new text";button1.Enable=false; }" 
            lambda方式："()=>{ button1.Text = "new text";button1.Enable=false;}"
            错误的方式: "()=>{ button1.Text = "new text";button2.Enable=false;}" 不能这样调用其他控件
            </param>
            <remarks>
            来自：http://www.codeproject.com/Articles/37642/Avoiding-InvokeRequired
            </remarks>
        </member>
        <member name="M:System.ControlExtensions.UIThread``1(System.Windows.Forms.Control,System.Action{``0},``0)">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control">要调用的控件</param>
            <param name="invoker">Labda表达式</param>
        </member>
        <member name="M:System.ControlExtensions.UIThread``2(System.Windows.Forms.Control,System.Action{``0,``1},``0,``1)">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control">要调用的控件</param>
            <param name="invoker">Labda表达式</param>
        </member>
        <member name="M:System.ControlExtensions.UIThread``3(System.Windows.Forms.Control,System.Action{``0,``1,``2},``0,``1,``2)">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control">要调用的控件</param>
            <param name="invoker">Labda表达式</param>
        </member>
        <member name="M:System.ControlExtensions.UIThread``4(System.Windows.Forms.Control,System.Action{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control">要调用的控件</param>
            <param name="invoker">Labda表达式</param>
        </member>
        <member name="M:System.ControlExtensions.InvokeIfNeeded``1(System.Windows.Forms.Control,System.Action{``0},``0)">
            <summary>
            异步调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctl"></param>
            <param name="act"></param>
            <param name="args"></param>
        </member>
        <member name="M:System.ControlExtensions.ThreadSafeInvoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
            线程安全访问控件
            </summary>
            <param name="control"></param>
            <param name="invoker">
            MethodInvoker和无参数类型的Action委托效果一样
            </param>
        </member>
        <member name="M:System.ControlExtensions.UIThreadInvoke(System.Windows.Forms.Control,System.Action)">
            <summary>
            Runs code in UI thread synchronously with Invoke when required.
            </summary>
            <param name="code">
            匿名方法方式： "delegate(){ button1.Text = "new text";button1.Enable=false; }" 
            lambda方式："()=>{ button1.Text = "new text";button1.Enable=false;}"
            错误的方式: "()=>{ button1.Text = "new text";button2.Enable=false;}" 不能这样调用其他控件
            </param>
        </member>
        <member name="T:CYQ.Data.Tool.DataBase">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.#ctor(System.String)">
            <summary> 
            根据配置文件初始化连接字符串 
            </summary> 
            connectionStrings中节点Name 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.#ctor(System.String,System.String)">
            <summary> 
            根据参数指定的连接字符串和Provider初始化连接字符串 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.GetEntity(System.String)">
            <summary> 
            得到指定表的全部数据 
            </summary> 
            <param name="tableName">表名称</param> 
            <returns>数据集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteDataTable(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回数据集的SQL 
            </summary> 
            <param name="sql">sql语句</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>结果集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteDataTable(System.String,System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回数据集的SQL(用于分页) 
            </summary> 
            <param name="sql">Sql语句</param> 
            <param name="from">起始位置</param> 
            <param name="count">返回的行数</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>结果集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回数据集的SQL 
            </summary> 
            <param name="sql">sql语句</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>结果集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteDataSetProce(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回数据集的存储过程(该方法还没有测试) 
            </summary> 
            <param name="procedureName">存储过程名称</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>结果集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteDataSet(System.String,System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回数据集的SQL(用于分页) 
            </summary> 
            <param name="sql">Sql语句</param> 
            <param name="from">起始位置</param> 
            <param name="count">返回的行数</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>结果集</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.SaveDataTable(System.Data.DataTable)">
            <summary> 
            保存DataTable 
            </summary> 
            <param name="dt">datatable</param> 
            <returns>影响的行数</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.SaveDataSet(System.Data.DataSet)">
            <summary> 
            保存DataSet 
            </summary> 
            <param name="ds">要保存的DataSet</param> 
            <returns>影响的行数</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteScalar(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回一个结果的SQL 
            </summary> 
            <param name="sql">SQL语句</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>执行结果</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteScalarInTrans(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回一个结果的SQL(在一个事务中) 
            </summary> 
            <param name="sql">SQL语句</param> 
            <param name="paramArray">参数（可选）</param> 
            <returns>执行结果</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteScalarProce(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行返回单一结果的存储过程 
            </summary> 
            <param name="procedureName">存储过程名称</param> 
            <param name="paramArray">存储过程参数</param> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行无返回结果的SQL 
            </summary> 
            <param name="sql">语句</param> 
            <param name="parameter">参数（可选）</param> 
            <returns>影响的行数</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteNonQueryInTrans(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行无返回结果的SQL(在一个事务中) 
            </summary> 
            <param name="sql">语句</param> 
            <param name="parameter">参数（可选）</param> 
            <returns>影响的行数</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteNonQueryProce(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行无返回结果的存储过程 
            </summary> 
            <param name="procedureName">存储过程名称</param> 
            <param name="paramArray">存储过程参数</param> 
            <returns>影响的行数</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteReader(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            根据SQl语句得到一个IDataReader对象 
            </summary> 
            <param name="sql">Sql语句</param> 
            <returns>IDataReader对象</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.ExecuteReaderProce(System.String,System.Data.Common.DbParameter[])">
            <summary> 
            执行一个存储过程得到IDataReader对象(该方法还没有测试) 
            </summary> 
            <param name="sql">存储过程名称</param> 
            <returns>IDataReader对象</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.CloseConnection">
            <summary> 
            关闭连接 
            </summary> 
        </member>
        <member name="M:CYQ.Data.Tool.DataBase.GetParameter">
            <summary> 
            获得一个sql参数对象 
            </summary> 
            <param name="name">名称</param> 
            <returns>DbParameter实例</returns> 
        </member>
        <member name="T:CYQ.Data.Tool.ListItem">
            <summary>
            选择项类，用于ComboBox或者ListBox添加项
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ListItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sid">key</param>
            <param name="sname">value</param>
        </member>
        <member name="T:CYQ.Data.Tool.ComboBoxHelper">
            <summary>
            ComboBox帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ComboBoxHelper.InsertComboBox(System.String,System.String,System.Windows.Forms.ComboBox)">
            <summary>
            插入ComboBox
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="cb"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ComboBoxHelper.SetCombSelItemByValue(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            根据Combo的键去查找指定项，并选中该项。
            注意：向Combo的Item中添加的内容必须是DictionaryEntry类型
            </summary>
            <param name="combo1">需要查找的ComboBox</param>
            <param name="strCmbKey">被查找的Item的键</param>
        </member>
        <member name="M:CYQ.Data.Tool.ComboBoxHelper.SetCombSelItemByText(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            根据Combo的值去查找指定项，并选中该项。
            注意：向Combo的Item中添加的内容必须是DictionaryEntry类型
            </summary>
            <param name="Combo1">需要查找的ComboBox</param>
            <param name="strCmbValue">被查找的Item的值</param>
        </member>
        <member name="M:CYQ.Data.Tool.AutoClosedMsgBox.Show(System.String,System.String,System.Int32)">
            <summary>
            弹出自动关闭的MessageBox窗口，只有“确定”按钮
            </summary>
            <param name="text">弹出窗口的显示内容</param>
            <param name="caption">弹出窗口的标题</param>
            <param name="milliseconds">窗口持续显示时间(毫秒)</param>
            <returns>固定返回DialogResult.OK</returns>
        </member>
        <member name="M:CYQ.Data.Tool.AutoClosedMsgBox.Show(System.String,System.String,System.Int32,CYQ.Data.Tool.MsgBoxStyle)">
            <summary>
            弹出自动关闭的MessageBox窗口，有多种显示方式
            </summary>
            <param name="txt">弹出窗口的显示内容</param>
            <param name="caption">弹出窗口的标题</param>
            <param name="style">窗口样式(枚举)</param>
            <param name="dwtimeout">窗口持续显示时间(毫秒)</param>
            <returns>0-无显示 1-确定 2-取消 3-终止 4-重试 5-忽略 6-是 7-否 10-重试 11-继续 32000-系统关闭</returns>
        </member>
        <member name="T:CYQ.Data.Tool.ExtendMethod">
            <summary>
            字符串拓展方法
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ExtendMethod.FormatString(System.String,System.Object[])">
            <summary>
            重写Format方法
            </summary>
            <param name="s"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExtendMethod.SelectedAll(System.Windows.Forms.CheckedListBox)">
            <summary>
            全选 CheckListBox
            </summary>
            <param name="ckb"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ExtendMethod.SelectedReverse(System.Windows.Forms.CheckedListBox)">
            <summary>
            反选 CheckListBox
            </summary>
            <param name="ckb"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ExtendMethod.GetNewDataTable(System.Data.DataTable,System.String)">
            <summary>
            DataTable条件查询获取子DataTable
            </summary>
            <param name="dt"></param>
            <param name="condition">条件</param>
            <returns>返回值可能为null</returns>
        </member>
        <member name="T:CYQ.Data.Tool.LogHelperCommonLoging">
            <summary>
            Log4Net日志记录辅助类
            </summary>
            <remarks>
            参考:http://blog.csdn.net/xgx1985xgx/article/details/6553346
            </remarks>
        </member>
        <member name="T:CYQ.Data.Tool.MessageBoxUtility">
            <summary>
            显示消息提示对话框。 Web上使用
            李天平
            2005.10.1
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.Show(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.Show(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框,自定义脚本块标示
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="name">脚本块标识。当同一页面要调用两个弹出框时需不同的标识，否则后者会覆盖前者。</param>
            <param name="msg">要显示的内容</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            控件点击 消息确认提示框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ShowAndRedirect(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ShowAndRedirect2(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ResponseScript(System.Web.UI.Page,System.String,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="name">脚本名称，一般为了避免重复</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.ShowGoHistory(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框，并回到前一页面
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxUtility.OpenNewWindow(System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            打开新窗口
            </summary>
            <param name="page"></param>
            <param name="url"></param>
            <param name="w"></param>
            <param name="h"></param>
        </member>
        <member name="T:CYQ.Data.Tool.CompileAssemblyHelper">
            <summary>
            动态编译代码
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CompileAssemblyHelper.CompileAssembly(System.String,System.String,System.String@)">
            <summary>
            动态编译dll
            </summary>
            <param name="filepath">dll的绝对路径</param>
            <param name="code">代码源文件</param>
            <param name="error">错误信息</param>
        </member>
        <member name="M:CYQ.Data.Tool.CompileAssemblyHelper.Invoke(System.String,System.String,System.String,System.Object[],System.String@,System.Object@)">
            <summary>
            调用方法
            </summary>
            <param name="dllpath">dll路径</param>
            <param name="namespacedotclassname">命名空间.类名</param>
            <param name="methodname">方法名称</param>
            <param name="para">参数数组</param>
            <param name="error">错误信息</param>
            <param name="objj">返回值</param>
            <returns>true:调用正确;false:调用失败</returns>
        </member>
        <member name="T:CYQ.Data.Tool.CommandHelper">
            <summary>
            命令行帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CommandHelper.StartExeFromWeb(System.String,System.String)">
            <summary>
            从web上采用点击链接方式启动程序 <a href="HelloWorld://123">Hello World</a> 其中HelloWorld是程序名称 123是参数
            </summary>
            <param name="filepath">程序路径</param>
            <param name="filename">程序名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CommandHelper.startcmd(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CommandHelper.startcmd(System.String,System.String)">
            <summary>
            执行命令
            </summary>
            <param name="command"></param>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.CryptoHelpException">
            <summary>
            异常处理类
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.DESFileClass">
            <summary>
            CryptHelp加密文件帮助类库
            </summary>
            <example>
            <code>
            private void btnSelectFile_Click(object sender, EventArgs e)
               {
                   if (openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)
                   {
                       txtFileName.Text = openFileDialog1.FileName ;
                   }
               }
               private void btnEncryptFile_Click(object sender, EventArgs e)
               {
                   string inFile=txtFileName.Text;
                   string outFile = inFile + ".dat";
                   string password=txtPassword.Text ;
                   DESFile.DESFileClass.EncryptFile(inFile, outFile, password);///加密文件
                   ///删除加密前的文件
                   File.Delete(inFile);
                   txtFileName.Text = string.Empty;
                   MessageBox.Show("加密成功");
               }
               private void btnDecryptFile_Click(object sender, EventArgs e)
               {
                   string inFile = txtFileName.Text;
                   string outFile = inFile.Substring(0,inFile.Length - 4);
                   string password = txtPassword.Text;
                   DESFile.DESFileClass.DecryptFile (inFile, outFile, password);///解密文件
                   ///删除解密前的文件
                   File.Delete(inFile);
                   txtFileName.Text = string.Empty;
                   MessageBox.Show("解密成功");
               }
            </code>
            </example>
        </member>
        <member name="M:CYQ.Data.Tool.DESFileClass.CheckByteArrays(System.Byte[],System.Byte[])">
            <summary>
            检验两个Byte数组是否相同
            </summary>
            <param name="b1">Byte数组</param>
            <param name="b2">Byte数组</param>
            <returns>true－相等</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DESFileClass.CreateRijndael(System.String,System.Byte[])">
            <summary>
            创建DebugLZQ ,http://www.cnblogs.com/DebugLZQ
            </summary>
            <param name="password">密码</param>
            <param name="salt"></param>
            <returns>加密对象</returns>
        </member>
        <member name="F:CYQ.Data.Tool.DESFileClass.rand">
            <summary>
            加密文件随机数生成
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DESFileClass.GenerateRandomBytes(System.Int32)">
            <summary>
            生成指定长度的随机Byte数组
            </summary>
            <param name="count">Byte数组长度</param>
            <returns>随机Byte数组</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DESFileClass.EncryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="inFile">待加密文件</param>
            <param name="outFile">加密后输入文件</param>
            <param name="password">加密密码</param>
        </member>
        <member name="M:CYQ.Data.Tool.DESFileClass.DecryptFile(System.String,System.String,System.String)">
            <summary>
            解密文件
            </summary>
            <param name="inFile">待解密文件</param>
            <param name="outFile">解密后输出文件</param>
            <param name="password">解密密码</param>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyHelper">
            <summary>
            NotifyIcon帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyHelper.notify">
            <summary>
            任务栏图标
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyHelper.notifyT">
            <summary>
            任务栏图标2
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.Show(System.String,System.String,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.ShowT(System.String,System.String,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.ShowT(System.String)">
            <summary>
            content不能为空
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.Show(System.Object,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="content"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.Show(System.Object)">
            <summary>
            显示信息
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.Ex_NotifyShow(System.Object)">
            <summary>
            添加一个对象的扩展方法
            </summary>
            <param name="obj"></param>
            <param name="content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyHelper.Show(System.String,System.String)">
            <summary>
            显示信息
            </summary>
            <param name="title"></param>
            <param name="content"></param>
        </member>
        <member name="T:CYQ.Data.Tool.PlayMusic">
            <summary>
            播放音频帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PlayMusic.Play(System.String)">
            <summary>
            播放音频
            </summary>
            <param name="path">文件路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.RegisterTool">
            <summary>
            注册表操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.SetAutoRun(System.String,System.String)">
            <summary>
            设置开启启动
            </summary>
            <param name="keyName"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.DeleteAutoRun(System.String)">
            <summary>
            取消开机启动
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.GetRootRegisterKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType)">
            <summary>
            获得根节点注册表
            </summary>
            <param name="rootKeyType">根节点类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="fatherKey">父注册表项</param>
            <param name="keyPath">注册表路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(Microsoft.Win32.RegistryKey,System.String,System.String,System.Object)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="fatherKey">父注册表项</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">要添加的注册表项值名称</param>
            <param name="keyValue">要添加的注册表项值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(Microsoft.Win32.RegistryKey,System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="fatherKey">父注册表项</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">要添加的注册表项值名称</param>
            <param name="keyValue">要添加的注册表项值</param>
            <param name="valuekind">值类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String,System.Object)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">要添加的注册表项值名称</param>
            <param name="keyValue">要添加的注册表项值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.CreateRegistryKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            在指定注册表项下创建注册表子项
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">要添加的注册表项值名称</param>
            <param name="keyValue">要添加的注册表项值</param>
            <param name="valuekind">值类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.DeleteRegistryKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String)">
            <summary>
            删除注册表子项
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.GetRegistryKey(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String)">
            <summary>
            获取注册表项
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.GetRegistryValue(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String)">
            <summary>
            获取注册表项指定值
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyName">要获得值的注册表值名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.SetRegistryValue(Microsoft.Win32.RegistryKey,System.String,System.Object)">
            <summary>
            设置注册表项值
            </summary>
            <param name="key">注册表项</param>
            <param name="keyValueName">值名称</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.SetRegistryValue(Microsoft.Win32.RegistryKey,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            设置注册表项值
            </summary>
            <param name="key">注册表项</param>
            <param name="keyValueName">值名称</param>
            <param name="keyValue">值</param>
            <param name="valuekind">值类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.SetRegistryValue(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String,System.Object)">
            <summary>
            设置注册表项值
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">值名称</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.SetRegistryValue(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            设置注册表项值
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">值名称</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.DeleteRegistryValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            删除注册表项值
            </summary>
            <param name="key">注册表项</param>
            <param name="keyValueName">值名称</param>
            <param name="keyValue">值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.DeleteRegistryValue(CYQ.Data.Tool.RegisterTool.WRegisterRootKeyType,System.String,System.String)">
            <summary>
            删除注册表项值
            </summary>
            <param name="rootKeyType">注册表根节点项类型</param>
            <param name="keyPath">注册表路径</param>
            <param name="keyValueName">值名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.IsKeyHaveValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            判断注册表项是否有指定的注册表值
            </summary>
            <param name="key">注册表项</param>
            <param name="valueName">注册表值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.IsKeyHaveSubKey(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            判断注册表项是否有指定的子项
            </summary>
            <param name="key">注册表项</param>
            <param name="keyName">子项名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RegisterTool.GetKeyNameByPath(System.String)">
            <summary>
            根据注册表键路径获得注册表键名称
            </summary>
            <param name="keyPath">注册表键路径</param>
            <returns></returns>
        </member>
        <!-- 对于成员“T:CYQ.Data.Tool.LocalGroupUserHelper”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.AddUser(System.String,System.String,System.String,System.String)">
            <summary>
            添加一个用户，添加失败后返回非0 。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="strComment"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.AddGroup(System.String,System.String,System.String)">
            <summary>
            添加一个用户，添加失败后返回非0 。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="groupName"></param>
            <param name="strComment"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.GroupAddMembers(System.String,System.String,System.String)">
            <summary>
            在本地组中添加一个用户成员，添加失败后返回非0 。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="groupName"></param>
            <param name="strComment"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.RemoveUser(System.String,System.String)">
            <summary>
            删除一个用户，同时将删除这个用户在任何组中的关系，删除失败后返回非0。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.GetUserInfo(System.String,System.String)">
            <summary>
            获取一个用户的信息，失败后返回非0。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.ModifyUser(System.String,System.String)">
            <summary>
            修改一个用户，失败后返回非0。这儿我只做了简的测试，如果要修改用户更多的信息，请伟明加上其它信息。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.ModifyUserPassword(System.String,System.String,System.String,System.String)">
            <summary>
            修改一个用户的密码，失败后返回非0。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.GetAllUserInfo(System.String)">
            <summary>
            获取机器上所有的用户信息。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
        </member>
        <member name="M:CYQ.Data.Tool.LocalGroupUserHelper.UserInLocalGroups(System.String,System.String)">
            <summary>
            获取机器上某用户所属于的本地组信息。
            </summary>
            <param name="serverName">机器名称，如果是本机，请设置为null</param>
            <param name="userName"></param>
        </member>
        <member name="T:CYQ.Data.Tool.EncodeHelper">
            <summary>
            DES对称加解密、AES RijndaelManaged加解密、Base64加密解密、MD5加密等操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesEncrypt(System.String)">
            <summary>
            使用默认加密
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesDecrypt(System.String)">
            <summary>
            使用默认解密
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesEncrypt(System.String,System.String)">
            <summary> 
            Encrypt the string 
            Attention:key must be 8 bits 
            </summary> 
            <param name="strText">string</param> 
            <param name="strEncrKey">key</param> 
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesDecrypt(System.String,System.String)">
            <summary> 
            Decrypt string 
            Attention:key must be 8 bits 
            </summary> 
            <param name="strText">Decrypt string</param> 
            <param name="sDecrKey">key</param> 
            <returns>output string</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesEncrypt(System.String,System.String,System.String)">
            <summary> 
            Encrypt files 
            Attention:key must be 8 bits 
            </summary> 
            <param name="m_InFilePath">Encrypt file path</param> 
            <param name="m_OutFilePath">output file</param> 
            <param name="strEncrKey">key</param> 
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DesDecrypt(System.String,System.String,System.String)">
            <summary> 
            Decrypt files 
            Attention:key must be 8 bits 
            </summary> 
            <param name="m_InFilePath">Decrypt filepath</param> 
            <param name="m_OutFilePath">output filepath</param> 
            <param name="sDecrKey">key</param> 
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_Encrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_Encrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_Decrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_Decrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="startIndex">索引位置，以0开始</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_EncryptStrream(System.IO.FileStream,System.String)">
            <summary>
            加密文件流
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_DecryptStream(System.IO.FileStream,System.String)">
            <summary>
            解密文件流
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_EncryptFile(System.String,System.String)">
            <summary>
            对指定文件加密
            </summary>
            <param name="InputFile"></param>
            <param name="OutputFile"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.AES_DecryptFile(System.String,System.String)">
            <summary>
            对指定的文件解压缩
            </summary>
            <param name="InputFile"></param>
            <param name="OutputFile"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.Base64Encrypt(System.String)">
            <summary>
            Base64是一種使用64基的位置計數法。它使用2的最大次方來代表僅可列印的ASCII 字元。
            這使它可用來作為電子郵件的傳輸編碼。在Base64中的變數使用字元A-Z、a-z和0-9 ，
            這樣共有62個字元，用來作為開始的64個數字，最後兩個用來作為數字的符號在不同的
            系統中而不同。
            Base64加密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.Base64Decrypt(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.MD5Encrypt(System.String)">
            <summary> 
            MD5 Encrypt 
            </summary> 
            <param name="strText">text</param> 
            <returns>md5 Encrypt string</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.EncyptMD5_3_16(System.String)">
            <summary>
            MD5 三次加密算法.计算过程: (QQ使用)
            1. 验证码转为大写
            2. 将密码使用这个方法进行三次加密后,与验证码进行叠加
            3. 然后将叠加后的内容再次MD5一下,得到最终验证码的值
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>SHA256结果(返回长度为44字节的字符串)</returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.EncryptString(System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EncodeHelper.DecryptString(System.String,System.Boolean)">
            <summary>
            解密加过密的字符串
            </summary>
            <param name="input"></param>
            <param name="throwException">解密失败是否抛异常</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.HotKey">
            <summary>
            热键帮助类库
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,CYQ.Data.Tool.HotKey.MOD,System.Int32)">
            <summary>
            注册热键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="modKey">组合键</param>
            <param name="nVK">热键</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,CYQ.Data.Tool.HotKey.MOD,System.Windows.Forms.Keys)">
            <summary>
            注册热键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="modKey">组合键</param>
            <param name="VK">热键</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            注册热键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="modKey">组合键</param>
            <param name="nVK">热键</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,System.Int32,System.Windows.Forms.Keys)">
            <summary>
            注册热键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="modKey">组合键</param>
            <param name="VK">热键</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            注册热键，不包含组合键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="nVK">热键</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HotKey.RegHotKey(System.IntPtr,System.Int32,System.Windows.Forms.Keys)">
            <summary>
            注册热键，不包含组合键
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="nID">热键标识</param>
            <param name="VK">热键</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.INIFileUtil">
            <summary>
            INI文件操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.INIFileUtil.#ctor(System.String)">
            <summary>
            传入INI文件路径构造对象
            </summary>
            <param name="INIPath">INI文件路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.INIFileUtil.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="Section">分组节点</param>
            <param name="Key">关键字</param>
            <param name="Value">值</param>
        </member>
        <member name="M:CYQ.Data.Tool.INIFileUtil.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="Section">分组节点</param>
            <param name="Key">关键字</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.INIFileUtil.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.INIFileUtil.ClearSection(System.String)">
            <summary>
            删除ini文件下指定段落下的所有键
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:CYQ.Data.Tool.IsolatedStorageHelper">
            <summary>
            独立存储操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.SaveDataTime">
            <summary>
            加密并保存指定时间到"独立存贮空间" （以分号(;)追加保存）
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.SaveDataTime(System.DateTime)">
            <summary>
            加密并保存当前时间到"独立存贮空间" （以分号(;)追加保存）
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.GetDataTime">
            <summary> 
            从"独立存贮空间"取程序第一次运行的时间并解密
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.Save(System.Object,System.String)">
            <summary>
            保存对象到独立存储区
            </summary>
            <param name="objectToSave">待保存的对象</param>
            <param name="key">保存的键值</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.Load(System.String)">
            <summary>
            根据键值加载独立存储区的内容
            </summary>
            <param name="key">独立存储的键值(路径）</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.LoadFromUserStoreForApplication(System.Collections.IDictionary,System.String)">
            <summary>
            加载存在用户标识范围、应用程序范围内的存储值
            </summary>
            <param name="d">待填充的字典对象</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.SaveToUserStoreForApplication(System.Collections.IDictionary,System.String)">
            <summary>
            保存在用户标识范围、应用程序范围内的值
            </summary>
            <param name="d">待保存的字典对象</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.LoadFromUserStoreForDomain(System.Collections.IDictionary,System.String)">
            <summary>
            加载用户范围、应用范围、程序集范围内的存储值
            </summary>
            <param name="d">待填充的字典对象.</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.SaveToUserStoreForDomain(System.Collections.IDictionary,System.String)">
            <summary>
            保存用户范围、应用范围、程序集范围内的存储值
            </summary>
            <param name="d">待保存的字典对象</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.Load(System.Collections.IDictionary,System.IO.IsolatedStorage.IsolatedStorageScope,System.String)">
            <summary>
            加载在独立存储内的指定文件内容
            </summary>
            <param name="d">待填充的字典内容</param>
            <param name="scope">独立存储范围对象</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.Save(System.Collections.IDictionary,System.IO.IsolatedStorage.IsolatedStorageScope,System.String)">
            <summary>
            在独立存储范围内保存字典内容到指定文件
            </summary>
            <param name="d">待保存的字典内容</param>
            <param name="scope">独立存储范围对象</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.Delete(System.String,System.IO.IsolatedStorage.IsolatedStorageScope)">
            <summary>
            删除指定区域的存储区内容
            </summary>
            <param name="fileName">待删除的文件</param>
            <param name="scope">独立存储范围对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.CreateDirectory(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            在存储区内创建目录
            </summary>
            <param name="storage"></param>
            <param name="dirName"></param>
        </member>
        <member name="M:CYQ.Data.Tool.IsolatedStorageHelper.DeleteDirectory(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            在存储区内删除目录
            </summary>
            <param name="storage"></param>
            <param name="dirName"></param>
        </member>
        <member name="T:CYQ.Data.Tool.LoadResourceDll">
            <summary> 
            载入资源中的动态链接库(dll)文件
            </summary>
            <remarks>
            来自:http://www.cnblogs.com/blqw/p/LoadResourceDll.html
            </remarks>
            <example>
            使用步骤：
            1.首先把需要引用的dll当做嵌入式资源
            2.在引用到需要调用的程序集的方法之前，写入LoadResourceDll.RegistDLL();
            </example>
        </member>
        <member name="M:CYQ.Data.Tool.LoadResourceDll.RegistDLL">
            <summary> 注册资源中的dll
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.LoadResourceDll.GetAssmbly(System.String)">
            <summary> 获取资源文件中的assmbly
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.MD5Util">
            <summary>
            MD5各种长度加密字符、验证MD5等操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.GetMD5_32(System.String)">
            <summary>
            获得32位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.GetMD5_16(System.String)">
            <summary>
            获得16位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.GetMD5_8(System.String)">
            <summary>
            获得8位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.GetMD5_4(System.String)">
            <summary>
            获得4位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.AddMD5Profix(System.String)">
            <summary>
            添加MD5的前缀，便于检查有无篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.RemoveMD5Profix(System.String)">
            <summary>
            移除MD5的前缀
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.ValidateValue(System.String)">
            <summary>
            验证MD5前缀处理的字符串有无被篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.AddMD5(System.String)">
            <summary>
            对给定文件路径的文件加上标签
            </summary>
            <param name="path">要加密的文件的路径</param>
            <returns>标签的值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.CheckMD5(System.String)">
            <summary>
            对给定路径的文件进行验证
            </summary>
            <param name="path"></param>
            <returns>是否加了标签或是否标签值与内容值一致</returns>
        </member>
        <member name="M:CYQ.Data.Tool.MD5Util.MD5Buffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算文件的MD5值
            </summary>
            <param name="MD5File">MD5签名文件字符数组</param>
            <param name="index">计算起始位置</param>
            <param name="count">计算终止位置</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:CYQ.Data.Tool.OSInfoMation">
            <summary>
            操作系统信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.OSInfoMation.OSBit">
            <summary>
            获取操作系统位数,64/32
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.OSInfoMation.GetOsVersion">
            <summary>
            获取操作系统版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.OSInfoMation.GetOsVersionByRegedit">
            <summary>
            获取操作系统版本 Windows 7/Windows xp
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.OSInfoMation.IsAfterVista">
            <summary>
            判断是不是Vista以后版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.OSInfoMation.HasAdminRight">
            <summary>
            判断是否有管理员权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ResourceHelper">
            <summary>
            资源文件使用帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ResourceHelper.ReleaseReSource(System.String,System.Type,System.String,System.String,System.String,System.Boolean)">
            <summary>
            释放资源文件,要求资源文件夹中的文件属性Build Action必须为：Embedded Resource
            </summary>
            <param name="filepath">文件的释放地点，绝对路径</param>
            <param name="tp">一般为System.Type.GetType(fnamespace+"."+className)</param>
            <param name="fnamespace">命名空间名称</param>
            <param name="dirname">存放资源的文件夹的名称</param>
            <param name="resourceName">资源文件名称,包括后缀</param>
            <param name="cover">是否覆盖已有文件</param>
        </member>
        <member name="T:CYQ.Data.Tool.ServerManager">
            <summary>
            服务操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.getServiceByName(System.String)">
            <summary>
            获取服务
            </summary>
            <param name="strServiceName">服务名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.GetService(System.Type)">
            <summary>
            获取指定类型的服务
            </summary>
            <param name="ServiceType">服务类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.stopService(System.ServiceProcess.ServiceController)">
            <summary>
            停止服务
            </summary>
            <param name="Service">服务对象</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.startService(System.ServiceProcess.ServiceController)">
            <summary>
            启动服务
            </summary>
            <param name="Service">服务对象</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.resetService(System.ServiceProcess.ServiceController)">
            <summary>
            重启服务
            </summary>
            <param name="Service"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.preService(System.ServiceProcess.ServiceController)">
            <summary>
            暂停服务
            </summary>
            <param name="Service"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.resumeService(System.ServiceProcess.ServiceController)">
            <summary>
            继续服务
            </summary>
            <param name="Service"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.StartService(System.String)">
            <summary>
            启动服务，先设置为自动，然后启动服务
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.ServiceIsExisted(System.String)">
            <summary>
            判断服务是否存在
            </summary>
            <param name="serviceName">服务名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ServerManager.ChangeServiceStartType(System.Int32,System.String)">
            <summary>   
            修改服务的启动项 0为启动,1为系统,2为自动,3为手动，4为禁用
            </summary>   
            <param name="startType">启动类型</param>   
            <param name="serviceName">服务名</param>   
            <returns>是否设置成功</returns>   
        </member>
        <member name="P:CYQ.Data.Tool.ServerManager.getAllServices">
            <summary>
            获取所有服务
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.SoftHelper">
            <summary>
            实现exe单例模式
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SoftHelper.ShowWindowAsync(System.IntPtr,System.Int32)">
            <summary>
             该函数设置由不同线程产生的窗口的显示状态
             </summary>
             <param name="hWnd">窗口句柄</param>
             <param name="cmdShow">指定窗口如何显示。查看允许值列表，请查阅ShowWlndow函数的说明部分</param>
             <returns>如果函数原来可见，返回值为非零；如果函数原来被隐藏，返回值为零</returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftHelper.SetForegroundWindow(System.IntPtr)">
            <summary>
             该函数将创建指定窗口的线程设置到前台，并且激活该窗口。键盘输入转向该窗口，并为用户改各种可视的记号。
             系统给创建前台窗口的线程分配的权限稍高于其他线程。 
            </summary>
            <param name="hWnd">将被激活并被调入前台的窗口句柄</param>
            <returns>如果窗口设入了前台，返回值为非零；如果窗口未被设入前台，返回值为零</returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftHelper.SoftSingle``1">
            <summary>
            程序以单例运行 
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ControlsHelper">
            <summary>
            控件帮助类
            </summary>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.ControlsHelper.GetControl``1(System.Windows.Forms.Control,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.ControlsHelper.GetControl``1(System.Windows.Forms.Form,System.String)">
            <summary>
            遍历窗体所有控件
            </summary>
            <typeparam name="T">要匹配的控件类型</typeparam>
            <param name="form">窗体名</param>
            <param name="controlsName">要匹配的控件名</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertJson">
            <summary>
            史上最全的JSON转换类
            </summary>
            <remarks>
            添加时间:201-1-08
            来源:http://www.cnblogs.com/zjyuan/archive/2011/11/06/2237883.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json 
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Object)">
            <summary> 
            对象转换为Json 
            </summary> 
            <param name="jsonObject">对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Collections.IEnumerable)">
            <summary> 
            对象集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToArrayString(System.Collections.IEnumerable)">
            <summary> 
            普通集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Data.DataSet)">
            <summary> 
            DataSet转换为Json 
            </summary> 
            <param name="dataSet">DataSet对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Data.DataTable)">
            <summary> 
            Datatable转换为Json 
            </summary> 
            <param name="table">Datatable对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json 
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertJson.ToJson(System.Data.Common.DbDataReader)">
            <summary> 
            DataReader转换为Json 
            </summary> 
            <param name="dataReader">DataReader对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="T:CYQ.Data.Tool.CsvHelper">
            <summary>
            CSV文件和DataTable对象转换辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CsvHelper.CsvToDataTableByOledb(System.String)">
            <summary>
            CSV转换成DataTable（OleDb数据库访问方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CsvHelper.CsvToDataTableByStreamReader(System.String)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CsvHelper.CsvToDataTableByStreamReader(System.String,System.Char)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <param name="separate">分隔符，必须是单个字符，否则报错</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CsvHelper.DataTableToCsv(System.Data.DataTable,System.String)">
            <summary>
            DataTable 生成 CSV
            </summary>
            <param name="dt">DataTable</param>
            <param name="csvPath">csv文件路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.DataCache">
            <summary>
            缓存相关的操作类
            李天平
            2006.4.1
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DataCache.GetCache(System.String)">
            <summary>
            获取当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DataCache.SetCache(System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="M:CYQ.Data.Tool.DataCache.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值(绝对时间过期或者是变化时间过期)
            </summary>
            <param name="CacheKey">缓存键</param>
            <param name="objObject">对象</param>
            <param name="absoluteExpiration">DateTime.Now.AddSeconds(10)之类的表示使用绝对时间过期,DateTime.MaxValue表示变化时间过期</param>
            <param name="slidingExpiration">TimeSpan.Zero与第一个配套,TimeSpan.FromSeconds(10)与第二个配套</param>
        </member>
        <member name="T:CYQ.Data.Tool.DataReaderToEntityHelper">
            <summary>
            DataReader到实体类帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DataReaderToEntityHelper.DataReaderToEntity``1(System.Data.IDataReader)">
            <summary>
            从DataReader转化为Model
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DataReaderToEntityHelper.GetList``1(System.Data.IDataReader)">
            <summary>
            通用获取集合对象方法
            </summary>
            <param name="dr">IDataReader 对象</param>
            <returns></returns>
        </member>
        <!-- 对于成员“T:CYQ.Data.Tool.DDTekOracleHelper”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.#ctor">
            <summary>
            不带参数的构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetDbProviderFacory(System.String)">
            <summary>
            返回一个DbProviderFactory
            </summary>
            <param name="dllPath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.#ctor(System.String)">
            <summary>  
            带参数的构造函数  
            </summary>  
            <param name="ConnString">AppSetting名称，如果长度>32,则认为是数据库联接字符串</param>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.OpenConn">
            <summary>  
            打开数据库  
            </summary>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.CloseConn">
            <summary>  
            关闭数据库联接  
            </summary>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.BeginTransaction">
            <summary>
            开启事务
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.CommitTransaction">
            <summary>
            提交事务 并且 释放并关闭资源
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.RollbackTransaction">
            <summary>
            回滚事务 并且 释放并关闭资源
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.Dispose">
            <summary>
            如果没有开启事务就自动释放资源，关闭连接，否则在提交或回滚事务的时候释放
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.CreateCommand(System.Data.CommandType,System.String,DDTek.Oracle.OracleParameter[])">
            <summary>
            返回OracleCommand对象
            </summary>
            <param name="cmdType">CommandType类型</param>
            <param name="cmdText">sql语句</param>
            <param name="cmdParas">参数对象</param>
            <returns>OracleCommand对象</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ReturnDataSet(System.String,System.String)">
            <summary>  
            执行SQL语句，返回数据到DataSet中  
            </summary>  
            <param name="sql">sql语句</param>  
            <param name="DataSetName">自定义返回的DataSet表名</param>  
            <returns>返回DataSet</returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ReturnDataSet(System.String,System.String,System.Int32)">
            <summary>  
            执行SQL语句，返回数据到DataSet中  
            </summary>  
            <param name="sql">sql语句</param>  
            <param name="DataSetName">自定义返回的DataSet表名</param>  
            <param name="timeout">超时设置，例如：1200为1200毫秒</param>
            <returns>返回DataSet</returns>  
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.DDTekOracleHelper.ReturnDataSet(System.String,System.Int32,System.Int32,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ReturnDataReader(System.String)">
            <summary>  
            执行SQL语句，返回 DataReader,用之前一定要先.read()打开,然后才能读到数据  
            </summary>  
            <param name="sql">sql语句</param>  
            <returns>返回一个OracleDataReader</returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ReturnSchemaDataTable(System.String)">
            <summary>
            获取到架构信息到Datatable中,ColumnName,DataType,ColumnSize,IsUnique,IsKey
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetRecordCount(System.String)">
            <summary>  
            执行SQL语句，返回记录总数数  
            </summary>  
            <param name="sql">sql语句</param>  
            <returns>返回记录总条数</returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetRecordCount(System.String,System.String)">
            <summary>
            获取数据条数
            </summary>
            <param name="tableName">单表名</param>
            <param name="where">条件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetSeq(System.String)">
            <summary>  
            取当前序列  
            </summary>  
            <param name="seqstr"></param>  
            <param name="table"></param>  
            <returns></returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ExecuteSQL(System.String)">
            <summary>  
            执行SQL语句,返回所影响的行数  
            </summary>  
            <param name="sql"></param>  
            <returns></returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ExecuteScalar(System.String)">
            <summary>
            返回单个值
            </summary>
            <param name="sql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ExecuteScalar(System.String,System.Int32)">
            <summary>
            返回单个值
            </summary>
            <param name="sql">sql语句</param>
            <param name="timeout">超时设置，例如1200为1200毫秒</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.Insert(System.String,System.Collections.Hashtable)">
            <summary>
            根据表名及哈稀表自动插入数据库 用法：Insert("test",ht)
            </summary>
            <param name="TableName"></param>
            <param name="ht"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.Update(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            根据相关条件对数据库进行更新操作 用法：Update("test","id=2",ht);
            </summary>
            <param name="TableName"></param>
            <param name="ht_Where"></param>
            <param name="ht"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.Update(System.String,System.String,System.Collections.Hashtable,DDTek.Oracle.OracleConnection)">
            <summary>
            根据相关条件对数据库进行更新操作 用法：Update("test","id=2",ht);
            </summary>
            <param name="TableName"></param>
            <param name="ht_Where"></param>
            <param name="ht"></param>
            <param name="oraConn"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.Del(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            删除数据，单表
            </summary>
            <param name="TableName">表名</param>
            <param name="ht_Where">条件语句</param>
            <param name="ht">hashtable</param>
            <returns>成功返回受影响的行数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetOracleParameters(System.String,System.Collections.Hashtable)">
            <summary>
            根据hatable获取OracleParameters数组
            </summary>
            <param name="tableNameOrView">表名或者是类似(select * from emp) v </param>
            <param name="ht">hashtable数组，字段名、字段值</param>
            <returns>Oracle参数数组</returns>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.DDTekOracleHelper.CreateSqlParameterByDictionary(System.Collections.Generic.Dictionary{System.String,System.Object})”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.CreateSqlParameterByHashtable(System.Collections.Hashtable)">
            <summary>
            根据传入的字典 自动生成 SqlParameter
            </summary>
            <param name="prms"></param>
            <remarks>
            灵感来自：武汉经纬视通科技有限公司
            Hashtable ht = new Hashtable();
            ht.Add(1, "何晓阳");
            ht.Add(2, "劉三云");
            ht.Add("key", "value");
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.PrepareCommand(DDTek.Oracle.OracleCommand,DDTek.Oracle.OracleConnection,DDTek.Oracle.OracleTransaction,System.Data.CommandType,System.String,DDTek.Oracle.OracleParameter[])">
            <summary>
            Internal function to prepare a command for execution by the database
            </summary>
            <param name="cmd">Existing command object</param>
            <param name="conn">Database connection object</param>
            <param name="trans">Optional transaction object</param>
            <param name="cmdType">Command type, e.g. stored procedure</param>
            <param name="cmdText">Command test</param>
            <param name="commandParameters">Parameters for the command</param>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeParam(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Object)">
            <summary>  
            生成oracle参数  
            </summary>  
            <param name="ParamName">字段名</param>  
            <param name="otype">数据类型</param>  
            <param name="size">数据大小</param>  
            <param name="Value">值</param>  
            <returns></returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeParam(System.String,System.String)">
            <summary>
            生成oracle参数
            </summary>
            <param name="ParamName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeParam(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            准备存储过程的参数.
            </summary>
            <remarks>
            这个重载方法来自：http://www.cnblogs.com/CodingArt/archive/2012/09/03/2669110.html
            添加时间：2012-12-01
            </remarks>
            <param name="paramName">参数名称</param>
            <param name="dbType">参数数据类型</param>
            <param name="size">参数大小</param>        
            <param name="direction">参数方向</param>
            <param name="inValue">参数值</param>
            <returns>输入或输出参数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeInParam(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Object)">
            <summary>
            准备输入参数
            </summary>
            <param name="paramName">参数名称</param>
            <param name="dbType">参数类型</param>
            <param name="size">数据长度</param>
            <param name="inValue">参数值</param>
            <returns>一个OracleParameter</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeInParam(System.String,DDTek.Oracle.OracleDbType,System.Object)">
            <summary>
            准备输入参数.
            </summary>
            <param name="paramName">参数名称</param>
            <param name="dbType">参数数据类型</param>
            <param name="inValue">参数值</param>
            <returns>输入参数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.MakeOutParam(System.String,DDTek.Oracle.OracleDbType,System.Int32)">
            <summary>
            准备输出参数.
            </summary>
            <param name="paramName">参数名称</param>
            <param name="dbType">参数数据类型</param>
            <param name="size">参数大小</param>        
            <returns>输出参数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetInsertSqlbyHt(System.String,System.Collections.Hashtable)">
            <summary>  
            根据哈稀表及表名自动生成相应insert语句  
            最后的格式类似：Insert into emp(deptno,sal,ename,mgr,comm,job,empno,hiredate) Values (?,?,?,?,?,?,?,?)
            </summary>  
            <param name="TableName">要插入的表名</param>  
            <param name="ht">哈稀表</param>  
            <returns>返回sql语句</returns>  
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetUpdateSqlbyHt(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            根据表名，where条件，哈稀表自动生成更新语句(参数类型的)
            </summary>
            <param name="Table"></param>
            <param name="ht_Where"></param>
            <param name="ht"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetDelSqlbyHt(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            根据表名，where条件，哈稀表自动生成del语句(参数类型的)
            </summary>
            <param name="Table">表名</param>
            <param name="ht_Where">条件</param>
            <param name="ht">哈希对象</param>
            <returns>where条件字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetoType(System.String,System.Data.DataTable,DDTek.Oracle.OracleDbType@,System.Int32@)">
            <summary>
            根据表结构字段的类型和长度拼装oracle sql语句参数
            </summary>
            <param name="key">字段名称</param>
            <param name="dt">datatable</param>
            <param name="otype">数据类型</param>
            <param name="size">数据类型长度</param>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.GetTabType(System.String)">
            <summary>
            动态 取表里字段的类型和长度,此处没有动态用到connstr,是默认的！by/文少
            </summary>
            <param name="tabnale">表名</param>
            <returns>获取含有列名、数据类型、数据类型长度的datatable</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ExecuteNonQuery(System.String,DDTek.Oracle.OracleParameter[])">
            <summary>
            执行sql语句，返回受影响的行数
            </summary>
            <param name="cmdText"></param>
            <param name="cmdParms"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DDTekOracleHelper.ExecuteNonQuery(System.String,DDTek.Oracle.OracleConnection,DDTek.Oracle.OracleParameter[])">
            <summary>
            执行sql语句，返回受影响的行数
            </summary>
            <param name="cmdText"></param>
            <param name="oraConn"></param>
            <param name="cmdParms"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertHelperTW">
            <summary>
            不同类型之间数值转换
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.IsDecimal(System.String)">
            <summary>
            判断字符串是否是小数或整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.IsIdListValid(System.String)">
            <summary>
            判断字符串是否是多个整数的列表，整数之间必须通过英文逗号分隔
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.IsInt(System.String)">
            <summary>
            判断字符串是否是整数或负整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.IsBool(System.String)">
            <summary>
            判断字符串是否是"true"或"false"(不区分大小写)
            </summary>
            <param name="str"></param>
            <returns>只有字符串是"true"或"false"(不区分大小写)时，才返回true</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.To(System.Object,System.Type)">
            <summary>
            将对象转换成目标类型
            </summary>
            <param name="val"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToBool(System.Int32)">
            <summary>
            将整数转换成 Boolean 类型。只有参数等于1时，才返回true
            </summary>
            <param name="integer"></param>
            <returns>只有参数等于1时，才返回true</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToBool(System.Object)">
            <summary>
            将对象转换成 Boolean 类型。只有对象的字符串形式等于1或者true(不区分大小写)时，才返回true
            </summary>
            <param name="objBool"></param>
            <returns>只有对象的字符串形式等于1或者true(不区分大小写)时，才返回true</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToBool(System.String)">
            <summary>
            将字符串(不区分大小写)转换成 Boolean 类型。只有字符串等于1或者true时，才返回true
            </summary>
            <param name="str"></param>
            <returns>只有字符串等于1或者true时，才返回true</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToDecimal(System.String)">
            <summary>
            将字符串转换成 System.Decimal 类型。如果str不是整数或小数，返回0
            </summary>
            <param name="str"></param>
            <returns>如果str不是整数或小数，返回0</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToDouble(System.String)">
            <summary>
            将字符串转换成 System.Double 类型。如果str不是整数或小数，返回0
            </summary>
            <param name="str"></param>
            <returns>如果str不是整数或小数，返回0</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToDecimal(System.String,System.Decimal)">
            <summary>
            将字符串转换成 System.Decimal 类型。如果str不是整数或小数，返回参数 defaultValue 指定的值
            </summary>
            <param name="str"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToInt(System.Object)">
            <summary>
            将对象转换成整数；如果不是整数，则返回0
            </summary>
            <param name="objInt"></param>
            <returns>如果不是整数，则返回0</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToInt(System.Decimal)">
            <summary>
            将 decimal 转换成整数
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToNotNull(System.Object)">
            <summary>
            将对象转换成非Null形式，如果传入的参数是 null，则返回空字符串(即""，也即string.Empty)
            </summary>
            <param name="str"></param>
            <returns>如果为null，则返回空字符串(即""，也即string.Empty)</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToTime(System.Object)">
            <summary>
            将对象转换成 DateTime 形式，如果不符合格式，则返回当前时间
            </summary>
            <param name="objTime"></param>
            <returns>如果不符合格式，则返回当前时间</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToTime(System.Object,System.DateTime)">
            <summary>
            将对象转换成 DateTime 形式，如果不符合格式，则返回第二个参数指定的时间
            </summary>
            <param name="objTime"></param>
            <param name="targetTime"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.IsDayEqual(System.DateTime,System.DateTime)">
            <summary>
            判断两个时间的日期是否相同(要求同年同月同日)
            </summary>
            <param name="day1"></param>
            <param name="day2"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToString(System.Int32[])">
            <summary>
            将整数转换成字符串形式，多个整数之间用英文逗号分隔
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToIntArray(System.String)">
            <summary>
            将字符串形式的 id 列表转换成整型数组
            </summary>
            <param name="myids"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToColorValue(System.String)">
            <summary>
            将字符串转换成以井号开头的表达形式；如果不是有效的颜色值，则返回null
            </summary>
            <param name="val"></param>
            <returns>将字符串转换成以井号开头的表达形式；如果不是有效的颜色值，则返回null</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToBase62(System.Int64)">
            <summary>
            将10进制整数转换为62进制
            </summary>
            <param name="inputNum"></param>
            <returns>62进制数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.ToBase(System.Int64,System.String)">
            <summary>
            将10进制整数转换为n进制
            </summary>
            <param name="inputNum">10进制整数</param>
            <param name="chars"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.DeBase62(System.String)">
            <summary>
            将62进制转换为10进制整数
            </summary>
            <param name="str">62进制数</param>
            <returns>10进制整数</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelperTW.DeBase(System.String,System.String)">
            <summary>
            将n进制转换为10进制整数
            </summary>
            <param name="str">需要转换的n进制数</param>
            <param name="chars"></param>
            <returns>10进制整数</returns>
        </member>
        <member name="T:System.DataGridViewExHelper">
            <summary>
            DataGridView帮助类
            </summary>
        </member>
        <member name="M:System.DataGridViewExHelper.GotoLastLine(System.Windows.Forms.DataGridView)">
            <summary>
            定位到最后一行
            </summary>
            <param name="dgv"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.AddRowIndex(System.Windows.Forms.DataGridView)">
            <summary>
            DataGridView添加行号
            </summary>
            <param name="dgv">DataGridView控件ID</param>
        </member>
        <member name="M:System.DataGridViewExHelper.AddFullSelect(System.Windows.Forms.DataGridView,System.Int32)">
            <summary>
            DataGridView添加全选
            </summary>
            <param name="dgv">DataGridView控件ID</param>
            <param name="columnIndex">全选所在列序号</param>
        </member>
        <member name="M:System.DataGridViewExHelper.Print(System.Windows.Forms.DataGridView,System.String,System.String)">
            <summary>
            打印数据
            </summary>
            <param name="dgv"></param>
            <param name="title1"></param>
            <param name="title2"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.BindAndAddFilterColumn(System.Windows.Forms.DataGridView,System.Data.DataTable)">
            <summary>
            绑定数据，并且添加过滤部分
            </summary>
            <param name="dgv"></param>
            <param name="dt"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.exporeDataToTable(System.Windows.Forms.DataGridView)">
            <summary>
            导出datagridview到datatable
            </summary>
            <param name="dataGridView"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataGridViewExHelper.Clear(System.Windows.Forms.DataGridView)">
            <summary>
            清空datagridview中的数据
            </summary>
            <param name="dgv"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.GotoRowsLine(System.Windows.Forms.DataGridView,System.Int32)">
            <summary>
            定位特定行号
            </summary>
            <param name="dgv"></param>
            <param name="rowNumber"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.GetMenuItem(System.String,System.Drawing.Image)">
            <summary>
            返回一个菜单项，但是没有集成事件
            </summary>
            <param name="txt">菜单文字</param>
            <param name="img">文字前的图片</param>
            <returns></returns>
        </member>
        <member name="M:System.DataGridViewExHelper.GetContenctMenu">
            <summary>
            返回一个右键菜单对象，但是事件没有实现，需要实现add/update/delete等事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.DataGridViewExHelper.SwitchColor(System.Windows.Forms.DataGridView,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            隔行变色
            </summary>
            <remarks>
            详细出处参考：http://www.jb51.net/article/34837.htm
            </remarks>
            <param name="dgv">传入DataGridView控件名称</param>
            <param name="color1">颜色1</param>
            <param name="color2">颜色2</param>
        </member>
        <member name="M:System.DataGridViewExHelper.SwitchColor(System.Windows.Forms.DataGridView)">
            <summary>
            隔行变色
            </summary>
            <remarks>
            详细出处参考：http://www.jb51.net/article/34837.htm
            </remarks>
            <param name="dgv">传入DataGridView控件名称</param>
            <param name="color1">颜色1</param>
            <param name="color2">颜色2</param>
        </member>
        <member name="M:System.DataGridViewExHelper.ShowMenu(System.Windows.Forms.DataGridView,System.Windows.Forms.ContextMenuStrip,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
             <summary>
             显示右键菜单,在DataGridView1_CellMouseClick以及DataGridView1_ColumnHeaderMouseClick事件中触发
             </summary>
             <param name="grid"></param>
             <param name="menu"></param>
             <param name="e"></param>
             <example>
             <code>
             DataGridView1_CellMouseClick
            if (e.Button == MouseButtons.Right)
            {
                DataGridViewExHelper.ShowMenu(this.dataGridViewEx1, contextMenuStrip1, e);
            }
            </code>
             </example>
        </member>
        <member name="M:System.DataGridViewExHelper.ShowMenu(System.Windows.Forms.DataGridView,System.Windows.Forms.ContextMenuStrip,System.Windows.Forms.MouseEventArgs)">
            <summary>
            右击DataGridView的时候显示菜单 dataGridView1_MouseClick事件
            </summary>
            <param name="grid"></param>
            <param name="menu"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.HideColumn(System.Windows.Forms.DataGridView,System.String)">
            <summary>
             隐藏列
            </summary>
            <param name="grid">Datagridview</param>
            <param name="columnName">列名</param>
        </member>
        <member name="M:System.DataGridViewExHelper.DeleteLastBlankRow(System.Windows.Forms.DataGridView)">
            <summary>
            删除最后一行空白行
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.RenameColumn(System.Windows.Forms.DataGridView,System.String)">
            <summary>
            重命名各个列名,从0列开始且dataGridView1绑定数据源后 再使用
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.SetUpColumnAutoSizeMode(System.Windows.Forms.DataGridView,System.String,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
            <summary>
            设置列的自适应模式
            </summary>
            <param name="grid"></param>
            <param name="columnName">列名必须为数据源中}列名，修改后的显示列名无效！</param>
            <param name="mode">
             NotSet  列的大小调整行为从DataGridView.AutoSizeColumnsMode 属性继承。 
             None  列宽不会自动调整。 
             AllCells  调整列宽，以适合该列中的所有单元格的内容，包括标题单元格。  
             AllCellsExceptHeader  调整列宽，以适合该列中的所有单元格的内容，不包括标题单元格。  
             DisplayedCells  调整列宽，以适合当前屏幕上显示的行的列中的所有单元格的内容，包括标题单元格。  
             DisplayedCellsExceptHeader  调整列宽，以适合当前屏幕上显示的行的列中的所有单元格的内容，不包括标题单元格。  
             ColumnHeader  调整列宽，以适合列标题单元格的内容。  
             Fill  调整列宽，使所有列的宽度正好填充控件的显示区域，只需要水平滚动保证列宽在
            </param>
        </member>
        <member name="M:System.DataGridViewExHelper.SetAutoSize(System.Windows.Forms.DataGridView)">
            <summary>
            设置自动列宽模式 采用扩展方式
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:System.DataGridViewExHelper.Bind(System.Windows.Forms.DataGridView,System.Data.DataTable)">
            <summary>
            绑定数据
            </summary>
            <param name="grid"></param>
            <param name="dt"></param>
        </member>
        <member name="T:CYQ.Data.Tool.DataTableToEntityByEmit">
            <summary>
            DataTableToEntityByEmit
            </summary>
            <remarks>
            2012-09-11日添加
            </remarks>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.DataTableToEntityByEmit.GetList``1(System.Data.DataTable)”忽略有格式错误的 XML 注释 -->
        <member name="T:CYQ.Data.Tool.ConnectionStringHelper">
            <summary>
            连接字符串帮助类
            </summary>
            <remarks>
            2012-08-12日添加
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetDBFConnection(System.String)">
            <summary>
            DBF的数据库链接
            </summary>
            <param name="filePath">文件绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetOracleConnectionString(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            返回oracle连接字符串，这个连接方式，不需要在Oracle Net Manager管理中添加链接配置信息
            </summary>
            <param name="host">数据库IP</param>
            <param name="port">数据库端口</param>
            <param name="server_name">数据库名</param>
            <param name="user_name">用户名</param>
            <param name="password">密码 </param>
            <returns>oracle连接字符串</returns>
            <remarks>
            不依赖你的DNS.You create a connection string based on the format used in the tnsnames.ora file without the need to actually have one of these files on the client pc.  
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetOracleConnectionStringWithOledb(System.String,System.String,System.String)">
            <summary>
            采用微软数据库提供者连接oracle
            </summary>
            <param name="dataSource"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetOracleUserId(System.String)">
            <summary>
            返回oracle连接字符串中的uid
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetOracleConnectionStringWithTnsInfomation(System.String,System.String,System.String)">
            <summary>
            返回oracle连接字符串，这种方式需要添加tns.ora配置文件
            </summary>
            <param name="dbName"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetOracleConnnectionStringDDTek(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            返回DDTek.Oracle所需要的连接字符串
            </summary>
            <param name="hostIp"></param>
            <param name="port"></param>
            <param name="serviceName"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMysqlConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            返回mysql数据库连接字符串
            </summary>
            <param name="ip"></param>
            <param name="database"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMysqlConnectionString(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            返回mysql数据库连接字符串
            </summary>
            <param name="ip">
            <example>
            默认端口写法：www.ocp.pw
            非默认端口写法：www.ocp.pw,3344
            </example>
            </param>
            <param name="port">端口</param>
            <param name="database"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMysqlConnectionStringNoPersist(System.String,System.String,System.String,System.String)">
            <summary>
            返回mysql数据库连接字符串
            </summary>
            <param name="ip"></param>
            <param name="database"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMysqlConnectionStringNoPersistNoPooling(System.String,System.String,System.String,System.String)">
            <summary>
            返回mysql数据库连接字符串
            </summary>
            <param name="ip"></param>
            <param name="database"></param>
            <param name="uid"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMSSQLConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            返回mssql数据库连接字符串,此为标准安全连接方式
            </summary>
            <param name="ip">数据库ip</param>
            <param name="database">数据库名称</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns>mssql数据库连接字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMSSQLConnectionString(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            返回mssql数据库连接字符串,此为标准安全连接方式
            </summary>
            <param name="ip">数据库ip</param>
            <param name="database">数据库名称</param>
            <param name="port">端口</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns>mssql数据库连接字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMSSQLConnectionString2(System.String,System.String,System.String,System.String)">
            <summary>
            返回mssql数据库连接字符串,此为可替代的标准安全连接方式
            </summary>
            <param name="ip">数据库ip</param>
            <param name="database">数据库名称</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns>mssql数据库连接字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetMSSQLEXPressConnectionString(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            返回mssqlexpress数据库连接字符串,此为标准安全连接方式
            </summary>
            <param name="ip">数据库ip</param>
            <param name="database">数据库名称</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns>mssql数据库连接字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetSqliteConnectionString(System.String)">
            <summary>
            返回sqlite连接字符串
            </summary>
            <remarks>
            2014-07-02日测试发现FailIfMissing=false报错，提示不支持此关键字
            </remarks>
            <param name="dbpath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetAccess2007ConnectionString(System.String)">
            <summary>
            返回Access2007的连接字符串
            </summary>
            <param name="dbPath">数据库绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetAccess2007ConnectionStringStandSecurity(System.String)">
            <summary>
            Standard security 来自：http://www.connectionstrings.com/access/
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConnectionStringHelper.GetAccess2000(System.String)">
            <summary>
            返回Access2000的连接字符串
            </summary>
            <param name="dbPath">数据库的绝对路径</param>
            <returns></returns>
        </member>
        <member name="T:System.DataTableHelper">
            <summary>
            DataTable帮助类
            </summary>
        </member>
        <member name="M:System.DataTableHelper.ToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转化一个DataTable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.ToList``1(System.Data.DataTable,System.String[])">
            <summary>
            DataTable 转换为List 集合 此方法待测试
            </summary>
            <typeparam name="TResult">类型</typeparam>
            <param name="dt">DataTable</param>
            <param name="propertyName">要求数组中属性全部小写</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.ToDataTableTow(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:System.DataTableHelper.AddIdentityColumn(System.Data.DataTable)">
            <summary>
            给DataTable增加一个自增列
            如果DataTable 存在 identityid 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <returns>返回Datatable 增加字段 identityid </returns>
        </member>
        <member name="M:System.DataTableHelper.AddColumn(System.Data.DataTable,System.String,System.String)">
            <summary>
            给DataTable增加一个列
            如果DataTable 存在 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <parm name="columnName">列名</parm>
            <returns>返回Datatable 增加字段  </returns>
        </member>
        <member name="M:System.DataTableHelper.DeleteColumn(System.Data.DataTable,System.String)">
            <summary>
            删除列
            </summary>
            <param name="dt">数据源</param>
            <param name="columnName">列名</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.RenameColumn(System.Data.DataTable,System.String,System.String)">
            <summary>
            列名修改，自动判断是否存在原始列名
            </summary>
            <param name="dt"></param>
            <param name="originalColumn"></param>
            <param name="newColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.AddColumn(System.Data.DataTable,System.String)">
            <summary>
            给DataTable增加一个列
            如果DataTable 存在 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <returns>返回Datatable 增加字段  </returns>
        </member>
        <member name="M:System.DataTableHelper.IsHaveRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否有数据行,如果为null，或者是没有数据，那么返回false
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.NotHaveRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否没有有数据行,可能为null或者没有值
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.RemoveBlankDataRows(System.Data.DataTable,System.String,System.Data.DataTable@)">
            <summary>
            去掉空白行
            </summary>
            <param name="dt">要过滤的datatable</param>
            <param name="flagColumn">以此列位标志，如果此行此列的数据为空，则删除此行</param>
            <param name="dtBlank">保存空白行</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.DataTableToList``1(System.Data.DataTable)">
            <summary>
            DataTable转换成实体列表，不区分大小写字段
            </summary>
            <typeparam name="T">实体 T </typeparam>
            <param name="table">datatable</param>
            <returns></returns>
            <remarks>
            http://www.cnblogs.com/codingsilence/archive/2011/05/26/2146530.html
            </remarks>
        </member>
        <member name="M:System.DataTableHelper.ListToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            实体列表转换成DataTable
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="list"> 实体列表</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:System.DataTableHelper.CreateTable(System.Collections.Generic.List{System.String})">
            <summary>
            根据nameList里面的字段创建一个表格,返回该表格的DataTable,该datatable的列全部是string类型
            </summary>
            <param name="nameList">包含字段信息的列表</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:System.DataTableHelper.SetDataTableData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            设置datatable随机内容
            </summary>
            <param name="rowCount"></param>
            <param name="lsColumn"></param>
        </member>
        <member name="M:System.DataTableHelper.CreateTable(System.String)">
            <summary>
            通过字符列表创建表字段，字段格式可以是：
            1) a,b,c,d,e
            2) a|int,b|string,c|bool,d|decimal
            </summary>
            <param name="nameString"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.GetDataRowArray(System.Data.DataRowCollection)">
            <summary>
            获得从DataRowCollection转换成的DataRow数组
            </summary>
            <param name="drc">DataRowCollection</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.GetTableFromRows(System.Data.DataRow[])">
            <summary>
            将DataRow数组转换成DataTable，注意行数组的每个元素须具有相同的数据结构，
            否则当有元素长度大于第一个元素时，抛出异常
            </summary>
            <param name="rows">行数组</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.SortedTable(System.Data.DataTable,System.String[])">
            <summary>
            排序表的视图
            </summary>
            <param name="dt"></param>
            <param name="sorts"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.FilterDataTable(System.Data.DataTable,System.String)">
            <summary>
            根据条件过滤表的内容，如果条件为空，返回dt,如果没有查询到，则返回null
            </summary>
            <param name="dt"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.MergeTable(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            两结构相同DATATABLE 合并
            </summary>
            <param name="orgDt"></param>
            <param name="newDt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.UniteDataTable2(System.Data.DataTable,System.Data.DataTable,System.String)">
            <summary>
            将两个列不同(结构不同)的DataTable合并成一个新的DataTable
            </summary>
            <param name="DataTable1">表1</param>
            <param name="DataTable2">表2</param>
            <param name="DTName">合并后新的表名</param>
            <returns>合并后的新表</returns>
        </member>
        <member name="M:System.DataTableHelper.FillData(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            合并两个datatable
            </summary>
            <param name="dt1"></param>
            <param name="dt2"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.GetArrayFromOneColumns``1(System.Data.DataTable,System.String)">
            <summary>
            把的DataTable中某列转换成数组
            </summary>
            <param name="datatable">datatable</param>
            <param name="columnNames">列名</param>
            <returns></returns>
        </member>
        <member name="M:System.DataTableHelper.GetPagedTable(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            DataTable分页
            </summary>
            <param name="dt">DataTable</param>
            <param name="PageIndex">页索引,注意：从1开始</param>
            <param name="PageSize">每页大小</param>
            <returns>分好页的DataTable数据</returns>              第1页        每页10条
        </member>
        <member name="M:System.DataTableHelper.PageCount(System.Int32,System.Int32)">
            <summary>
            返回分页的页数
            </summary>
            <param name="count">总条数</param>
            <param name="pagesize">每页显示多少条</param>
            <returns>如果 结尾为0：则返回1</returns>
        </member>
        <member name="T:CYQ.Data.Tool.DirectoryUtil">
            <summary>
            常用的目录操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.IsWriteable(System.String)">
             <summary>
            检查目录是否可写，如果可以，返回True，否则False
             </summary>
             <param name="path">绝对路径</param>
             <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.IsDiskSpaceEnough(System.String,System.UInt64)">
            <summary>
            检查磁盘是否有足够的可用空间
            </summary>
            <param name="path">欲检查的路径</param>
            <param name="requiredSpace">是否有如此多空间剩余</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetFreeSpace(System.String)">
            <summary>
            获取驱动盘符的可用空间大小,单位byte
            </summary>
            <param name="driveName">Direve name</param>
            <returns>free space (byte)</returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ConvertByteCountToKByteCount(System.UInt64)">
            <summary>
            转换byte到kb
            </summary>
            <param name="byteCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ConvertKByteCountToMByteCount(System.UInt64)">
            <summary>
            转换KB到MB
            </summary>
            <param name="kByteCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ConvertMByteCountToGByteCount(System.Single)">
            <summary>
            转换MB到GB
            </summary>
            <param name="kByteCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.CreateDirectoryByDate(System.String)">
            <summary>
            生成日期 文件夹    格式：yyyy\mm\dd
            </summary>
            <remarks>
            生成时间目录   返回 例如： c:\directory\2009\03\01
            </remarks>
            <param name="rootPath">绝对路径   [在此目录下建日期目录]</param>
            <returns>返回完整路径  </returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.CreateDirectoryByDate(System.String,System.String)">
            <summary>
            相应格式生成日期目录
            </summary>
            <remarks>
            formatString:
                         yyyy-MM-dd        :2009\03\01
                         yyyy-MM-dd-HH     :2009\03\01\01
                         yyyy-MM-dd-HH-ss  :
            </remarks>
            <param name="rootPath">绝对路径   [在此目录下建日期目录]</param>
            <param name="formatString">格式</param>
            <returns>返回完整路径 </returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.AssertDirExist(System.String)">
            <summary>
            确保文件夹被创建
            </summary>
            <param name="filePath">文件夹全名（含路径）</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ContainFile(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ContainFile(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.CreateDirectory(System.String)">
            <summary>
            创建一个目录,存在则不创建,不存在则创建
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetSystemDirectory">
            <summary>
            取系统目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetSpeicalFolder(System.Environment.SpecialFolder)">
            <summary>
            取系统的特别目录
            </summary>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetTempPath">
            <summary>
            返回当前系统的临时目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetCurrentDirectory">
            <summary>
            取当前目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.SetCurrentDirectory(System.String)">
            <summary>
            设当前目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetInvalidPathChars">
            <summary>
            取路径中不充许存在的字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.GetAllDrives">
            <summary>
            取系统所有的逻辑驱动器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DirectoryUtil.CopyFolder(System.String,System.String)">
            <summary>
            Copy文件夹
            </summary>
            <param name="sPath">源文件夹路径</param>
            <param name="dPath">目的文件夹路径</param>
            <returns>完成状态：success-完成；其他-报错</returns>
        </member>
        <member name="T:CYQ.Data.Tool.DynamicBuilder`1">
            <summary>
            运用 DynamicMethod and ILGenerator 创建实体
            CPOL开源协议
            作者:Herbrandson
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CYQ.Data.Tool.DynamicBuilder`1.Build(System.Data.IDataRecord)">
            <summary>
            执行CreateBuilder里创建的DynamicCreate动态方法的委托
            </summary>
            <param name="dataRecord"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DynamicBuilder`1.CreateBuilder(System.Data.IDataRecord)">
            <summary>
            得到一个创建者
            </summary>
            <param name="dataRecord"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DynamicBuilder`1.Load">
            <summary>
            该委托由动态IL调用
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.EmailHelper">
            <summary>
            2011-10-13日加入
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.client">
            <summary>
            最重要的一个对象
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.messageIDs">
            <summary>
            包含emailid的数组
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.dtFolder">
            <summary>
            文件夹datatable
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.ImapServer">
            <summary>
            imap地址
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.Port">
            <summary>
            端口，默认是143
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.UserName">
            <summary>
            邮件用户名
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.EmailHelper.Password">
            <summary>
            邮件密码
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelper.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelper.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="imapServer">
            <example>
            imap.163.com
            </example>
            </param>
            <param name="port"></param>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelper.Connect(System.String@)">
            <summary>
            建立连接
            </summary>
            <param name="err"></param>
            <returns>
            成功返回true，否则返回false
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelper.GetFolders">
            <summary>
            赋值文件夹datatable
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelper.list_messages(System.String,System.String,System.String@)">
            <summary>
            取得当前文件夹内的邮件
            </summary>
            <param name="folderName">文件夹名称</param>
            <param name="titlePix">标题特征码字符</param>
            <param name="err">错误信息</param>
        </member>
        <member name="T:CYQ.Data.Tool.EmailHelperT">
            <summary>
            发送邮件帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelperT.SetSmtpClient(System.String,System.Int32)">
            <summary>
            设置Smtp服务器信息
            </summary>
            <param name="serverHost"></param>
            <param name="Port"></param>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelperT.SetAddressFrom(System.String,System.String,System.String)">
            <summary>
            验证发件人信息 实现对SmtpClient实例配置，指定其Host(服务器信息),Port(端口号),Timeout(超时)。
            </summary>
            <param name="mailAddress"></param>
            <param name="mailPwd"></param>
            <param name="displayName">显示名称</param>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelperT.SendEmail(System.String,System.Int32,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            发送邮件,QQ邮箱需要设置独立密码,才能以QQ邮箱发送
            </summary>
            <param name="serverHost">smtp.163.com,smtp.qq.com</param>
            <param name="port">端口,一般为25</param>
            <param name="mailAddress">发信地址</param>
            <param name="mailPwd">发信密码</param>
            <param name="displayName">显示名称</param>
            <param name="reciveAddress">接收人地址</param>
            <param name="emailTitle">邮件主题</param>
            <param name="emailContent">邮件正文</param>
            <param name="emailAttachment">附件地址</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelperT.TestSendEmail">
            <summary>
            2015-09-15 163邮箱测试通过 
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.EmailHelperT.SendBack(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            发送完成后调用信息
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelHelperT">
            <summary>
            excel帮助类
            </summary>
            <remarks>
            2011-07-22日添加对于中文名称的处理
            来自:http://www.cnblogs.com/aland-liu/archive/2011/07/21/2112660.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelperT.GetExcelTables(System.String)">
            <summary>
            获取Excel数据表名称列表
            </summary>
            <param name="ExcelFileName">excel绝对路径</param>
            <returns>
            包含excel中所有sheet名称的数组
            </returns>
            <remarks>
            注释添加时间:2011-07-06
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelperT.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取指定Excel文件数据表的数据列列名列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
            <returns>包含该表中所有字段的数组</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelperT.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns>成功返回true，否则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelperT.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelperT.InputFromExcel(System.String,System.String)">
            <summary>
            导入Excel数据表至DataTable（第一行作为表头）
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelManage">
            <summary>
            Excel帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelManage.GetExcelTables(System.String)">
            <summary>
            获取Excel数据表列表
            </summary>
            <param name="ExcelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelManage.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取指定Excel文件数据表的数据列列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelManage.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelManage.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelManage.InputFromExcel(System.String,System.String)">
            <summary>
            导入Excel数据表至DataTable（第一行作为表头）
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelUitl">
            <summary>
            excel帮助类库
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.DsToExcel2003(System.String,System.Data.DataSet,System.String)">
            <summary>
            导出数据到Excel DataSet导入到Excel时 导入的Excel的文件的Sheet名要和要导入的DataTable名一致
            </summary>
            <param name="path">需要导入的Excel地址</param>
            <param name="oldds">需要导入的数据</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.DsToExcel2007(System.String,System.Data.DataSet,System.String)">
            <summary>
            导出数据到Excel  DataSet导入到Excel时 导入的Excel的文件的Sheet名要和要导入的DataTable名一致
            </summary>
            <param name="path">需要导入的Excel地址</param>
            <param name="oldds">需要导入的数据</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.ExcuteSql(System.Data.DataSet,System.String,System.String)">
            <summary>
            执行
            </summary>
            <param name="oldds">需要导入的数据</param>
            <param name="tableName">表名</param>
            <param name="strCon">连接字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.Excel2007ToDs(System.String,System.String)">
            <summary>
            查询Excle2007的数据 Excel导出数据到DataSet的SheetName 需要和实际的Sheet名一致
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.Excel2003ToDs(System.String,System.String)">
            <summary>
            查询Excle2003的数据 Excel导出数据到DataSet的SheetName 需要和实际的Sheet名一致
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelUitl.ExcuteQuery(System.String,System.String)">
            <summary>
            执行查询
            </summary>
            <param name="strConn"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.FileDialogHelper">
            <summary>
            打开、保存文件对话框操作辅助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CYQ.Data.Tool.FileDialogHelper"/> class.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenText">
            <summary>
            打开Txt对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveText">
            <summary>
            保存文本文件对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveText(System.String)">
            <summary>
            保存文本文件对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveText(System.String,System.String)">
            <summary>
            保存保存文本对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenExcel">
            <summary>
            打开Excel对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveExcel">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveExcel(System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveExcel(System.String,System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenHtml">
            <summary>
            打开Html对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveHtml">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveHtml(System.String)">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveHtml(System.String,System.String)">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenZip">
            <summary>
            Opens the Zip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenZip(System.String)">
            <summary>
            Opens the Zip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveZip">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveZip(System.String)">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveZip(System.String,System.String)">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenImage">
            <summary>
            Opens the image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveImage">
            <summary>
            保存图片对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveImage(System.String)">
            <summary>
            保存图片对话框并设置默认文件名,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveImage(System.String,System.String)">
            <summary>
            保存图片对话框并设置默认文件名,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveAccessDb">
            <summary>
            保存数据库备份对话框
            </summary>
            <returns>数据库备份路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenAccessDb">
            <summary>
            数据库还原对话框
            </summary>
            <returns>数据库还原路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.SaveConfig">
            <summary>
            保存配置文件备份对话框
            </summary>
            <returns>配置文件备份路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenConfig">
            <summary>
            配置文件还原对话框
            </summary>
            <returns>配置文件还原路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenDir">
            <summary>
            打开文件夹
            </summary>
            <returns>返回文件夹路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenDir(System.String)">
            <summary>
            打开文件夹
            </summary>
            <param name="selectedPath"></param>
            <returns>返回文件夹路径</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.Open(System.String,System.String,System.String)">
            <summary>
            Opens the specified title.
            </summary>
            <param name="title">The title.</param>
            <param name="filter">文本文件(*.txt)|*.txt|所有文件(*.*)|*.*</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.Open(System.String,System.String)">
            <summary>
            Opens the specified title.
            </summary>
            <param name="title">The title.</param>
            <param name="filter">文本文件(*.txt)|*.txt|所有文件(*.*)|*.*,如果为空或者null，则默认所有文件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.OpenCSV(System.String)">
            <summary>
            打开CVS文件
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.Save(System.String,System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">(*.liyinsuo)|*.liyinsuo|All files (*.*)|*.*  如果为空，则为默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.Save(System.String,System.String,System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileDialogHelper.Save(System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">(*.liyinsuo)|*.liyinsuo|All files (*.*)|*.*  如果为空，则为默认值 All files (*.*)|*.* </param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.GDI">
            <summary>
            GDI操作辅助类
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.GDI.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:CYQ.Data.Tool.GDI.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="T:CYQ.Data.Tool.HttpHelper">
            <summary>
            Http连接操作帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.GetHtml(CYQ.Data.Tool.HttpItem)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.GetData(CYQ.Data.Tool.HttpItem,CYQ.Data.Tool.HttpResult)">
            <summary>
            获取数据的并解析的方法
            </summary>
            <param name="item"></param>
            <param name="result"></param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetEncoding(CYQ.Data.Tool.HttpItem,CYQ.Data.Tool.HttpResult,System.Byte[])">
            <summary>
            设置编码
            </summary>
            <param name="item">HttpItem</param>
            <param name="result">HttpResult</param>
            <param name="ResponseByte">byte[]</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.GetByte">
            <summary>
            提取网页Byte
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.GetMemoryStream(System.IO.Stream)">
            <summary>
            4.0以下.net版本取数据使用
            </summary>
            <param name="streamResponse">流</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetRequest(CYQ.Data.Tool.HttpItem)">
             <summary>
             为请求准备参数
             </summary>
            <param name="item">参数列表</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetCer(CYQ.Data.Tool.HttpItem)">
            <summary>
            设置证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetCerList(CYQ.Data.Tool.HttpItem)">
            <summary>
            设置多个证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetCookie(CYQ.Data.Tool.HttpItem)">
            <summary>
            设置Cookie
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetPostData(CYQ.Data.Tool.HttpItem)">
            <summary>
            设置Post数据
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.SetProxy(CYQ.Data.Tool.HttpItem)">
            <summary>
            设置代理
            </summary>
            <param name="item">参数对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.HttpHelper.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            回调验证证书问题
            </summary>
            <param name="sender">流对象</param>
            <param name="certificate">证书</param>
            <param name="chain">X509Chain</param>
            <param name="errors">SslPolicyErrors</param>
            <returns>bool</returns>
        </member>
        <member name="T:CYQ.Data.Tool.HttpItem">
            <summary>
            Http请求参考类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.HttpItem._MaximumAutomaticRedirections">
            <summary>
            设置请求将跟随的重定向的最大数目
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.URL">
            <summary>
            请求URL必须填写
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Method">
            <summary>
            请求方式默认为GET方式,当为POST方式时必须设置Postdata的值
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Timeout">
            <summary>
            默认请求超时时间
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ReadWriteTimeout">
            <summary>
            默认写入Post数据超时间
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.KeepAlive">
            <summary>
             获取或设置一个值，该值指示是否与 Internet 资源建立持久性连接默认为true。
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Accept">
            <summary>
            请求标头值 默认为text/html, application/xhtml+xml, */*
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ContentType">
            <summary>
            请求返回类型默认 text/html
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.UserAgent">
            <summary>
            客户端访问信息默认Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Encoding">
            <summary>
            返回数据编码默认为NUll,可以自动识别,一般为utf-8,gbk,gb2312
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.PostDataType">
            <summary>
            Post的数据类型
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Postdata">
            <summary>
            Post请求时要发送的字符串Post数据
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.PostdataByte">
            <summary>
            Post请求时要发送的Byte类型的Post数据
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.WebProxy">
            <summary>
            设置代理对象，不想使用IE默认配置就设置为Null，而且不要设置ProxyIp
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Cookie">
            <summary>
            请求时的Cookie
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Referer">
            <summary>
            来源地址，上次访问地址
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.CerPath">
            <summary>
            证书绝对路径
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.IsToLower">
            <summary>
            是否设置为全文小写，默认为不转化
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Allowautoredirect">
            <summary>
            支持跳转页面，查询结果将是跳转后的页面，默认是不跳转
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Connectionlimit">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ProxyUserName">
            <summary>
            代理Proxy 服务器用户名
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ProxyPwd">
            <summary>
            代理 服务器密码
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ProxyIp">
            <summary>
            代理 服务IP ,如果要使用IE代理就设置为ieproxy
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ResultType">
            <summary>
            设置返回类型String和Byte
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Header">
            <summary>
            header对象
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ProtocolVersion">
            <summary>
                获取或设置用于请求的 HTTP 版本。返回结果:用于请求的 HTTP 版本。默认为 System.Net.HttpVersion.Version11。
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.Expect100Continue">
            <summary>
             获取或设置一个 System.Boolean 值，该值确定是否使用 100-Continue 行为。如果 POST 请求需要 100-Continue 响应，则为 true；否则为 false。默认值为 true。
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ClentCertificates">
            <summary>
            设置509证书集合
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.PostEncoding">
            <summary>
            设置或获取Post参数编码,默认的为Default编码
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ResultCookieType">
            <summary>
            Cookie返回类型,默认的是只返回字符串类型
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.ICredentials">
            <summary>
            获取或设置请求的身份验证信息。
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpItem.IfModifiedSince">
            <summary>
            获取和设置IfModifiedSince，默认为当前日期和时间
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.HttpResult">
            <summary>
            Http返回参数类
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.Cookie">
            <summary>
            Http请求返回的Cookie
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.Html">
            <summary>
            返回的String类型数据 只有ResultType.String时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.ResultByte">
            <summary>
            返回的Byte数组 只有ResultType.Byte时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.Header">
            <summary>
            header对象
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.StatusDescription">
            <summary>
            返回状态说明
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.StatusCode">
            <summary>
            返回状态码,默认为OK
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.ResponseUri">
            <summary>
            最后访问的URl
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.HttpResult.RedirectUrl">
            <summary>
            获取重定向的URl
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ResultType">
            <summary>
            返回类型
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.ResultType.String">
            <summary>
            表示只返回字符串 只有Html有数据
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.ResultType.Byte">
            <summary>
            表示返回字符串和字节流 ResultByte和Html都有数据返回
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.PostDataType">
            <summary>
            Post的数据格式默认为string
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PostDataType.String">
            <summary>
            字符串类型，这时编码Encoding可不设置
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PostDataType.Byte">
            <summary>
            Byte类型，需要设置PostdataByte参数的值编码Encoding可设置为空
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PostDataType.FilePath">
            <summary>
            传文件，Postdata必须设置为文件的绝对路径，必须设置Encoding的值
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ResultCookieType">
            <summary>
            Cookie返回类型
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.ResultCookieType.String">
            <summary>
            只返回字符串类型的Cookie
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.ResultCookieType.CookieCollection">
            <summary>
            CookieCollection格式的Cookie集合同时也返回String类型的cookie
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ImageClass">
            <summary>
            图片处理类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式,HW,指定高度缩放；W,指定宽，高按比例；H,指定高，宽按比例；Cut,宽高裁剪</param>    
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.ImageWatermark(System.String,System.String,System.String)">
            <summary>
            图片水印处理方法
            </summary>
            <param name="path">需要加载水印的图片路径（绝对路径）</param>
            <param name="waterpath">水印图片（绝对路径）</param>
            <param name="location">水印位置（传送正确的代码）</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            图片水印位置处理方法
            </summary>
            <param name="location">水印位置</param>
            <param name="img">需要添加水印的图片</param>
            <param name="waterimg">水印图片</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.LetterWatermark(System.String,System.Int32,System.String,System.Drawing.Color,System.String)">
            <summary>
            文字水印处理方法
            </summary>
            <param name="path">图片路径（绝对路径）</param>
            <param name="size">字体大小</param>
            <param name="letter">水印文字</param>
            <param name="color">颜色</param>
            <param name="location">水印位置</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            文字水印位置的方法
            </summary>
            <param name="location">位置代码</param>
            <param name="img">图片对象</param>
            <param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
            <param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="Width">原始图片的长度</param>
            <param name="Height">原始图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.Compress(System.String,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="mybt">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.GetFrames(System.String,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="pPath">图片路径</param>
            <param name="pSavePath">保存路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.imageCut(System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <summary>
            图片切割函数
            </summary>
            <param name="sourceFile">原始图片文件</param>
            <param name="xNum">在Ｘ轴上的切割数量</param>
            <param name="yNum">在Ｙ轴上的切割数量</param>
            <param name="quality">质量压缩比</param>
            <param name="outputFile">输出文件名，不带后缀</param>
            <returns>成功返回true，失败则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.imageCompress(System.String,System.Int64,System.String)">
            <summary>
            图片压缩函数
            </summary>
            <param name="sourceFile">原始图片文件</param>
            <param name="quality">质量压缩比</param>
            <param name="outputFile">输出文件名,请用 .jpg 后缀 </param>
            <returns>成功返回true，失败则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.getThumImage(System.String,System.Int64,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="sourceFile">原始图片文件</param>
            <param name="quality">质量压缩比</param>
            <param name="multiple">收缩倍数</param>
            <param name="outputFile">输出文件名</param>
            <returns>成功返回true,失败则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ImageClass.GetEncoderInfo(System.String)">
            <summary>
            获取图片编码信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.IPHelper.GetIp">
            <summary>
            获取IP地址 这个应该是客户端使用，即Winform方式时候获取本地IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.IPHelper.GetIpFromDNSPod">
            <summary>
            从dnspod获取IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.IPHelper.GetIpFrom3322">
            <summary>
            从3322获取IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.IPHelper.GetIpFromQQ">
            <summary>
            获取本机的公网IP
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.IPHelper.GetVisitIpAddress">
            <summary>
            获取访问者IP地址,asp.net页面使用
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.JsHelper">
            <summary>
            客户端脚本输出
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            弹出信息,并跳转指定页面。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.AlertAndGoHistory(System.String,System.Int32)">
            <summary>
            弹出信息,并返回历史页面
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.Redirect(System.String)">
            <summary>
            直接跳转到指定的页面
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.AlertAndParentUrl(System.String,System.String)">
            <summary>
            弹出信息 并指定到父窗口
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.ParentRedirect(System.String)">
            <summary>
            返回到父窗口
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.BackHistory(System.Int32)">
            <summary>
            返回历史页面
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.Alert(System.String)">
            <summary>
            弹出信息
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsHelper.RegisterScriptBlock(System.Web.UI.Page,System.String)">
            <summary>
            注册脚本块
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.JsonConvertHelper">
            <summary>
            json转化类
            JSON格式总结下，详细的去json.org查看。
            1）键名称：用双引号括起
            2）字符串：用使用双引号括起
            3）数字，布尔类型不需要使用双引号括起 
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.JsonConvertHelper.WriteDataRow(System.Text.StringBuilder,System.Data.DataRow)">
            <summary>
            转化出一个DataRow
            </summary>
            <param name="sb"></param>
            <param name="row"></param>
        </member>
        <member name="M:CYQ.Data.Tool.JsonConvertHelper.WriteDataSet(System.Text.StringBuilder,System.Data.DataSet)">
            <summary>
            转化一个DataSet
            </summary>
            <param name="sb"></param>
            <param name="ds"></param>
        </member>
        <member name="M:CYQ.Data.Tool.JsonConvertHelper.WriteDataTable(System.Text.StringBuilder,System.Data.DataTable)">
            <summary>
            转化一个DataTable
            </summary>
            <param name="sb"></param>
            <param name="table"></param>
        </member>
        <member name="M:CYQ.Data.Tool.JsonConvertHelper.WriteDataTable(System.Data.DataTable)">
            <summary>
            转化一个DataTable
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:CYQ.Data.Tool.JsonConvertHelper.JsonToDataTable(System.String)">
            <summary>
            将json转换为DataTable
            </summary>
            <param name="strJson">得到的json</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.LogUtil">
            <summary>
            来自吉日嘎拉
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.WriteException(System.Exception)">
            <summary>
            写入日志
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.Write(System.String)">
            <summary>
            写入日志
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.W(System.String)">
            <summary>
            写日志 根目录下的cyq_data_log.txt文件
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.WConfirm(System.Exception)">
            <summary>
            如果配置文件有写WriteLog 为 true ，那么记录日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.WConfirm(System.String)">
            <summary>
            如果配置文件有写WriteLog 为 true ，那么记录日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.W(System.Exception)">
            <summary>
            在本地写入错误日志，仅供cyq.data.dll输出日志使用
            </summary>
            <param name="exception"></param> 错误信息
        </member>
        <member name="M:CYQ.Data.Tool.LogUtil.WriteLog(System.Exception)">
            <summary>
            在本地写入错误日志
            </summary>
            <param name="exception"></param> 错误信息
        </member>
        <member name="T:CYQ.Data.Tool.DataReaderHelper">
            <summary>
            DataReader帮助类
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.MyPath">
            <summary>
            用来替代Path类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MyPath.InitRelativePath">
            <summary>
            初始化相对路径 可以在连接字符串中如下拼写：Data Source=|DataDirectory|\MyDb.sdf 实际路径为：App_Data\MyDb.sdf
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.MyPath.Combine(System.String[])">
            <summary>
            合并两个路径
            </summary>
            <param name="paths"></param>
            <returns></returns>
            <remarks>
            http://www.cnblogs.com/lovejenny/archive/2012/03/05/2381094.html
            </remarks>
        </member>
        <member name="T:CYQ.Data.Tool.CollectionHelper">
            <summary>
            集合帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionHelper.ConvertTo``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换为DataTable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionHelper.ConvertTo``1(System.Collections.Generic.IList{System.Data.DataRow})">
            <summary>
            转换实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionHelper.ConvertTo``1(System.Data.DataTable)">
            <summary>
            转换实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionHelper.CreateItem``1(System.Data.DataRow)">
            <summary>
            从DataRow反射到一个对象实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.CollectionHelper.CreateTable``1">
            <summary>
            返回一个DataTable，空的
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertListDataTableHelper`1">
            <summary>
            转换工具类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertListDataTableHelper`1.ConvertToIList(System.Data.DataTable)">
            <summary>
            DataTable转换为IList
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertListDataTableHelper`1.ConvertToDataSet``1(System.Collections.Generic.IList{``0})">
            <summary>
            Ilist 转换成 DataSet
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertListDataTableHelper`1.ConvertToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            Ilist 转换成 DataTable
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.isBaseNumber(System.Int32)">
            <summary>
            判断是否是  2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.StringToBytes(System.String)">
            <summary>
            将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.BytesToString(System.Byte[])">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToInt32``1(``0,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.IsInt32(System.Object)">
            <summary>
            是不是Int32类型
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToBoolean``1(``0,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToBoolean(System.String,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToFloat``1(``0,System.Single)">
            <summary>
            将数据转换为单精度浮点型  转换失败 返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToFloat(System.String,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble``1(``0,System.Double)">
            <summary>
            将数据转换为双精度浮点型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble``1(``0,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble(System.String,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble(System.Object,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDouble(System.String,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            将数据转换为指定类型
            </summary>
            <param name="data">转换的数据</param>
            <param name="targetType">转换的目标类型</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ConvertTo``1(System.Object)">
            <summary>
            将数据转换为指定类型
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="data">转换的数据</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDecimal``1(``0,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDecimal(System.String,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDateTime``1(``0,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ToDateTime(System.String,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ConvertToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertHelper.ConvertToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:CYQ.Data.Tool.ConvertUtility">
            <summary>
            类型转换类
            </summary>
            <remarks>
            来自:http://www.cnblogs.com/loskiv/archive/2009/06/18/1506165.html
            添加时间:2011-07-02
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.IsDateTimeUseIs(System.Object)">
            <summary>
            是否是日期，采用的是is关键字，经典。
            </summary>
            <param name="o"></param>
            <returns></returns>
            <remarks>
            来源于wuhuacong的类库
            添加时间:2011-07-09
            添加人:李银锁
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.IsNumericUseIs(System.Object)">
            <summary>
            是否是数字，可以是short、int、long、decimal、double、byte、sbyte、float、double等。
            </summary>
            <param name="o"></param>
            <returns></returns>
            <remarks>
            来源于wuhuacong的类库
            添加时间:2011-07-09
            添加人:李银锁
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.IsNull(System.Object)">
            <summary>
            判断对象是否为空，如果为空则返回true；反之返回false;
            </summary>
            <remarks>
            ？其实这个方法没什么必要了，因为String对象有IsNULLOrEmpty()方法可以使用
            2011-07-03日对此方法的用处存有疑问，可能还是有用处的。
            2011-07-06日，感觉这个方法还是有些用处的。例如下面都是传入的object对象，这个时候只需要判断下是否为null就可以了。
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToString(System.Object)">
            <summary>
            将对象转换为string类型，如果对象为空，返回string.Empty
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToInt(System.Object,System.Int32)">
             <summary>
             将对象转换为int类型，异常返回默认值
             <para>
             如果能正常parse，则返回4，否则返回0
             </para>
             </summary>
             <code>
             ConvertToInt(4,0)
             </code>
             <returns>
             如果能正常parse，则返回4，否则返回0
             </returns>
             <remarks>
            2011-07-16 发现:如果下面的注释是//的话，则调用这个方法的时候显示的注释会提示xml注释有问题，必须改为///才能正常显示注释
            添加注释时间:2011-07-03 深刻理解TryParse
            public static bool TryParse(string s,out int result)
            When this method returns, contains the 32-bit signed integer value equivalent to the number contained in s, if the conversion succeeded, or zero if the conversion failed.
            如果转换成功，则把包含在s里面的数字赋值给result，否则，result=0
            The conversion fails if the s parameter is null, is not of the correct format, or represents a number less than MinValue or greater than MaxValue. This parameter is passed uninitialized. 
            如果s是null或者s不是正确的格式，或者s大于最大值，小于最小值，都将转换失败
            The TryParse method is like the Parse method, except the TryParse method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a FormatException in the event that s is invalid and cannot be successfully parsed. 
            TryParse方法类似于Parse方法，不同的是，TryParse方法转换失败的时候不抛出异常
            The s parameter contains a number of the form: 
            [ws][sign]digits[ws] 
            Items in square brackets ([ and ]) are optional. The following table describes each element.
            ws Optional white space. 有空格     例如: " 23 "
            sign An optional sign.   有可选符号 例如："+23" 转换为 23 ； -322转换为 -322
            digits A sequence of digits ranging from 0 to 9. 一个从0到9的数字序列
             </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToBool(System.Object,System.Boolean)">
            <summary>
            将对象转换为bool值，出现异常，则返回false
            </summary>
            <example>
            ConvertToBool(false,true)-->false 因为可以转换成功，所以，返回false值对应的bool值
            ConvertToBool("falses",true)-->true 转换失败，则按照我自己的下面的逻辑，返回的是默认值true
            </example>
            <param name="obj">待转换的数值</param>
            <param name="defaultValue">默认值，可能为true，可能为false</param>
            <returns>
            如果转换成功，则返回true，否则，返回false
            </returns>
            When this method returns, if the conversion succeeded, contains true if value is equivalent to TrueString or false if value is equivalent to FalseString. If the conversion failed, contains false.
            The conversion fails if value is nullor is not equivalent to either TrueString or FalseString. This parameter is passed uninitialized.
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToDecimal(System.Object,System.Decimal)">
            <summary>
            将对象转换为decimal类型，异常返回默认值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToDouble(System.Object,System.Double)">
            <summary>
            将对象转换为double类型，异常返回默认值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToFloat(System.Object,System.Single)">
            <summary>
            将对象转换为float类型，异常返回默认值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ConvertToDateTime(System.Object)">
            <summary>
            将对象转换为DateTime类型，异常返回"1900-01-01"
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ToInt(System.Object)">
            <summary>
            转换为数字（错误兼容）,出错返回0,不建议使用
            </summary>
            <param name="obj">要转换的对象</param>
            <remarks>
            添加时间:2011-07-09
            感觉:不太友好，如果本来object就是0，那么就不能判断是出错导致的还是本来就是了。
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ToDate(System.Object)">
            <summary>
            转换为日期（错误兼容）
            </summary>
            <param name="obj">要转换的对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.ConvertUtility.ToBool(System.Object)">
            <summary>
            转换为布尔类型（错误兼容）
            </summary>
            <param name="obj">要转换的对象</param>
        </member>
        <member name="T:CYQ.Data.Tool.CreateDnyModel">
            <summary>
             动态创建内存模型
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CreateDnyModel.dicList">
            <summary>
             Dictionary {属性名称,属性类型}
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.CreateDnyModel.namespaceList">
            <summary>
             添加命名空间
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.CreateDnyModel.AddNamespace(System.String)">
            <summary>
            添加命名空间
            </summary>
            <param name="nameSpace"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CreateDnyModel.AddAssembly(System.String)">
            <summary>
            添加程序集
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:CYQ.Data.Tool.CreateDnyModel.BuilderModel">
            <summary>
            建立model
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.DataReaderToDataTable">
            <summary>
            DataReader转化为DataTable
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.DataReaderToDataTable.ConvertDataReaderToDataTable(System.Data.IDataReader)">
            <summary>
            将DataReader转a换?为aDataTable
            </summary>
            <param name="reader">IDataReader不能为null，否则报错</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.DataReaderToDataTable.ConvertDataReaderToDataTable(System.Data.IDataReader,System.String)">
            <summary>
            将DataReader转a换?为aDataTable
            </summary>
            <param name="reader">IDataReader不能为null，否则报错</param>
            <param name="tableName">表名</param>
            <returns>返回一个DataTable</returns>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelHelper">
            <summary>
            Excel操作辅助类（无需VBA引用）
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelConnectstring(System.String,System.Boolean,CYQ.Data.Tool.ExcelHelper.ExcelType)">
            <summary>
            返回Excel 连接字符串   [IMEX=1]
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelConnectstring(System.String,System.Boolean,CYQ.Data.Tool.ExcelHelper.ExcelType,CYQ.Data.Tool.ExcelHelper.IMEXType)">
            <summary>
            返回Excel 连接字符串
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <param name="imex">IMEX模式，IMEX=1     解决数字与字符混合时,识别不正常的情况.</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelTablesName(System.String,CYQ.Data.Tool.ExcelHelper.ExcelType)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelTablesName(System.String)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelTablesName(System.Data.OleDb.OleDbConnection)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="connection">excel连接</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelFirstTableName(System.String,CYQ.Data.Tool.ExcelHelper.ExcelType)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelFirstTableName(System.String)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetExcelFirstTableName(System.Data.OleDb.OleDbConnection)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="connection">excel连接</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.GetColumnsList(System.String,CYQ.Data.Tool.ExcelHelper.ExcelType,System.String)">
            <summary>
            获取Excel文件中指定工作表的列
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="table">名称 excel table  例如：Sheet1$</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.ExcelToDataSet(System.String,System.String,System.Boolean,CYQ.Data.Tool.ExcelHelper.ExcelType)">
            <summary>
            EXCEL导入DataSet
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="table">名称 excel table  例如：Sheet1$ </param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns>返回Excel相应工作表中的数据 DataSet   [table不存在时返回空的DataSet]</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.isExistExcelTableName(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            判断工作表名是否存在
            </summary>
            <param name="connection">excel连接</param>
            <param name="table">名称 excel table  例如：Sheet1$</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.ExcelToDataSet(System.String,System.String)">
            <summary>
            EXCEL导入DataSet
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <param name="table">名称 excel table  例如：Sheet1$ </param>
            <returns>返回Excel相应工作表中的数据 DataSet   [table不存在时返回空的DataSet]</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.ExcelToDataSet(System.String,System.Boolean,CYQ.Data.Tool.ExcelHelper.ExcelType)">
            <summary>
            EXCEL所有工作表导入DataSet
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns>返回Excel第一个工作表中的数据 DataSet </returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.ExcelToDataSet(System.String)">
            <summary>
            EXCEL所有工作表导入DataSet
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns>返回Excel第一个工作表中的数据 DataSet </returns>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.DataSetToExcel(System.Data.DataSet,System.String)">
            <summary>
            把一个数据集中的数据导出到Excel文件中(XML格式操作)
            </summary>
            <param name="source">DataSet数据</param>
            <param name="fileName">保存的Excel文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.ExcelHelper.DataSetToExcel(System.Data.DataTable,System.String)">
            <summary>
            将DataTable导出为Excel(OleDb 方式操作）
            </summary>
            <param name="dataTable">表</param>
            <param name="fileName">导出默认文件名</param>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelHelper.ExcelType">
            <summary>
            Excel 版本
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.ExcelHelper.IMEXType">
            <summary>
            IMEX 三种模式。
            IMEX是用来告诉驱动程序使用Excel文件的模式，其值有0、1、2三种，分别代表导出、导入、混合模式。
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.FileUtil">
            <summary>
            常用的文件操作辅助类FileUtil
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.StreamToBytes(System.IO.Stream)">
            <summary>
            将流读取到缓冲区中
            </summary>
            <param name="stream">原始流</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.BytesToStream(System.Byte[])">
            <summary>
            将 byte[] 转成 Stream
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.StreamToFile(System.IO.Stream,System.String)">
            <summary>
            将 Stream 写入文件
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileToStream(System.String)">
            <summary>
            从文件读取 Stream
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileToBytes(System.String)">
            <summary>
            将文件读取到缓冲区中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileToBytes(System.Drawing.Image)">
            <summary>
            将文件读取到缓冲区中
            </summary>
            <param name="imgPhoto"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileToString(System.String)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileToString(System.String,System.Text.Encoding)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.ReadFileFromEmbedded(System.String)">
            <summary>
            从嵌入资源中读取文件内容(e.g: xml).
            </summary>
            <param name="fileWholeName">嵌入资源文件名，包括项目的命名空间.</param>
            <returns>资源中的文件内容.</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetEncoding(System.String)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetEncoding(System.String,System.Text.Encoding)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="defaultEncoding">找不到则返回这个默认编码</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileSizeKB(System.String)">
            <summary>
            获取一个文件的长度,单位为KB
            </summary>
            <param name="filePath">文件的路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileSizeMB(System.String)">
            <summary>
            获取一个文件的长度,单位为MB
            </summary>
            <param name="filePath">文件的路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.WriteText(System.String,System.String)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.Copy(System.String,System.String,System.Boolean)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
            <param name="overide">是否覆盖</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <remarks>
            2011-12-03日建立文件的方式修改为using方式，否则如果接下来的操作是写入信息，则会报错！
            </remarks>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.DeleteFile(System.String)">
            <summary>
            删除指定文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileIsExist(System.String)">
            <summary>
            文件是否存在或无权访问
            </summary>
            <param name="path">相对路径或绝对路径</param>
            <returns>如果是目录也返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileNotExist(System.String)">
            <summary>
            文件是否不存在
            </summary>
            <param name="path"></param>
            <returns>不存在返回true，存在返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.FileIsReadOnly(System.String)">
            <summary>
            文件是否只读
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.SetFileReadonly(System.String,System.Boolean)">
            <summary>
            设置文件是否只读
            </summary>
            <param name="fullpath"></param>
            <param name="flag">true表示只读，反之</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileName(System.String,System.Boolean)">
            <summary>
            取文件名
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetFileCreateTime(System.String)">
            <summary>
            取文件创建时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetLastWriteTime(System.String)">
            <summary>
            取文件最后存储时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.CreateTempZeroByteFile">
            <summary>
            创建一个零字节临时文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.GetRandomFileName">
            <summary>
            创建一个随机文件名，不创建文件本身
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.CompareFilesHash(System.String,System.String)">
            <summary>
            判断两个文件的哈希值是否一致
            </summary>
            <param name="fileName1"></param>
            <param name="fileName2"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.LoadObjectFromXml(System.String,System.Type)">
            <summary>
            从XML文件转换为Object对象类型.
            </summary>
            <param name="path">XML文件路径</param>
            <param name="type">Object对象类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.SaveObjectToXml(System.String,System.Object)">
            <summary>
            保存对象到特定格式的XML文件
            </summary>
            <param name="path">XML文件路径.</param>
            <param name="obj">待保存的对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.DownloadFile(System.String,System.String,System.Windows.Forms.ProgressBar,System.Windows.Forms.Button,System.Windows.Forms.Label)">
            <summary>
            下载文件
            </summary>
            <param name="URL">下载文件地址</param>
            <param name="Filename">下载后的存放地址</param>
            <param name="Prog">用于显示的进度条</param>
            <param name="btn">按钮，可有可无</param>
            <param name="lb">lable</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.DownloadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="URL">下载文件地址</param>
            <param name="Filename">下载后的存放地址</param>
        </member>
        <member name="M:CYQ.Data.Tool.FileUtil.DownloadFile2(System.String,System.String,System.String@)">
            <summary>
            下载文件
            </summary>
            <param name="URL">下载文件地址</param>
            <param name="Filename">下载后另存为（全路径）</param>
        </member>
        <member name="T:CYQ.Data.Tool.LogHelper">
            <summary>
            Log4Net日志记录辅助类
            </summary>
            <remarks>
            参考:http://blog.csdn.net/xgx1985xgx/article/details/6553346
            </remarks>
            //指定log4net使用的config文件来读取配置信息
        </member>
        <member name="M:CYQ.Data.Tool.LogHelper.ConfigrationAndWatch">
            <summary>
            监视配置文件,默认是Winform下的Log4Net.config文件
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.LogHelper.Test(System.String[])">
            <summary>
            测试方法
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:CYQ.Data.Tool.LogHelper.BasePath">
            <summary>
            取得通用更目录
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.MessageBoxHelper">
            <summary>
            来源于wuhuacong的类库
            </summary>
            <remarks>
            添加时间:2011-07-09
            修改:
            2011-07-16 添加 using swf = System.Windows.Forms;代码，简化下面调用。
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxHelper.ShowYesNoAndError(System.String)">
            <summary>
            显示yes、no和错误信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxHelper.ShowYesNoAndTips(System.String)">
            <summary>
            显示yes、no和提示信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxHelper.ShowYesNoAndWarning(System.String)">
            <summary>
            显示yes、no和警告信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.MessageBoxHelper.ShowYesNoCancelAndTips(System.String)">
            <summary>
            显示yes、no、cancel和提示信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.NativeMethods">
            <summary>
            Contains InterOp method calls used by the application.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.#ctor">
            private constructor, not intended for instantiation
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.PlaySound(System.String,System.Int64,System.Int64)">
            <summary>
            PlaySound API can be used to play a wav file. long needs to be fixed according to mapping table.
            </summary>
            <param name="lpszName"></param>
            <param name="hModule"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.BringToFront(System.IntPtr)">
            <summary>
            把指定的窗口提到最前面
            </summary>
            <param name="hWnd"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.BringWindowToTop(System.IntPtr)">
            <summary>
            调取指定windows窗体到前台
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.CanInternet">
            <summary>
            是否能够联网
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.CanNotInternet">
            <summary>
            如果不能联网
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.GetForegroundWindow">
            <summary>
            返回值是一个前台窗口的句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.GetWindow(System.IntPtr,CYQ.Data.Tool.NativeMethods.GetWindowConstants)">
            <summary>
            The GetNextWindow function retrieves a handle to the next or previous window in the Z-Order.
            The next window is below the specified window; the previous window is above.
            If the specified window is a topmost window, the function retrieves a handle to the next (or previous) topmost window.
            If the specified window is a top-level window, the function retrieves a handle to the next (or previous) top-level window.
            If the specified window is a child window, the function searches for a handle to the next (or previous) child window.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.GetWindowHandle">
            <summary>
            返回一个窗体句柄 前台窗体
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.MaximizedWindowFix(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            最大化窗体
            </summary>
            <param name="handle"></param>
            <param name="windowRect"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.ActivateWindow(System.IntPtr)">
            <summary>
            激活窗体
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.ActivateWindowRepeat(System.IntPtr,System.Int32)">
            <summary>
            重复激活窗体
            </summary>
            <param name="handle"></param>
            <param name="count"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NativeMethods.GetTaskBarInfo(CYQ.Data.Tool.NativeMethods.TaskBarEdge@,System.Int32@,System.Boolean@)">
            <summary>
            Method returns information about the Window's TaskBar.
            </summary>
            <param name="taskBarEdge">Location of the TaskBar(Top,Bottom,Left,Right).</param>
            <param name="height">Height of the TaskBar.</param>
            <param name="autoHide">AutoHide property of the TaskBar.</param>
        </member>
        <member name="T:CYQ.Data.Tool.NativeMethods.WindowShowStyle">
            <summary>Enumeration of the different ways of showing a window using
            ShowWindow</summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.Hide">
            <summary>Hides the window and activates another window.</summary>
            <remarks>See SW_HIDE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowNormal">
            <summary>Activates and displays a window. If the window is minimized
            or maximized, the system restores it to its original size and
            position. An application should specify this flag when displaying
            the window for the first time.</summary>
            <remarks>See SW_SHOWNORMAL</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowMinimized">
            <summary>Activates the window and displays it as a minimized window.</summary>
            <remarks>See SW_SHOWMINIMIZED</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowMaximized">
            <summary>Activates the window and displays it as a maximized window.</summary>
            <remarks>See SW_SHOWMAXIMIZED</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.Maximize">
            <summary>Maximizes the specified window.</summary>
            <remarks>See SW_MAXIMIZE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowNormalNoActivate">
            <summary>Displays a window in its most recent size and position.
            This value is similar to "ShowNormal", except the window is not
            actived.</summary>
            <remarks>See SW_SHOWNOACTIVATE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.Show">
            <summary>Activates the window and displays it in its current size
            and position.</summary>
            <remarks>See SW_SHOW</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.Minimize">
            <summary>Minimizes the specified window and activates the next
            top-level window in the Z order.</summary>
            <remarks>See SW_MINIMIZE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowMinNoActivate">
            <summary>Displays the window as a minimized window. This value is
            similar to "ShowMinimized", except the window is not activated.</summary>
            <remarks>See SW_SHOWMINNOACTIVE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowNoActivate">
            <summary>Displays the window in its current size and position. This
            value is similar to "Show", except the window is not activated.</summary>
            <remarks>See SW_SHOWNA</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.Restore">
            <summary>Activates and displays the window. If the window is
            minimized or maximized, the system restores it to its original size
            and position. An application should specify this flag when restoring
            a minimized window.</summary>
            <remarks>See SW_RESTORE</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ShowDefault">
            <summary>Sets the show state based on the SW_ value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.</summary>
            <remarks>See SW_SHOWDEFAULT</remarks>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowShowStyle.ForceMinimized">
            <summary>Windows 2000/XP: Minimizes a window, even if the thread
            that owns the window is hung. This flag should only be used when
            minimizing windows from a different thread.</summary>
            <remarks>See SW_FORCEMINIMIZE</remarks>
        </member>
        <member name="T:CYQ.Data.Tool.NativeMethods.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.NativeMethods.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPED">
            <summary>
            Creates an overlapped window. An overlapped window usually has a caption and a border.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_POPUP">
            <summary>
            Creates a pop-up window. Cannot be used with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CHILD">
            <summary>
            Creates a child window. Cannot be used with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_POPUP"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MINIMIZE">
            <summary>
            Creates a window that is initially minimized. For use with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPED"/> style only.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_VISIBLE">
            <summary>
            Creates a window that is initially visible.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_DISABLED">
            <summary>
            Creates a window that is initially disabled.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a paint message, the WS_CLIPSIBLINGS style clips all other overlapped child windows out of the region of the child window to be updated. (If WS_CLIPSIBLINGS is not given and child windows overlap, when you draw within the client area of a child window, it is possible to draw within the client area of a neighboring child window.) For use with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CHILD"/> style only.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows when you draw within the parent window.
            Used when you create the parent window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MAXIMIZE">
            <summary>
            Creates a window of maximum size.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_BORDER">
            <summary>
            Creates a window that has a border.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_DLGFRAME">
            <summary>
            Creates a window with a double border but no title.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_VSCROLL">
            <summary>
            Creates a window that has a vertical scroll bar.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_HSCROLL">
            <summary>
            Creates a window that has a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_SYSMENU">
            <summary>
            Creates a window that has a Control-menu box in its title bar. Used only for windows with title bars.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_THICKFRAME">
            <summary>
            Creates a window with a thick frame that can be used to size the window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_GROUP">
            <summary>
            Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys. All controls defined with the WS_GROUP style FALSE after the first control belong to the same group. The next control with the WS_GROUP style starts the next group (that is, one group ends where the next begins).
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_TABSTOP">
            <summary>
            Specifies one of any number of controls through which the user can move by using the TAB key. The TAB key moves the user to the next control specified by the WS_TABSTOP style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MINIMIZEBOX">
            <summary>
            Creates a window that has a Minimize button.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MAXIMIZEBOX">
            <summary>
            Creates a window that has a Maximize button.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CAPTION">
            <summary>
            Creates a window that has a title bar (implies the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_BORDER"/> style).
            Cannot be used with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_DLGFRAME"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_TILED">
            <summary>
            Creates an overlapped window. An overlapped window has a title bar and a border. Same as the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPED"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_ICONIC">
            <summary>
            Creates a window that is initially minimized. Same as the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MINIMIZE"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_SIZEBOX">
            <summary>
            Creates a window that has a sizing border. Same as the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_THICKFRAME"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_TILEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CAPTION"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_SYSMENU"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_THICKFRAME"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MAXIMIZEBOX"/> styles. Same as the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPEDWINDOW"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CAPTION"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_SYSMENU"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_THICKFRAME"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_MAXIMIZEBOX"/> styles.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_POPUPWINDOW">
            <summary>
            Creates a pop-up window with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_BORDER"/>, <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_POPUP"/>, and <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_SYSMENU"/> styles. The WS_CAPTION style must be combined with the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_POPUPWINDOW"/> style to make the Control menu visible.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CHILDWINDOW">
            <summary>
            Same as the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_DLGMODALFRAME">
            <summary>
            Designates a window with a double border that may (optionally) be created with a title bar when you specify the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_CAPTION"/> style flag in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style will not send the <see cref="!:WM_PARENTNOTIFY"/> message to its parent window when the child window is created or destroyed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all nontopmost windows and stay above them even when the window is deactivated. An application can use the <see cref="M:CYQ.Data.Tool.NativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)"/> member function to add or remove this attribute.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-and-drop files.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style is to be transparent. That is, any windows that are beneath the window are not obscured by the window. A window created with this style receives <see cref="!:WM_PAINT"/> messages only after all sibling windows beneath it have been updated.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_MDICHILD">
            <summary>
            Creates an MDI child window.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window, which is a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the task bar or in the window that appears when the user presses ALT+TAB.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a 3D look — that is, a border with a sunken edge.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a <see cref="!:WM_HELP"/> message.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_RIGHT">
            <summary>
            Gives a window generic right-aligned properties. This depends on the window class.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_LEFT">
            <summary>
            Gives window generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_RTLREADING">
            <summary>
            Displays the window text using right-to-left reading order properties.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_LTRREADING">
            <summary>
            Displays the window text using left-to-right reading order properties. This is the default.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_LEFTSCROLLBAR">
            <summary>
            Places a vertical scroll bar to the left of the client area.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Places a vertical scroll bar (if present) to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_CONTROLPARENT">
            <summary>
            Allows the user to navigate among the child windows of the window by using the TAB key.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_CLIENTEDGE"/> and <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE"/> styles.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE"/> and <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_TOPMOST"/> styles.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either <see cref="!:CS_OWNDC"/> or <see cref="!:CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either <see cref="!:CS_OWNDC"/> or <see cref="!:CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the <see cref="M:CYQ.Data.Tool.NativeMethods.SetActiveWindow(System.IntPtr)"/> or <see cref="M:CYQ.Data.Tool.NativeMethods.SetForegroundWindow(System.IntPtr)"/> function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the <see cref="F:CYQ.Data.Tool.NativeMethods.WindowStyles.WS_EX_APPWINDOW"/> style.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyWindow">
            <summary>
            Display An MSN-Messenger-Style NotifyWindow.
            <para>
            加入时间:2011-07-25
            来自:http://www.codeproject.com/KB/miscctrl/RobMisNotifyWindow.aspx
            </para>
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.Title">
            <summary>
            Gets or sets the title text to be displayed in the NotifyWindow.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.TitleFont">
            <summary>
            Gets or sets the Font used for the title text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.HoverFont">
            <summary>
            Gets or sets the Font used when the mouse hovers over the main body of text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.TitleHoverFont">
            <summary>
            Gets or sets the Font used when the mouse hovers over the title text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.BackgroundStyle">
            <summary>
            Gets or sets the style used when drawing the background of the NotifyWindow.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.Blend">
            <summary>
            Gets or sets the Blend used when drawing a gradient background for the NotifyWindow.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.StringFormat">
            <summary>
            Gets or sets the StringFormat used when drawing text in the NotifyWindow.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.WaitOnMouseOver">
            <summary>
            Gets or sets a value specifiying whether or not the window should continue to be displayed if the mouse cursor is inside the bounds
            of the NotifyWindow.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.TitleColor">
            <summary>
            Gets or sets the color of the title text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.TextColor">
            <summary>
            Gets or sets the color of the NotifyWindow main text.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.GradientColor">
            <summary>
            Gets or sets the gradient color which will be blended in drawing the background.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.PressedColor">
            <summary>
            Gets or sets the color of text when the user clicks on it.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.WaitTime">
            <summary>
            Gets or sets the amount of milliseconds to display the NotifyWindow for.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.ActualHeight">
            <summary>
            Gets or sets the full height of the NotifyWindow, used after the opening animation has been completed.
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.NotifyWindow.ActualWidth">
            <summary>
            Gets or sets the full width of the NotifyWindow.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.#ctor(System.String,System.String)">
            <param name="title">Title text displayed in the NotifyWindow</param>
            <param name="text">Main text displayedin the NotifyWindow</param>
            <summary>
            构造函数，需要提供标题和内容
            <para>
            NotifyWindow nw = new NotifyWindow ("NotifyWindow",  "This is a sample notification created with NotifyWindow");
            nw.Notify();
            </para>
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.#ctor(System.String)">
            <param name="text">Text displayed in the NotifyWindow</param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.#ctor">
            <summary>
            默认的构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.SetDimensions(System.Int32,System.Int32)">
            <summary>
            Sets the width and height of the NotifyWindow.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.Notify">
            <summary>
            Displays the NotifyWindow.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.drawThemeCloseButton(System.Drawing.Graphics)">
            <summary>
            Draw a Windows XP style close button.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.drawLegacyCloseButton(System.Drawing.Graphics)">
            <summary>
            Draw a Windows 95 style close button.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindow.visualStylesEnabled">
            <summary>
            Determine whether or not XP Visual Styles are active.  Compatible with pre-UxTheme.dll versions of Windows.
            </summary>
        </member>
        <member name="E:CYQ.Data.Tool.NotifyWindow.TextClicked">
            <summary>
            An EventHandler called when the NotifyWindow main text is clicked.
            </summary>
        </member>
        <member name="E:CYQ.Data.Tool.NotifyWindow.TitleClicked">
            <summary>
            An EventHandler called when the NotifyWindow title text is clicked.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyWindow2000">
            <summary>
            An MSN-Messenger-Style NotifyWindow.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyWindow2000.HOOKPROC">
            <summary>
            
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
        </member>
        <member name="T:CYQ.Data.Tool.NotifyWindowHelper">
            <summary>
            NotifyWindow帮助类
            </summary>
            <remarks>
            201-10-12日添加
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindowHelper.Show(System.String)">
            <summary>
            就显示文字
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindowHelper.Show(System.String,System.String)">
            <summary>
            显示标题和内容
            </summary>
            <param name="caption"></param>
            <param name="text"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindowHelper.Show(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="caption"></param>
            <param name="text"></param>
            <param name="windowWidth">宽度</param>
            <param name="windowsHeitht">高度</param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindowHelper.Show(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            显示信息
            </summary>
            <param name="caption"></param>
            <param name="text"></param>
            <param name="windowWidth"></param>
            <param name="windowsHeitht"></param>
            <param name="waitTime"></param>
        </member>
        <member name="M:CYQ.Data.Tool.NotifyWindowHelper.GetStringLength(System.String,System.String)">
             <summary>
             获取当前字符串的像素长度
            将字符串画在图片上面计算像素
             create by gaoxing 
             </summary>
             <param name="str">输入字符串</param>
             <param name="picPath">传入图片路径</param>
             <returns>当前字符串的长度</returns>
        </member>
        <member name="T:CYQ.Data.Tool.OneWords">
            <summary>
            一句话帮助类
            </summary>
            <remarks>
            2011-12-03日完成
            </remarks>
        </member>
        <member name="F:CYQ.Data.Tool.OneWords._password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.#ctor(System.String)">
            <summary>
            基本构造函数
            </summary>
            <param name="pwd"></param>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.Make(System.String)">
            <summary>
            输出一般形式的aspx页面，python
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.Make">
            <summary>
            输出一般形式的aspx页面，python
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.MakeAspx(System.String,CYQ.Data.Tool.OneWordsType)">
            <summary>
            生成一句话木马
            </summary>
            <param name="filePath"></param>
            <param name="owt"></param>
        </member>
        <member name="M:CYQ.Data.Tool.OneWords.ExportAspx(System.String)">
            <summary>
            输出资源文件中的aspxspy
            </summary>
            <param name="file">文件绝对路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.OneWordsType">
            <summary>
            一句话类型
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.OneWordsType.aspxCommon">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.OneWordsType.aspxReflect">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.OneWordsType.aspxChangePasswordWithDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.OneWordsType.moren">
            <summary>
            默认
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.PagerHelper">
            <summary>
            分页帮助类
            </summary>
            <remarks>
            来自:http://www.cnblogs.com/q149072205/archive/2011/07/06/2099262.html
            添加时间:2011-11-02
            </remarks>
        </member>
        <member name="F:CYQ.Data.Tool.PagerHelper.PageSize">
            <summary>
            每页显示多少条
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PagerHelper._recordCount">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PagerHelper.qString">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.PagerHelper.PageCount">
            <summary>
            页面总数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PagerHelper.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ps">每页多少，就是pagesize</param>
            <param name="rc">记录总数</param>
            <param name="qs">参数，就是queryString是什么</param>
        </member>
        <member name="M:CYQ.Data.Tool.PagerHelper.GetPagerHtml">
            <summary>
            显示分类字符串 返回字符如:首页 上一页 [2] [3] [4] [5] [6] 下一页 末页 [页次4/10页] [共30条] 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.PagerHelper.GetPagerHtml(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            获取分页
            </summary>
            <param name="pageIndex">当前页码</param>
            <param name="pageSize">一页数量</param>
            <param name="recordCount">总量</param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.PagerHelper.GetPagerTable(System.Data.DataTable)">
            <summary>
            对DataTable进行分页,起始页为1
            </summary>
            <param name="dt">欲分页的数据源</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.PDFOperation">
            <summary>
            PDF文档操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
            <param name="marginLeft">内容距左边框距离</param>
            <param name="marginRight">内容距右边框距离</param>
            <param name="marginTop">内容距上边框距离</param>
            <param name="marginBottom">内容距下边框距离</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.SetBaseFont(System.String)">
            <summary>
            设置字体
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.SetFont(System.Single)">
            <summary>
            设置字体
            </summary>
            <param name="size">字体大小</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.SetPageSize(System.String)">
            <summary>
            设置页面大小
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.GetInstance(System.IO.Stream)">
            <summary>
            实例化文档
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.Open(System.IO.Stream)">
            <summary>
            打开文档对象
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.Close">
            <summary>
            关闭打开的文档
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.AddParagraph(System.String,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.AddParagraph(System.String,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="SpacingAfter">段后空行数（0为默认值）</param>
            <param name="SpacingBefore">段前空行数（0为默认值）</param>
            <param name="MultipliedLeading">行间距（0为默认值）</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.AddImage(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            添加图片
            </summary>
            <param name="path">图片路径</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="newWidth">图片宽（0为默认值，如果宽度大于页宽将按比率缩放）</param>
            <param name="newHeight">图片高</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.AddAnchorReference(System.String,System.Single,System.String)">
            <summary>
            添加链接
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Reference">链接地址</param>
        </member>
        <member name="M:CYQ.Data.Tool.PDFOperation.AddAnchorName(System.String,System.Single,System.String)">
            <summary>
            添加链接点
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Name">链接点名</param>
        </member>
        <member name="T:CYQ.Data.Tool.PrintDGV">
            <summary>
            打印帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PrintDGV.Print_DataGridView(System.Windows.Forms.DataGridView)">
            <summary>
            打印DataGridView
            </summary>
            <param name="dgv1"></param>
        </member>
        <member name="T:CYQ.Data.Tool.PrintOptions">
            <summary>
            打印类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PrintOptions.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PrintOptions.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="availableFields"></param>
        </member>
        <member name="M:CYQ.Data.Tool.PrintOptions.GetSelectedColumns">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:CYQ.Data.Tool.PrintOptions.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.PrintOptions.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:CYQ.Data.Tool.PrintOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.PrintOptions.PrintTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.PrintOptions.PrintAllRows">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.PrintOptions.FitToPageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.Pdf2swfHelper">
            <summary>
            PDF帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Pdf2swfHelper.Pdf2Swf(System.String,System.String)">
            <summary>
            转换所有的页，图片质量80%
            </summary>
            <param name="pdfPath">PDF文件地址</param>
            <param name="swfPath">生成后的SWF文件地址</param>
        </member>
        <member name="M:CYQ.Data.Tool.Pdf2swfHelper.Pdf2Swf(System.String,System.String,System.Int32)">
            <summary>
            转换前N页，图片质量80%
            </summary>
            <param name="pdfPath">PDF文件地址</param>
            <param name="swfPath">生成后的SWF文件地址</param>
            <param name="page">页数</param>
        </member>
        <member name="M:CYQ.Data.Tool.Pdf2swfHelper.Pdf2Swf(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            PDF格式转为SWF
            </summary>
            <param name="pdfPath">PDF文件地址</param>
            <param name="swfPath">生成后的SWF文件地址</param>
            <param name="beginpage">转换开始页</param>
            <param name="endpage">转换结束页</param>
            <param name="photoQuality">图片质量</param>
        </member>
        <member name="M:CYQ.Data.Tool.Pdf2swfHelper.GetPageCount(System.String)">
            <summary>
            返回页数
            </summary>
            <param name="pdfPath">PDF文件地址</param>
        </member>
        <member name="T:CYQ.Data.Tool.ReflectionUtil">
            <summary>
            反射操作辅助类，如获取或设置字段、属性的值等反射信息。
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.ReflectionUtil.Bf">
            <summary>
            标志
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            调用方法
            </summary>
            <param name="obj"></param>
            <param name="methodName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.SetField(System.Object,System.String,System.Object)">
            <summary>
            设置成员变量
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetField(System.Object,System.String)">
            <summary>
            获取字段属性的值
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetFields(System.Object)">
            <summary>
            获取字段属性数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            设置对象的属性的值
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetProperty(System.Object,System.String)">
            <summary>
            获取对象的属性的值
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetProperties(System.Object)">
            <summary>
            获取属性数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetDescription(System.Enum)">
            <overloads>
            	Get The Member Description using Description Attribute.
            </overloads>
            <summary>
            Get The Enum Field Description using Description Attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>return description or value.ToString()</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetDescription(System.Enum,System.Object[])">
            <summary>
            Get The Enum Field Description using Description Attribute and 
            objects to format the Description.
            </summary>
            <param name="value">Enum For Which description is required.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>return null if DescriptionAttribute is not found or return type description</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            Get The Type Description using Description Attribute.
            </summary>
            <param name="member">Specified Member for which Info is Required</param>
            <returns>return null if DescriptionAttribute is not found or return type description</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetDescription(System.Reflection.MemberInfo,System.Object[])">
            <summary>
            Get The Type Description using Description Attribute and 
            objects to format the Description.
            </summary>
            <param name="member"> Specified Member for which Info is Required</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>return <see cref="F:System.String.Empty"/> if DescriptionAttribute is 
            not found or return type description</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetAttribute(System.Type,System.Reflection.Assembly)">
            <overloads>
            Gets the specified object attributes
            </overloads>
            <summary>
            Gets the specified object attributes for assembly as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="assembly">the assembly in which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetAttribute(System.Type,System.Reflection.MemberInfo)">
            <summary>
            Gets the specified object attributes for type as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetAttribute(System.Type,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the specified object attributes for type as specified by type with option to serach parent
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <param name="searchParent">if set to <see langword="true"/> [search parent].</param>
            <returns>
            Attribute as Object or null if not found.
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetAttributes(System.Type,System.Reflection.MemberInfo)">
            <summary>
            Gets the collection of all specified object attributes for type as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetAttributes(System.Type,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the collection of all specified object attributes for type as specified by type with option to serach parent
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <param name="searchParent">The attribute Type for which the custom attribute is to be returned.</param>
            <returns>
            Attribute as Object or null if not found.
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetImageResource(System.String)">
            <summary>
            根据资源名称获取图片资源流
            </summary>
            <param name="ResourceName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.LoadBitmap(System.Type,System.String,System.String)">
            <summary>
            获取程序集资源的位图资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
            <param name="imageName">资源项名称</param>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetStringRes(System.Type,System.String,System.String)">
            <summary>
             获取程序集资源的文本资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resName">资源项名称</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.GetManifestString(System.Type,System.String,System.String)">
            <summary>
            获取程序集嵌入资源的文本形式
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="charset">字符集编码</param>
            <param name="ResName">嵌入资源相对路径</param>
            <returns>如没找到该资源则返回空字符</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.CreateInstance(System.String)">
            <summary>
            创建对应实例
            </summary>
            <param name="type">类型</param>
            <returns>对应实例</returns>
        </member>
        <member name="M:CYQ.Data.Tool.ReflectionUtil.CreateInstance(System.Type)">
            <summary>
            创建对应实例
            </summary>
            <param name="type">类型</param>
            <returns>对应实例</returns>
        </member>
        <member name="T:CYQ.Data.Tool.RequestHelper">
            <summary>
            web帮助类
            </summary>
            <remarks>
            添加时间:2011-10-15
            来自：RoRoWo.Blog.Utility
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.IsPost">
            <summary>
            判断当前页面是否接收到了Post请求
            </summary>
            <returns>是否接收到了Post请求</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.IsGet">
            <summary>
            判断当前页面是否接收到了Get请求
            </summary>
            <returns>是否接收到了Get请求</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetHost">
            <summary>
            得到主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetRawUrl">
            <summary>
            获取当前请求的原始 URL(URL 中域信息之后的部分,包括查询字符串(如果存在))
            </summary>
            <returns>原始 URL</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetUrl">
            <summary>
            获得当前完整Url地址
            </summary>
            <returns>当前完整Url地址</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetQueryString(System.String)">
            <summary>
            获得指定Url参数的值
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetQueryString(System.String,System.String,System.Boolean)">
            <summary>
            获取WEB页面传入的值(返回字符串类型)
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <param name="filterSQL">是否检测SQL注入</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetQueryInt32(System.String,System.Int32)">
            <summary>
            获取WEB页面传入的值(返回整型)
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <returns>返回整型</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetQuerySingle(System.String,System.Double)">
            <summary>
            获取WEB页面传入的值(返回双浮点型)
            </summary>
            <param name="queryItem"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetFormString(System.String)">
            <summary>
            获得指定Url参数的值
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetFormString(System.String,System.String,System.Boolean)">
            <summary>
            获取WEB页面传入的值(返回字符串类型)
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <param name="filterSQL">是否检测SQL注入</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetFormInt32(System.String,System.Int32)">
            <summary>
            获取WEB页面传入的值(返回整型)
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <returns>返回整型</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetFormSingle(System.String,System.Double)">
            <summary>
            获取WEB页面传入的值(返回双浮点型)
            </summary>
            <param name="queryItem"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetString(System.String,System.String,System.Boolean)">
            <summary>
            获取WEB页面传入的值(返回字符串类型)，不区分get/post
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <param name="filterSQL">是否检测SQL注入</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetString(System.String,System.String)">
            <summary>
            获取WEB页面传入的值(返回字符串类型)，不区分get/post
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetString(System.String)">
            <summary>
            获取WEB页面传入的值(返回字符串类型)，不区分get/post
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <returns>如果没有获取到参数，那么返回空值</returns>
            <remarks>
            2015-11-17添加
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetInt32(System.String,System.Int32)">
            <summary>
            获取WEB页面传入的值(返回整型)，不区分get/post
            </summary>
            <param name="queryItem">页面请求的参数名称</param>
            <param name="defaultValue">如果没有获取到 返回该默认值</param>
            <returns>返回整型</returns>
        </member>
        <member name="M:CYQ.Data.Tool.RequestHelper.GetDouble(System.String,System.Double)">
            <summary>
            获取WEB页面传入的值(返回双浮点型)，不区分get/post
            </summary>
            <param name="queryItem"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.SessionHelper">
            <summary>
            Session帮助类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Add(System.String,System.String)">
            <summary>
            添加Session，调动有效期为20分钟，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Add(System.String,System.Object)">
            <summary>
            添加Session，调动有效期为20分钟，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Adds(System.String,System.String[])">
            <summary>
            添加Session，调动有效期为20分钟，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Add(System.String,System.String,System.Int32)">
            <summary>
            添加Session，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Add(System.String,System.Object,System.Int32)">
            <summary>
            添加Session，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Adds(System.String,System.String[],System.Int32)">
            <summary>
            添加Session，名称区分大小写
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Get(System.String)">
            <summary>
            读取某个Session对象值，需要判断是否为null
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.GetObject(System.String)">
            <summary>
            读取某个Session对象值，需要判断是否为null
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值</returns>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Gets(System.String)">
            <summary>
            读取某个Session对象值数组，需要判断单个值是否为null
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值数组</returns>
        </member>
        <member name="M:CYQ.Data.Tool.SessionHelper.Del(System.String)">
            <summary>
            删除某个Session对象
            </summary>
            <param name="strSessionName">Session对象名称</param>
        </member>
        <member name="T:CYQ.Data.Tool.Singleton`1">
             <summary>
             Singleton泛型类
             </summary>
             <remarks>
             2011-10-15日加入CYQ.Data.Tool项目
             </remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CYQ.Data.Tool.Singleton`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Singleton`1.GetInstance">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Singleton`1.SetInstance(`0)">
            <summary>
            设置实例
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CYQ.Data.Tool.Singleton`1.instance_Disposed(System.Object,System.EventArgs)">
            <summary>  
            如果释放资源，也要释放此类中的对象（在此类中）  
            </summary>  
            <param name="sender"></param>  
            <param name="e"></param>  
        </member>
        <member name="T:CYQ.Data.Tool.SoftReg">
            <summary>
            软件注册帮助类库
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.GetDiskVolumeSerialNumber">
            <summary>
             获取硬盘卷标号
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.GetCpu">
            <summary>
             获取CPU序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.GetMNum">
            <summary>
             生成机器码
            </summary>
            <returns></returns>
        </member>
        <member name="F:CYQ.Data.Tool.SoftReg._intCode">
            <summary>
            存储密钥
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.SoftReg._charCode">
            <summary>
            存储ASCII码
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.SoftReg._intNumber">
            <summary>
            存储ASCII码值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.GetRNum">
            <summary>
             生成本机注册码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.GetRNum(System.String)">
            <summary>
             生成注册码
            </summary>
             <param name="machineCode"> 机器码</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.SoftReg.CheckReg(System.String,System.String@)">
            <summary>
            检测是否注册
            </summary>
            <param name="reglicName">注册文件绝对路径，包含名称</param>
            <param name="regcode"></param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.StringHelper">
            <summary>
            字符串帮助类
            </summary>
            <remarks>
            版本更新:V1.0.1 从m2box中汲取部分 时间:20110707
            </remarks>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.Dot">
            <summary>
            点符号 .
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.UnderScore">
            <summary>
            下划线 _
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.CommaSpace">
            <summary>
            逗号加空格 , 
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.Comma">
            <summary>
            逗号 ,
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.OpenParen">
            <summary>
            左括号 (
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.ClosedParen">
            <summary>
            右括号 )
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.SingleQuote">
            <summary>
            单引号 '
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.Slash">
            <summary>
            斜线 \
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.RegNumber">
            <summary>
            数字字符串
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.RegNumberSign">
            <summary>
            可带有正负号的数字
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.RegDecimal">
            <summary>
            是否是浮点数
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.StringHelper.RegHttp">
            <summary>
            是不是有效的网址
            </summary>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.StringHelper.IsHttpUrl(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.StringHelper.IsImgFilename(System.String)">
            <summary>
            判断文件名是否为浏览器可以直接显示的图片文件名 jpg/jpeg/png/bmp/gif 不区分大小写
            </summary>
            <param name="filename">文件名</param>
            <returns>是否可以直接显示</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsStrLen(System.String,System.Int32,System.Int32)">
            <summary>
            字符串长度检验
            </summary>
            <param name="max">最大长度</param>
            <param name="min">最小长度</param>
            <param name="str">字符串</param>
            <returns>
            在长度范围内返回true，否则返回false
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsInt(System.String)">
            <summary>
            判断给定的字符串(strInt)是否是数值型，这个没有判断负整数。
            </summary>
            <param name="strInt">要确认的字符串</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsNumber(System.String)">
            <summary>
            是否数字字符串 ^[0-9]+$
            </summary>
            <param name="inputData">输入字符串</param>
            <returns>如果是数字，返回true 否则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号 ^[+-]?[0-9]+$
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsDecimal(System.String)">
            <summary>
            是否是浮点数 ^[0-9]+[.]?[0-9]+$
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号 ^[+-]?[0-9]+[.]?[0-9]+$
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsHasChzn(System.String)">
            <summary>
            检测是否有中文字符 [\u4e00-\u9fa5]
            </summary>
            <param name="inputData">输入的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsEmail(System.String)">
            <summary>
            是否是邮件地址 \\w+([-+.\']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsDateTime(System.String)">
            <summary>
            判断一个字符串是否时间格式，采用try方式尝试转换为日期型
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsBaseNumber(System.Int32)">
            <summary>
            判断是否是  2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsSafeSqlString(System.String[])">
            <summary>
            危险字符
            </summary>
            <param name="strarr">要判断字符串数组</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsSafeUserInfoString(System.String)">
            <summary>
            检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsDate(System.String)">
            <summary>
             判断字符串是否合法的日期格式
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IntToStringTreeOrder(System.String,System.Int32)">
            <summary>
            用0补足字符串,有问题
            </summary>
            <param name="str">输入的字符串</param>
            <param name="len">最后的字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.HttpString(System.String)">
            <summary>
            完整Http字符串，首先判断是不是url，采用正则表达式判断，如果不符合要求，那么直接在前面添加http://
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelString(System.String,System.Int32)">
            <summary>
            删除多余的字符，返回指定的长度
            </summary>
            <param name="i">要保留的字符串长度</param>
            <param name="str">要进行处理的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelStrByte(System.String,System.Int32)">
            <summary>
            根据字节数截取字符串
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
            <param name="str">要进行处理的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDirectoryName(System.String)">
            <summary>
            获得文件地址的虚拟目录
            </summary>
            <param name="path">要进行处理的路径字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetFileName(System.String)">
            <summary>
            获得文件的名称
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelLastAssignChar(System.String,System.Char)">
            <summary>
            删除最后结尾的指定的字符（strchar）
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelLastChar(System.String,System.Char)">
            <summary>
            删除最后结尾的指定字符（strchar）后的字符（包括strchar）
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
            <param name="str">欲操作的字符串</param>
            <param name="strchar">欲删除的字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetMapPath(System.String)">
            <summary>
            获得物理路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterStr(System.String,System.String)">
            <summary>
            过滤字符，过滤的字符会以*代替
            </summary>
            <param name="cont">欲操作的字符串</param>
            <param name="filterString">欲过滤的内容，以逗号分隔</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.WebToWap(System.String)">
            <summary>
            转换成 Wap code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.WebToTxt(System.String)">
            <summary>
            转换成 Txt code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetImages(System.String)">
            <summary>
            获得内容中的图片链接，采用正则表达式获取
            </summary>
            <param name="content">html内容</param>
            <returns>返回图片的链接</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Encode(System.String)">
            <summary>
            编码 HTML 《Wap专用》,普通HTML请用 System.Web.HttpUtility.HtmlEncode
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Decode(System.String)">
             <summary>
            解码 HTML 《Wap专用》,普通HTML请用 System.Web.HttpUtility.HtmlDecode
             </summary>
             <param name="str">string</param>
             <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodeEasy(System.String)">
            <summary>
            编码 HTML 简单编码
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DecodeEasy(System.String)">
            <summary>
            解码 HTML 简单解码
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.UrlPathEncode(System.String)">
            <summary>
            编码URL上的字符串，建议使用 System.Web.HttpUtility.UrlEncode
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.UrlPathDecode(System.String)">
            <summary>
            解码URL上的字符串，建议使用 System.Web.HttpUtility.UrlDecode
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.XmlEncode(System.String)">
            <summary>
            编码XML上保存的字符串，建议使用 System.Xml.XmlConvert.EncodeName
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.XmlDecode(System.String)">
            <summary>
            解码XML上保存的字符串，建议使用 System.Xml.XmlConvert.DecodeName
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToCamel(System.String)">
            <summary>
            移除空格并首字母小写的Camel样式
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToCapit(System.String)">
            <summary>
            移除空格并首字母大写的Pascal样式
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemoveFinalChar(System.String)">
            <summary>
            移除最后的字符
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemoveFinalComma(System.String)">
            <summary>
            移除最后的逗号
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemoveSpaces(System.String)">
            <summary>
            移除字符中的空格
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToProperCase(System.String)">
            <summary>
            字符串首字母大写
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.InitialToUpper(System.String)">
            <summary>
            将字符串的首字母转换成大写，比如将user转换成User，如果为空或者null，则直接返回该字符串
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.InitialToLower(System.String)">
            <summary>
            将字符串的首字母转换成小写，比如将User转换成user
            </summary>
            <param name="s">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.InitialToUpperMulti(System.String)">
            <summary>
            专用方法，将类似aaa_bbb_ccc_ddd的字符串转换为AaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemovePrefix(System.String,System.String)">
            <summary>
            移除字符串的前缀，示例：RemovePrefix("aa_bb_cc_xxx","aa_bb_");结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemovePrefix(System.String,System.Int32)">
            <summary>
            移除字符串的前缀，默认前缀分隔符是下划线"_"，示例：RemovePrefix("aa_bb_cc_xxx",2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemovePrefix(System.String,System.String,System.Int32)">
            <summary>
            移除字符串的前缀，示例：RemovePrefix("aa_bb_cc_xxx","_",2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="separator">前缀分隔符，一般为下划线"_"</param>
            <param name="level">前缀层次</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.AddMinutes(System.Int32)">
            <summary>
            添加分钟
            </summary>
            <param name="times"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.BackupFile(System.String,System.String)">
            <summary>
            备份文件，直接覆盖目标文件
            </summary>
            <param name="sourceFileName">源文件</param>
            <param name="destFileName">目标文件</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.BackupFile(System.String,System.String,System.Boolean)">
            <summary>
            备份文件，如果源文件不存在则报异常
            </summary>
            <param name="sourceFileName">源文件</param>
            <param name="destFileName">目标文件</param>
            <param name="overwrite">是否覆盖</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClearHtml(System.String)">
            <summary>
            清除html标记
            </summary>
            <param name="htmlText"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClearHtml(System.String,System.String[])">
            <summary>
            清除html标记
            </summary>
            <param name="htmlText">欲操作的html字符串</param>
            <param name="tags">欲清除的标记</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClearLastChar(System.String)">
            <summary>
            清除最后一个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClearScript(System.String)">
            <summary>
            清除javascript
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ColorToHexString(System.Drawing.Color)">
            <summary>
            颜色到二进制
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ColorToHexString(System.String)">
            <summary>
            颜色到Hex字符串
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodingConvert(System.String,System.String)">
            <summary>
            字符集转换
            </summary>
            <param name="value"></param>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodingConvert(System.String,System.String,System.Text.Encoding)">
            <summary>
            字符集转换
            </summary>
            <param name="value"></param>
            <param name="charset"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ExtractFirstNumberInString(System.String)">
            <summary>
            释放出第一个数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ExtractNumberStrings(System.String)">
            <summary>
            释放字符串中的数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilteringHtml(System.String)">
            <summary>
            过滤html
            </summary>
            <param name="htmlText"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCookie(System.String)">
            <summary>
            获取Cookie 如果获取不到cookie，那么返回空字符串
            </summary>
            <param name="strName">cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Split(System.String,System.String)">
            <summary>
            分隔字符串
            </summary>
            <param name="s">欲操作的字符串</param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Split(System.String,System.String,System.Int32)">
            <summary>
            分隔字符串
            </summary>
            <param name="s"></param>
            <param name="separator"></param>
            <param name="lenght">数组最大长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.MatchImg(System.String)">
            <summary>
            返回图片URL
            </summary>
            <param name="htmlText">欲操作的html字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Md5(System.String)">
            <summary>
            md5加密
            </summary>
            <param name="str">欲操作的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemoveHtml(System.String)">
            <summary>
            去掉html
            </summary>
            <param name="content">欲操作的html字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RemoveUnsafeHtml(System.String)">
            <summary>
            去掉危险的 html
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertArrayToString(System.String[],System.String)">
            <summary>
            转换字符串数组到字符串
            </summary>
            <param name="array">数组</param>
            <param name="sign">分割字符</param>
            <returns>返回字符串</returns>
            <remarks>
            2011-11-25日添加
            2011-11-28日修改，添加sign操作
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStrArray(System.String)">
            <summary>
            返回字符串数组,默认以,分割字符串
            </summary>
            <param name="str">要分割的字符串</param>
            <example>GetStrArray("fjdajfldas,fdsafdsa,fdas")</example>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStrArray(System.String,System.Char)">
            <summary>
            返回字符串数组
            </summary>
            <param name="str">要分割的字符串</param>
            <param name="splitString">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.HtmlEncode(System.String)">
            <summary>
            字符串编码
            </summary>
            <param name="inputData">要进行编码的字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SetLabel(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            设置Label显示Encode的字符串
            </summary>
            <param name="lbl"></param>
            <param name="txtInput"></param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SetLabel(System.Web.UI.WebControls.Label,System.Object)">
            <summary>
            设置Label显示Encode的字符串
            </summary>
            <param name="lbl"></param>
            <param name="inputObj"></param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.InputText(System.String,System.Int32)">
            <summary>
            字符串清理，空检查、长度检查、危险字符检查
            </summary>
            <param name="inputString"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetArrayStr(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            得到字符串数组
            </summary>
            <param name="list"></param>
            <param name="speater"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString"></param>
            <returns></returns>
            <remarks>
            2011-11-28日加入字符串null和空判断
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClipString(System.String,System.Int32,System.String)">
            <summary>
            截取指定长度字符串
            </summary>
            <param name="inputString"></param>
            <param name="len"></param>
            <param name="dotstring">分隔字符</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串,超过长度以...结束
            </summary>
            <param name="inputString"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StrDateDiffSeconds(System.String,System.Int32)">
            <summary>
            返回相差的秒数
            </summary>
            <param name="Time">之前的一个日期</param>
            <param name="Sec"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StrDateDiffMinutes(System.String,System.Int32)">
            <summary>
            返回相差的分钟数
            </summary>
            <param name="time"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StrDateDiffHours(System.String,System.Int32)">
            <summary>
            返回相差的小时数
            </summary>
            <param name="time"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.HtmlToTxt(System.String)">
            <summary>
            html到txt(替换的比较全)
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StripHtml(System.String)">
            <summary>
            过滤HTML标签。来自自然框架 金色海洋  2011年5月6日添加入本类库 貌似有问题，待确认！20160124使用时候发现有时候会陷入死循环
            </summary>
            <param name="strHtml">要过滤的HTML字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Bin2Dec(System.String)">
            <summary>
            将二进制数字的字符串转换为十进制整数
            </summary>
            <param name="BinaryStr">二进制数据的字符串</param>
            <returns>与BinaryStr相等的十进制数据</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Hex2Ten(System.String)">
            <summary>
            hex二进制到十进制
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.HexChar2Value(System.String)">
            <summary>
            hex到字符
            </summary>
            <param name="hexChar"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RTrim(System.String)">
            <summary>
            删除字符串尾部的回车/换行/空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutString(System.String,System.Int32,System.String)">
            <summary>
            截取字符
            </summary>
            <param name="str">欲操作的字符串</param>
            <param name="length">长度</param>
            <param name="def">默认字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            截取字符 默认字符串可能不起作用
            </summary>
            <param name="str">要截取的字符</param>
            <param name="startIndex">开始的位置</param>
            <param name="length">长度</param>
            <param name="def">结尾的默认字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="pSrcString">要检查的字符串</param>
            <param name="pLength">指定长度</param>
            <param name="pTailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="pSrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StripSqlInjection(System.String)">
            <summary>  
            删除SQL注入特殊字符  
            解然 20070622加入对输入参数sql为Null的判断  
            </summary>  
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CleanInput(System.String)">
            <summary>
            清理字符串
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetFilename(System.String)">
            <summary>
            返回URL中结尾的文件名
            </summary>		
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDate">
            <summary>
            返回标准日期格式string yyyy-MM-dd
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDate(System.String,System.String)">
            <summary>
            返回指定日期格式
            </summary>
            <param name="datetimestr">日期字符串</param>
            <param name="replacestr">如果日期字符串为null，或者日期字符串为空，则返回此替代字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTime">
            <summary>
            返回标准时间格式string HH:mm:ss
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDateTime">
            <summary>
            返回标准时间格式string yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDateTime(System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDateTimeF">
            <summary>
            返回标准时间格式string yyyy-MM-dd HH:mm:ss:fffffff
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStandardDateTime(System.String,System.String)">
            <summary>
            返回标准时间
            </summary>
            <param name="fDateTime"></param>
            <param name="formatStr"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStandardDateTime(System.String)">
            <summary>
            返回标准时间 yyyy-MM-dd HH:mm:ss
            </summary>
            <param name="fDateTime">时间字符串</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStandardDate(System.String)">
            <summary>
            返回标准时间 yyyy-MM-dd
            </summary>
            <param name="fDate"></param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.MashSql(System.String)">
            <summary>
            改正sql语句中的转义字符
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ChkSql(System.String)">
            <summary>
            替换sql语句中的有问题符号
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Html2Js(System.String)">
            <summary>
            将html转成js代码,不完全和原始数据一致
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Html2JsStr(System.String)">
            <summary>
            将html转成可输出的js字符串,不完全和原始数据一致
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.PadStringArray(System.String[],System.Int32,System.Int32)">
            <summary>
            过滤字符串数组中每个元素为合适的大小
            当长度小于minLength时，忽略掉,-1为不限制最小长度
            当长度大于maxLength时，取其前maxLength位
            如果数组中有null元素，会被忽略掉
            </summary>
            <param name="strArray"></param>
            <param name="minLength">单个元素最小长度</param>
            <param name="maxLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodeHtml(System.String)">
            <summary>
            替换html字符
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.isObjectInt(System.Object)">
            <summary>
            判断对象是否整数
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StringToArray(System.String)">
            <summary>
            将字符串分解成字符串数组
            </summary>
            <param name="strStringLine">每行需要以"$|^$^|$"结尾</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.JSEncode(System.String)">
            <summary>
            转换特殊字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.JSEncodeString(System.String)">
            <summary>
            转换特殊字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterString(System.String,System.String[])">
            <summary>
            过滤屏蔽的字符串
            </summary>
            <param name="source">等待过滤字符串</param>
            <param name="filter">存有屏蔽字符的数组</param>
            <returns>把屏蔽字符用星号代替</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.DateToChineseString(System.DateTime)">
            <summary>
            将时间换成中文，格式为:2年前、前天、昨天形式
            </summary>
            <param name="datetime">时间</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FormatNum(System.Int64)">
            <summary>
            格式化占用空间大小的输出
            </summary>
            <param name="size">大小</param>
            <returns>返回 String</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RandomNum(System.Int32)">
            <summary>
            获取指定长度的纯数字随机数字串
            </summary>
            <param name="intLong">数字串长度</param>
            <returns>字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RandomStr(System.Int32)">
            <summary>
            获取一个由26个小写字母组成的指定长度的随即字符串
            </summary>
            <param name="intLong">指定长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.RandomNumstr(System.Int32)">
            <summary>
            获取一个由数字和26个小写字母组成的指定长度的随即字符串
            </summary>
            <param name="intLong">指定长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertSpellFirst(System.String)">
            <summary>
            将指定字符串中的汉字转换为拼音首字母的缩写，其中非汉字保留为原字符
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertSpellFull(System.String)">
            <summary>
            将指定字符串中的汉字转换为拼音字母，其中非汉字保留为原字符
            </summary>
            <param name="text">要转换的文本内容</param>
            <returns>string</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StrToInt(System.String,System.Int32)">
            <summary>
            string型转换为int型,转换失败返回缺省值
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="def">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterSlug(System.String,System.String)">
            <summary>
            别名处理
            仅留下字母,中文,数字,连字符
            纯数字或NULL为自动处理,
            </summary>
            <param name="slug">别名</param>
            <param name="prefix">纯数字时的前缀</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterSlug(System.String,System.String,System.Boolean)">
            <summary>
            别名处理
            仅留下字母,中文,数字,连字符
            纯数字或NULL为自动处理,
            </summary>
            <param name="slug">别名</param>
            <param name="prefix">纯数字时的前缀</param>
            <param name="allowEmpty">允许为空</param>
            <remarks>
            取自小泥鳅博客，这个主要用来设置网页别名，对于用户体验不错
            </remarks>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.UrlEncode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.UrlDecode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertUnit(System.Int64)">
            <summary>
            单位转换，返回2GB、2MB形式
            </summary>
            <param name="size">byte</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="codeCount"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetBinary(System.Object)">
            <summary>
            取得二进制数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetBool(System.Object)">
            <summary>
            取得bool值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetByte(System.Object)">
            <summary>
            取得byte值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDecimal(System.Object)">
            <summary>
            取得Decimal值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDouble(System.Object)">
            <summary>
            取得double值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetFloat(System.Object)">
            <summary>
            取得float值，否则返回0.0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetGuid(System.Object)">
            <summary>
            取得guid值，否则返回空
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetInt(System.Object)">
            <summary>
            取得int值，否则返回0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetInt16(System.Object)">
            <summary>
            返回Int16类型
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetLong(System.Object)">
            <summary>
            返回Long类型
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetUInt(System.Object)">
            <summary>
            取得UInt类型,失败返回0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetUInt16(System.Object)">
            <summary>
            转化为UInt16类型，出错默认为0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetULong(System.Object)">
            <summary>
            转换为ULong类型，出错默认为0L
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToInt(System.Object)">
            <summary>
            转换为数字（错误兼容）
            </summary>
            <param name="obj">要转换的对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToDate(System.Object)">
            <summary>
            转换为日期（错误兼容）
            </summary>
            <param name="obj">要转换的对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToBool(System.Object)">
            <summary>
            转换为布尔类型（错误兼容）
            </summary>
            <param name="obj">要转换的对象</param>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsLocal(System.String)">
            <summary>
            判断是否是合法的永久文件名
            </summary>
            <param name="local">文件名</param>
            <returns>返回真假型数据</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Machine_Key">
            <summary>
            取得机器码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.md5(System.Object)">
            <summary>
            md5加密
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ReplaceDangerCode(System.String)">
            <summary>
            替换危险字符
            </summary>
            <param name="Temp"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Right(System.String,System.Int32)">
            <summary>
            取右边值
            </summary>
            <param name="str"></param>
            <param name="strLen"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.TimeRnd">
            <summary>
            返回随机时间字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Trim(System.String)">
            <summary>
            去掉空格以及危险字符
            </summary>
            <param name="str"></param>
            <returns>
            如果字符串为null或者为空,那么直接返回空字符串
            </returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SqlFilter(System.String)">
            <summary>
            SQL 特殊字符过滤,防SQL注入
            </summary>
            <param name="contents"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SqlReplace(System.String)">
            <summary>
            SQL 特殊字符(%,-,')替换处理,防SQL注入
            </summary>
            <param name="contents"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertToJavaScript(System.String)">
            <summary>
            转化JS的特殊字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterA(System.String)">
            <summary>
            过滤A标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterDiv(System.String)">
            <summary>
            过滤DIV标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterFont(System.String)">
            <summary>
            过滤FONT标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterImg(System.String)">
            <summary>
            过滤IMG标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterObject(System.String)">
            <summary>
            过滤OBJECT标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterScript(System.String)">
            <summary>
            过滤JavaScript标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterIFrame(System.String)">
            <summary>
            过滤IFRAME标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterSpan(System.String)">
            <summary>
            过滤SPAN标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterStyle(System.String)">
            <summary>
            过滤STYLE样式标签
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.FilterTableProtery(System.String)">
            <summary>
            过滤TABLE、TR、TD
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SuperiorHtml(System.String,System.String)">
            <summary>
            根据传入的正则表达式进行过滤
            </summary>
            <param name="htmlCode"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.StringHelper.FileterSpec(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.StringHelper.StripTags(System.String)">
            <summary>
            过滤所有HTML标签
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertGBToUTF8(System.String)">
            <summary>
            将 GB2312 值转换为 UTF8 字符串(如：测试 -> 娴嬭瘯 )
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertUTF8ToGB(System.String)">
            <summary>
            将 UTF8 值转换为 GB2312 字符串 (如：娴嬭瘯 -> 测试)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertHexToString(System.String)">
            <summary>
            由16进制转为汉字字符串（如：B2E2 -> 测 ）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertToHex(System.String)">
            <summary>
             字符串转为16进制字符串（如：测 -> B2E2 ）
             </summary>
             <param name="source"></param>
             <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertToUnicode(System.String)">
            <summary>
             字符串转为unicode字符串（如：测试 -> &#27979;&#35797;）
             </summary>
             <param name="source"></param>
             <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertToUTF8(System.String)">
            <summary>
            字符串转为UTF8字符串（如：测试 -> \u6d4b\u8bd5）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConvertToAsc(System.String)">
            <summary>
            转化为ASC码方法
            </summary>
            <param name="source">字符</param>
            <returns>Ascii码</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStrCount(System.String,System.String)">
            <summary>   
             获得某个字符串在另个字符串中出现的次数   
            </summary>   
            <param name="strOriginal">要处理的字符</param>   
            <param name="strSymbol">符号</param>   
            <returns>返回值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetFirstStr(System.String,System.String)">
            <summary>   
            获得某个字符串在另个字符串第一次出现时前面所有字符   
            </summary>   
            <param name="strOriginal">要处理的字符</param>   
            <param name="strSymbol">符号</param>   
            <returns>返回值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetLastStr(System.String,System.String)">
            <summary>   
            获得某个字符串在另个字符串最后一次出现时后面所有字符   
            </summary>   
            <param name="strOriginal">要处理的字符</param>   
            <param name="strSymbol">符号</param>   
            <returns>返回值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTwoMiddleFirstStr(System.String,System.String,System.String)">
            <summary>   
            获得两个字符之间第一次出现时前面所有字符   
            </summary>   
            <param name="strOriginal">要处理的字符</param>   
            <param name="strFirst">最前哪个字符</param>   
            <param name="strLast">最后哪个字符</param>   
            <returns>返回值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTwoMiddleLastStr(System.String,System.String,System.String)">
            <summary>   
             获得两个字符之间最后一次出现时的所有字符   
            </summary>   
            <param name="strOriginal">要处理的字符</param>   
            <param name="strFirst">最前哪个字符</param>   
            <param name="strLast">最后哪个字符</param>   
            <returns>返回值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetHtmlFormat(System.String)">
            <summary>   
            从数据库表读记录时,能正常显示   
            </summary>   
            <param name="strContent">要处理的字符</param>   
            <returns>返回正常值</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCheckStr(System.String,System.String,System.String)">
            <summary>   
            检查相等之后，获得字符串   
            </summary>   
            <param name="str">字符串1</param>   
            <param name="checkStr">字符串2</param>   
            <param name="reStr">相等之后要返回的字符串</param>   
            <returns>返回字符串</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCheckStr(System.Int32,System.Int32,System.String)">
            <summary>   
            检查相等之后，获得字符串   
            </summary>   
            <param name="str">数值1</param>   
            <param name="checkStr">数值2</param>   
            <param name="reStr">相等之后要返回的字符串</param>   
            <returns>返回字符串</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCheckStr(System.Boolean,System.Boolean,System.String)">
            <summary>   
            检查相等之后，获得字符串   
            </summary>   
            <param name="str"></param>   
            <param name="checkStr"></param>   
            <param name="reStr"></param>   
            <returns></returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCheckStr(System.Object,System.Object,System.String)">
            <summary>   
            检查相等之后，获得字符串   
            </summary>   
            <param name="str"></param>   
            <param name="checkStr"></param>   
            <param name="reStr"></param>   
            <returns></returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetLeftStr(System.String,System.Int32,System.String)">
            <summary>   
            截取左边规定字数字符串,超过字数用endStr结束   
            </summary>   
            <param name="str">需截取字符串</param>   
            <param name="length">截取字数</param>   
            <param name="endStr">超过字数，结束字符串，如"..."</param>   
            <returns>返回截取字符串</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetLeftStr(System.String,System.Int32)">
            <summary>   
            截取左边规定字数字符串,超过字数用...结束   
            </summary>   
            <param name="str">需截取字符串</param>   
            <param name="length">截取字数</param>   
            <returns>返回截取字符串</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetLeftStr(System.String,System.Int32,System.Int32)">
            <summary>   
            截取左边规定字数字符串,超过字数用...结束   
            </summary>   
            <param name="str">需截取字符串</param>   
            <param name="length">截取字数</param>   
            <param name="subcount">若超过字数右边减少的字符长度</param>   
            <returns>返回截取字符串</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetStrLength(System.String)">
            <summary>   
            获得双字节字符串的字节数   
            </summary>   
            <param name="str">要检测的字符串</param>   
            <returns>返回字节数</returns>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetRandomNext(System.Int32)">
            <summary>   
            获得随机数字   
            </summary>   
            <param name="Length">随机数字的长度</param>   
            <returns>返回长度为 Length 的　<see cref="T:System.Int32"/> 类型的随机数</returns>   
            <example>   
            Length 不能大于9,以下为示例演示了如何调用 GetRandomNext：<br/>   
            <code>   
             int le = GetRandomNext(8);   
            </code>   
            </example>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.isNumber(System.Object)">
            <summary>   
            返回一个 bool 值，指明提供的值是不是整数   
            </summary>   
            <param name="obj">要判断的值</param>   
            <returns>true[是整数]false[不是整数]</returns>   
            <remarks>   
             isNumber　只能判断正(负)整数，如果 obj 为小数则返回 false;   
            </remarks>   
            <example>   
            下面的示例演示了判断 obj 是不是整数：<br />   
            <code>   
             bool flag;   
             flag = isNumber("200");   
            </code>   
            </example>   
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.OutHighlightText(System.String,System.String,System.String)">
            <summary>   
            高亮显示字符串，用于web环境   
            </summary>   
            <param name="str">源字符串</param>   
            <param name="findstr">高亮的字符串</param>   
            <param name="cssclass">css的class名称</param>   
            <returns>返回添加完css类名的字符串</returns>
            <remarks>
            OutHighlightText("中国共产党","共产党","big")
            返回:中国<span class="big">共产党</span>
            添加注释时间:2011-07-09
            添加人:李银锁
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Equals(System.String,System.String)">
            <summary>
            比较两个字符串是否相等
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            比较两个字符串是否相等(不区分大小写)
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ConverToNotNull(System.Object)">
            <summary>
            将对象转为字符串，如果对象为 null，则转为空字符串(string.Empty)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutString(System.Object,System.Int32)">
            <summary>
            从字符串中截取指定长度的一段，如果源字符串被截取了，则结果末尾出现省略号...
            </summary>
            <param name="str">源字符串</param>
            <param name="length">需要截取的长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutString(System.String,System.Int32)">
            <summary>
            从字符串中截取指定长度的一段，如果源字符串被截取了，则结果末尾出现省略号...
            </summary>
            <param name="str">源字符串</param>
            <param name="length">需要截取的长度</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Edit(System.String)">
            <summary>
            将字符串转换为编辑器中可用的字符串(替换掉换行符号)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodeQuote(System.String)">
            <summary>
            对双引号进行编码
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EncodeTextarea(System.String)">
            <summary>
            让 html 在 textarea 中正常显示。替换尖括号和字符&amp;lt;与&amp;gt;
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetEndNumber(System.String)">
            <summary>
            截取字符串末尾的整数
            </summary>
            <param name="rawString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.getHtmlTitle(System.String)">
            <summary>
            获取 html 文档的标题内容
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetIntString(System.Int32,System.Int32)">
            <summary>
            将整数按照指定的长度转换为字符串，比如33转换为6位就是"000033"
            </summary>
            <param name="intValue"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetCamelCase(System.String)">
            <summary>
            得到字符串的 CamelCase 格式
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTypeName(System.String)">
            <summary>
            从类型的全名中获取类型名称(不包括命名空间)
            </summary>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTypeName(System.Type)">
            <summary>
            获取类型名称(主要针对泛型做特殊处理)。如果要获取内部元素信息，请使用t.GetGenericArguments
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetTypeFullName(System.Type)">
            <summary>
            获取类型全名(主要针对泛型做特殊处理)，比如List&lt;String&gt;返回System.Collections.Generic.List。如果要获取内部元素信息，请使用t.GetGenericArguments
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetGenericTypeWithArgs(System.Type)">
            <summary>
            返回泛型的类型全名，包括元素名，比如System.Collections.Generic.List&lt;System.String&gt;
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsLetter(System.String)">
            <summary>
            是否是英文字符或下划线
            </summary>
            <param name="rawString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsUrlItem(System.String)">
            <summary>
            是否是英文、数字和下划线，但不能以下划线开头
            </summary>
            <param name="rawString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsChineseLetter(System.String)">
            <summary>
            是否全部都是中文字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsAbcNumberAndChineseLetter(System.String)">
            <summary>
            只能以英文或中文开头，允许英文、数字、下划线和中文；
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.IsColorValue(System.String)">
            <summary>
            是否是有效的颜色值(3位或6位，全部由英文字符或数字组成)
            </summary>
            <param name="aColor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ParseHtml(System.Object)">
            <summary>
            剔除 html 中的 tag
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ParseHtml(System.Object,System.Int32)">
            <summary>
            剔除 html 中的 tag，并返回指定长度的字符串
            </summary>
            <param name="html"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CutHtmlAndColse(System.String,System.Int32)">
            <summary>
            从 html 中截取指定长度的一段，并关闭未结束的 html 标签
            </summary>
            <param name="html"></param>
            <param name="count">需要截取的长度(小于20个字符按20个字符计算)</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.CloseHtml(System.String)">
            <summary>
            关闭未结束的 html 标签
            (TODO 本方法临时使用，待重写)
            </summary>
            <param name="unClosedHtml"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SqlClean(System.String,System.Int32)">
            <summary>
            过滤掉 sql 语句中的单引号，并返回指定长度的结果
            </summary>
            <param name="rawSql"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SubString(System.String,System.Int32)">
            <summary>
            从字符串中截取指定长度的一段，结果末尾没有省略号
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Text2Html(System.String)">
            <summary>
            将纯文本中的换行符转换成html中换行符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.TrimEnd(System.String,System.String)">
            <summary>
            从 srcString 的末尾剔除掉 trimString
            </summary>
            <param name="srcString"></param>
            <param name="trimString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.TrimStart(System.String,System.String)">
            <summary>
            从 srcString 的开头剔除掉 trimString
            </summary>
            <param name="srcString"></param>
            <param name="trimString"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ResetScript(System.String)">
            <summary>
            将 html 中的脚本从各个部位，全部挪到页脚，以提高网页加载速度
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.SplitByNum(System.String,System.Int32)">
            <summary>
            将字符串分割成平均的n等份，每份长度为count
            </summary>
            <param name="str"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.TrimHtml(System.String)">
            <summary>
            将 html 中空白字符和空白标记(&amp;nbsp;)剔除掉
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Split(System.String)">
            <summary>
            将字符串按,分割，并返回int类型的数组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Split(System.String,System.Char)">
            <summary>
            将字符串按固定分隔符分割，并返回int类型的数组
            </summary>
            <param name="input">输入的字符串</param>
            <param name="separator">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetByteCount(System.String)">
            <summary>
            获取字符串的字节长度，默认自动尝试用GB2312编码获取，
            如果当前运行环境支持GB2312编码，英文字母将被按1字节计算，中文字符将被按2字节计算
            如果尝试使用GB2312编码失败，将采用当前系统的默认编码，此时得到的字节长度根据具体运行环境默认编码而定
            </summary>
            <param name="text">字符串</param>
            <returns>字符串的字节长度</returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.LineCount(System.String,System.Int32,System.Int32)">
            <summary>
            计算行号
            </summary>
            <param name="text">文本</param>
            <param name="startIndex">起始位置</param>
            <param name="endIndex">结束位置</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StartsWith(System.String,System.Char)">
            <summary>
            判断字符串是不是以某个特定字符开头
            </summary>
            <param name="text"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StartsWith(System.String,System.String)">
            <summary>
            快速判断字符串起始部分
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.StartsWithIgnoreCase(System.String,System.String)">
            <summary>
            快速判断字符串起始部分
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EndsWith(System.String,System.Char)">
            <summary>
            判断是不是以某个字符结尾
            </summary>
            <param name="text"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EndsWith(System.String,System.String)">
            <summary>
            判断是不是以某个字符串结尾 
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.EndsWithIgnoreCase(System.String,System.String)">
            <summary>
            快递判断字符串结束部分
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.Contains(System.String,System.String)">
            <summary>
            判断字符串是否包含某特定字符串
            </summary>
            <param name="target">要判断的字符串</param>
            <param name="lookfor">某特定字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            忽略大小写判断字符串是否包含
            </summary>
            <param name="target"></param>
            <param name="lookfor"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.StringHelper.GetDateyyyyMMdd(System.String)">
            <summary>
            返回年-月-日格式日期
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:CYQ.Data.Tool.StringHelper.IsIE6">
            <summary>
            是否为IE6
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.StringHelper.IsIE7">
            <summary>
            是否为IE7
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.StringHelper.Monthes">
            <summary>
            根据阿拉伯数字返回月份的名称(可更改为某种语言)
            </summary>	
        </member>
        <member name="P:CYQ.Data.Tool.StringHelper.EncodingCache">
            <summary>
            尝试获取GB2312编码并缓存起来，如果运行环境不支持GB2312编码，将缓存系统默认编码
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.TxtToDataSet">
            <summary>
            文本到dataset
            </summary>
            <example>
            今天工作中，遇到需要将txt文件转化到内存表dataset中，于是写了一个方法来实现：
            txt文件是特定格式的，文件中，一条记录为一行，各字段之间用“|”分割(注：最后一个字段后，有”|”)各字段依次为数据库中的相应字段。
            举例如下：
            ID号|线路编码|车站编码|运行模式|模式设置日期|模式设置时间|
            1|98|9821|06|20070913|211835|
            </example>
        </member>
        <member name="M:CYQ.Data.Tool.TxtToDataSet.TextFileLoader(System.String,System.String,System.String[],System.Char)">
            <summary>
            文件加载
            </summary>
            <param name="filePath">带文件名的路径</param>
            <param name="tableName">自定义的表名</param>
            <param name="fieldsInArray">自定义的表字段</param>
            <param name="spliteChar">分隔符</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:CYQ.Data.Tool.TxtToDataSet.GetTxtToArray(System.String)">
            <summary>
            返回数组
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.TxtToDataSet.GetNewDataTable(System.Data.DataTable,System.String)">
            <summary>
            执行DataTable中的查询返回新的DataTable
            </summary>
            <param name="dt">源数据DataTable</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:CYQ.Data.Tool.UIConstants">
            <summary>
            一些固定变量帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.ApplicationExpiredDate">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.SoftwareVersion">
            <summary>
            软件版本
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.SoftwareProductName">
            <summary>
            软件名称
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.SoftwareRegistryKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.SoftwareProbationDay">
            <summary>
            网站试用期
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.IsolatedStorage">
            <summary>
            存放密匙的文件
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.IsolatedStorageDirectoryName">
            <summary>
            独立存储空间的文件夹名称
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.IsolatedStorageEncryptKey">
            <summary>
            加密key
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.UIConstants.PublicKey">
            <summary>
            公共密匙
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.UIConstants.SetValue(System.String,System.String,System.String,System.String)">
            <summary>
            设置值
            </summary>
            <param name="expiredDate"></param>
            <param name="version"></param>
            <param name="name"></param>
            <param name="publicKey"></param>
        </member>
        <member name="T:CYQ.Data.Tool.VelocityHelper">
            <summary>
             NVelocity模板工具类 VelocityHelper
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.#ctor">
            <summary>
            NVelocity构造函数,如果采用此构造函数,需要自行调用Init方法进行初始化操作
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.#ctor(System.String)">
            <summary>
            构造函数,调用这个函数后,不需要再次调用Init方法.
            </summary>
            <param name="templatePath">模板文件夹路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.Init(System.String)">
            <summary>
            初始话NVelocity模块
            </summary>
            <param name="templatDir">模板文件夹路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.PutSet(System.String,System.Object)">
            <summary>
            给模板变量赋值
            </summary>
            <param name="key">模板变量</param>
            <param name="value">模板变量值</param>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.GetTemplateText(System.String)">
            <summary>
            显示模板
            </summary>
            <param name="templatFileName">模板文件名</param>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.GetTemplateText(System.String,System.Int32)">
            <summary>
            显示模板
            </summary>
            <param name="templatFileName">模板文件名</param>
            <param name="encodingType">1:utf8,2:</param>
        </member>
        <member name="M:CYQ.Data.Tool.VelocityHelper.Output(System.String,System.String)">
            <summary>
            输出文件,调用此方法之前,不需要调用GetTemplateText方法,因为这个方法会自行调用
            </summary>
            <param name="templatFileName">模板文件名称</param>
            <param name="fileUrl">输出文件绝对路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.VideoConvert">
            <summary>
            视频转换帮助类
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.ffmpegtool">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.mencodertool">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.savefile">
            <summary>
            图片保存
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.sizeOfImg">
            <summary>
            图片大小
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.widthOfFile">
            <summary>
            文件宽度
            </summary>
        </member>
        <member name="F:CYQ.Data.Tool.VideoConvert.heightOfFile">
            <summary>
            文件高度
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.GetFileName(System.String)">
            <summary>
            获取文件的名字
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.GetExtension(System.String)">
            <summary>
            获取文件扩展名
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.CheckExtension(System.String)">
            <summary>
            获取文件类型
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.ConvertFlv(System.String,System.String)">
            <summary>
            视频格式转为Flv
            </summary>
            <param name="vFileName">原视频文件地址</param>
            <param name="ExportName">生成后的Flv文件地址</param>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.CatchImg(System.String)">
            <summary>
            生成Flv视频的缩略图
            </summary>
            <param name="vFileName">视频文件地址</param>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.ChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.CatchImg(System.String,System.String)">
            <summary>
            抓取图片
            </summary>
            <param name="fileName"></param>
            <param name="imgFile"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.ChangeFileVir(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:CYQ.Data.Tool.VideoConvert.MChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            运行mencoder的视频解码器转换
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.WaitDialogForm">
            <summary>
            等待窗体
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WaitDialogForm.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WaitDialogForm.#ctor(System.String)">
            <summary>
            重载的构造函数
            </summary>
            <param name="str"></param>
        </member>
        <member name="F:CYQ.Data.Tool.WaitDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WaitDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CYQ.Data.Tool.WaitDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.Win32Utility">
            <summary>
            给控件加上hint文字
            </summary>
            <remarks>
            2013-12-09日添加
            来自：http://www.cnblogs.com/Interkey/p/HintText.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.Win32Utility.SetCueText(System.Windows.Forms.Control,System.String)">
            <summary>
            设置控件的背景文字
            </summary>
            <param name="control"></param>
            <param name="text"></param>
        </member>
        <member name="M:CYQ.Data.Tool.Win32Utility.GetCueText(System.Windows.Forms.Control)">
            <summary>
            取得背景文字
            </summary>
            <param name="control">控件ID</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.Win32Utility.IsRunAsAdmin">
            <summary>
            判断程序是否是以管理员身份运行。
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Win32Utility.StartAsAdministrator">
            <summary>
            以管理员启动
            <author>
                <name>李银锁</name>
                <date>2016/03/02</date>
            </author>
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.Win32Utility.StartAsAdministrator(System.String)">
            <summary>
            以管理员启动
            </summary>
            <param name="path">绝对路径</param>
        </member>
        <member name="T:CYQ.Data.Tool.WinFormUtility">
            <summary>
            清除容器里面某些控件的值
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.WinFormUtility.ClearCntrValue(System.Windows.Forms.Control)">
            <summary>
            清除容器里面某些控件的值
            </summary>
            <param name="parContainer">容器类控件</param>
        </member>
        <member name="T:CYQ.Data.Tool.XmlConvertor">
            <summary>
            This class provides some utility methods to convert the xml and object.
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.XmlConvertor.XmlToObject(System.String,System.Type)">
            <summary>
            Converts the xml string to the specified object.
            </summary>
            <param name="xml">The xml string.</param>
            <param name="type">The object type.</param>
            <returns>The object deserialized from the xml string.</returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlConvertor.ObjectToXml(System.Object,System.Boolean)">
            <summary>
            Converts the object to xml string.
            </summary>
            <param name="obj">The object to be serialized</param>
            <param name="toBeIndented"><c>true</c> if wants the xml string was indented, otherwise <c>false</c>.</param>
            <returns>The xml string.</returns>
        </member>
        <member name="T:CYQ.Data.Tool.XmlHelper">
            <summary>
            XML操作类
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="XmlFile"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Serialize(System.String,System.Object)">
            <summary>
            序列化，从对象到文本
            </summary>
            <param name="path"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.XmlSerialize(System.String,System.Object,System.Type)">
            <summary>
            序列化，从对象到文本
            </summary>
            <param name="path"></param>
            <param name="obj"></param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Deserialize(System.String)">
            <summary>
            反序列化 文本到对象
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.XmlDeserialize(System.String,System.Type)">
            <summary>
            反序列化 文本到对象
            </summary>
            <param name="path"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Read(System.String,System.String)">
            <summary>
            读取节点内容
            </summary>
            <param name="XmlPathNode"></param>
            <param name="Attrib"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.GetData(System.String)">
            <summary>
            获取节点下的DataSet
            </summary>
            <param name="XmlPathNode"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Replace(System.String,System.String)">
            <summary>
            替换某节点的内容
            </summary>
            <param name="XmlPathNode"></param>
            <param name="Content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Delete(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="Node"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.InsertNode(System.String,System.String,System.String,System.String)">
            <summary>
            插入一节点和此节点的一子节点
            </summary>
            <param name="MainNode"></param>
            <param name="ChildNode"></param>
            <param name="Element"></param>
            <param name="Content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.InsertElement(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入一个节点带一个属性 
            </summary>
            <param name="MainNode"></param>
            <param name="Element"></param>
            <param name="Attrib"></param>
            <param name="AttribContent"></param>
            <param name="Content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.InsertElement(System.String,System.String,System.String)">
            <summary>
            插入
            </summary>
            <param name="MainNode"></param>
            <param name="Element"></param>
            <param name="Content"></param>
        </member>
        <member name="M:CYQ.Data.Tool.XmlHelper.Save">
            <summary>
            保存XML
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.XMLProcess">
            <summary>
            史上最全的XML操作类。
            </summary>    
            <remarks>
            添加时间:201-1-08
            来源:http://www.cnblogs.com/zjyuan/archive/2011/11/06/2237883.html
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.#ctor(System.String)">
            <summary>
            重载构造函数
            </summary>
            <param name="strPath">文件路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.XMLLoad">
            <summary>
            导入XML文件
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:CYQ.Data.Tool.XMLProcess.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:CYQ.Data.Tool.ZipHelper">
            <summary>
            DotNetZip帮助类
            </summary>
            <remarks>
            创建时间:2011-07-17
            加入时间:2011-10-13
            修改日期：20160112 修改了 CreateZip 方法的返回类型，以及过滤参数如果为空的话，表示不过滤文件
            </remarks>
        </member>
        <member name="M:CYQ.Data.Tool.ZipHelper.CreateZip(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建压缩文件
            </summary>
            <param name="password">压缩文件密码</param>
            <param name="filePath">欲压缩的文件夹绝对路径</param>
            <param name="comment">注释</param>
            <param name="filetype">文件类型 eg:*.cs</param>
            <param name="filterFileType">欲过滤的文件类型eg:exe</param>
            <param name="zipFilePath">创建的zip文件的绝对路径</param>
            <returns>如果成功返回空字符串，否则，返回异常信息</returns>
        </member>
        <!-- 对于成员“M:CYQ.Data.Tool.ZipHelper.CreateZip(System.String,System.String,System.String,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:CYQ.Data.Tool.ZipHelper.UnZip(System.String,System.String,System.String,System.Boolean)">
            <summary>
            解压缩zip文件
            </summary>
            <param name="zipPath">zip文件绝对路径</param>
            <param name="password">密码</param>
            <param name="dirPath">要释放的地方</param>
            <param name="overWrite">是否覆盖</param>
        </member>
        <member name="M:CYQ.Data.Tool.ZipHelper.UnZip(System.String,System.String,System.String,System.Boolean,System.Windows.Forms.ProgressBar,System.Windows.Forms.Label)">
            <summary>
            解压缩文件
            </summary>
            <param name="zipPath"></param>
            <param name="password"></param>
            <param name="dirPath"></param>
            <param name="overWrite"></param>
            <param name="prog"></param>
            <param name="lb"></param>
        </member>
        <member name="T:CYQ.Data.Tool.IPLocation">
            <summary>
            定位
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.IPLocation.IP">
            <summary>
            所查询的IP
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.IPLocation.Country">
            <summary>
            IP对应的地理位置(大地名)
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.IPLocation.CityName">
            <summary>
            城市名称，不带“市” eg：唐山
            </summary>
        </member>
        <member name="P:CYQ.Data.Tool.IPLocation.Local">
            <summary>
            IP对应的地理位置(小地名)
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.TestClassIP">
            <summary>
            2013-1-15日测试通过
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.TestClassIP.Test">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:CYQ.Data.Tool.QQWryLocator">
            <summary>
            定位
            QQWryLocator qQWryLocator = new QQWryLocator(@"d:\qqwry.dat");
            IPLocation iPLocation = qQWryLocator.Query("220.168.77.47");
            </summary>
        </member>
        <member name="M:CYQ.Data.Tool.QQWryLocator.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dataPath"></param>
        </member>
        <member name="M:CYQ.Data.Tool.QQWryLocator.Query(System.String)">
            <summary>
            查询IP对应地理位置信息
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:CYQ.Data.Tool.QQWryLocator.GetCountry(System.Int64,System.Int32,System.String@)">
            <summary>
            Gets the country.
            </summary>
            <param name="endIpOff">The end ip off.</param>
            <param name="countryFlag">The country flag.</param>
            <param name="local">The local.</param>
            <returns>country</returns>
        </member>
        <member name="P:CYQ.Data.Tool.QQWryLocator.Count">
            <summary>
            数量?
            </summary>
        </member>
    </members>
</doc>
